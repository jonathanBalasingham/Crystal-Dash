{"version":3,"sources":["features/search/searchSlice.js","features/auth/authSlice.js","components/search/SearchBar.js","features/compare/compareSlice.js","components/search/SearchFacetSettings.js","components/compare/CompareAppTopBar.js","components/compare/CompareAppMenuSettings.js","features/app/appSlice.js","features/view/viewSlice.js","components/search/QueryResultDropdownData.js","components/search/QueryResult.js","components/search/CrystalList.js","features/create/createSlice.js","components/compare/CompareAppMenuGraphSelectionButton.js","components/compare/CompareAppMenuGraphSelection.js","components/compare/views/Panel.tsx","components/compare/views/ClustersPanel.js","components/compare/CompareAppMenuClusterSelection.js","components/compare/CompareAppMenu.js","Loading.js","components/compare/CirclePacking.js","components/compare/Sunburst.js","components/compare/canvas-utils.ts","components/compare/use-debounce.ts","components/compare/views/GraphSettingsController.tsx","features/preview/previewSlice.js","components/compare/views/GraphEventsController.tsx","components/compare/views/GraphDataController.tsx","components/compare/views/SearchField.js","components/base/geometry.js","components/PreviewPanel.js","components/compare/views/Root.js","components/compare/ForceDirectedGraph.js","components/compare/CompareAppPlot.js","components/search/SearchResults.js","components/search/SearchSettings.js","components/search/SearchPanel.js","components/compare/PreviewList.js","components/compare/CompareAppMain.js","components/compare/CompareApp.js","components/view/ViewAppPlaceholder.js","components/view/PeriodicTable.js","components/view/ViewAppElementSettings.js","components/view/ViewAppCanvas.js","components/view/ViewAppMain.js","components/view/ViewAppTopBar.js","components/view/ViewApp.js","components/create/CreateAppTopBar.js","components/base/InputField.js","components/create/CreateAppCoordinateSwitch.js","components/home/CIFHelpers.js","components/create/CreateAppMainCrystal.js","components/create/CreateAppMainSubset.js","components/create/CreateAppMainSource.js","components/create/CreateAppMain.js","components/create/CreateApp.js","components/home/AtomTable.js","components/home/BondTable.js","components/home/UnitCellTable.js","components/home/SymmetryTable.js","components/home/AMDTable.js","components/home/PDDTable.js","components/home/CrystalAccordionBody.js","features/home/homeSlice.js","components/home/CrystalAccordion.js","components/home/SimilarCrystalsTable.js","components/home/CrystalCreateAccordion.js","components/home/RecentCrystalAccordionList.js","components/home/SearchAccordion.js","components/home/HomeAppTopBar.js","components/home/CrystalAccordionList.js","components/home/SourceAccordion.js","components/home/SourceCreateAccordion.js","components/home/SourceAccordionList.js","components/home/CrystalTable.js","components/home/SubsetAccordion.js","components/home/SubsetCreateAccordion.js","components/home/SubsetAccordionList.js","components/home/HomeAppMain.js","components/home/HomeApp.js","components/ApplicationBay.js","features/settings/settingsFooterSlice.js","components/LeftSideBarButton.js","Logo.js","components/SideBarLogo.js","components/LeftSideBar.js","components/Dashboard.js","components/create/CreateModal.js","components/SettingsModal.js","components/AppHeader.js","App.js","reportWebVitals.js","features/options/optionsSlice.js","store.js","components/TabSelector.js","Login.js","index.js","useToken.js"],"names":["searchPanelSlice","createSlice","name","initialState","searchPanelOpened","currentContent","resultSize","facet","k","n","results","match","searchFor","reducers","openSearchPanel","state","action","console","log","closeSearchPanel","toggleSearchPanel","changeContent","payload","change","actions","getSearchPanelOpened","createSelector","p","getContent","getK","getFacet","getResultSize","getResults","getNorm","getCompType","getMatch","authSlice","addAccessToken","sessionStorage","setItem","addRefreshToken","addUser","setLoggedIn","getAccessToken","getRefreshToken","getCurrentUser","SearchBar","dispatch","useDispatch","useState","query","setQuery","useSelector","token","resSize","compType","refreshToken","user","matchType","search","a","fetch","method","headers","body","JSON","stringify","then","resp","status","clear","undefined","window","location","reload","json","r","jwt","access","refresh","url","data","fetchResults","e","preventDefault","res","className","onSubmit","placeholder","onChange","target","value","onFocus","compareSlice","addComp","newState","includes","concat","addComps","i","length","removeComp","filter","x","clearComp","setGraphType","gt","setMeasure","setK","Number","setKx","setKy","setThreshold","setFiltered","setMaxThreshold","setThresholds","setKs","setLinkage","setRendering","setCamera","setBox","setMenuOpen","toggleMenu","togglePreviewList","openPreviewList","toggleCrystalList","addToPreviewList","removeFromPreviewList","toggleSearchField","toggleClusterPanel","setBreakout","getComp","getGraphType","getKx","getKy","getMeasure","getThreshold","getMaxThreshold","getThresholds","getKs","getLinkage","getBox","getMenuOpen","getPreviewList","getPreviewListOpen","getSearchFieldOpen","getClusterPanelOpen","getCrystalListOpen","getBreakout","SearchFacetSettings","changeFacet","CompareAppTopBar","OverlayTrigger","placement","overlay","Tooltip","id","onClick","GraphControls","threshold","measure","maxThresh","type","min","max","step","toFixed","toUpperCase","ButtonGroup","style","Button","CircleControls","ks","thresholds","replaceKs","val","ind","kscopy","replaceThresholds","thresholds_copy","AMDControls","k_x","k_y","CircleSettings","settingsMap","CompareAppMenuSettings","plotType","appSlice","openViewApp","openCompareApp","openCreateApp","setSize","width","height","openHomeApp","getOpenApp","getWidth","getHeight","currentObject","menuOpen","viewSlice","addView","getViewObject","QueryResultDropdownData","label","value_result","getFamily","replace","getSubset","QueryResult","currentApp","addCrystal","addSubset","names","map","open","setOpen","addFamily","dis","addButton","dropdown","cx","AddedQueryResult","cname","addToComparison","CrystalList","currentComp","endRef","useRef","setFilter","filtered","str","output","toLowerCase","indexOf","numberOfResults","Math","resultsToRender","slice","useEffect","current","scrollIntoView","behavior","scrollToBottom","ref","readingFile","createModalOpened","currentTab","newSubsetName","newSubsetItems","crystal","atoms","bonds","setSymmetry","unitCell","setIsDisordered","currentMessage","source","coordinateSystem","sourceStatus","subsetStatus","sourceMessage","subsetMessage","createModalSlice","openCreateModal","toggleCreateModal","closeCreateModal","setTab","setReadingFile","setCurrentMessage","setAtoms","setBonds","setUnitCell","setCrystal","setSource","setCoordinateSystem","setStatus","setSubsetStatus","setSourceStatus","setSourceMessage","setSubsetMessage","getCreateModalOpened","getCurrentTab","getCurrentMessage","getSource","getCoordinateSystem","getStatus","getSubsetStatus","getSourceStatus","getSourceMessage","getSubsetMessage","CompareAppMenuGraphSelectionButton","text","icon","graphType","CompareAppMenuGraphSelection","Panel","title","initiallyDeployed","children","vis","isDeployed","setIsDeployed","dom","setTimeout","parentElement","scrollTo","top","offsetTop","v","duration","ClustersPanel","clusters","filters","toggleCluster","setClusters","graph","useSigma","getGraph","nodesPerCluster","useMemo","index","forEachNode","_","cluster","maxNodesPerCluster","values","visibleClustersCount","Object","keys","visibleNodesPerCluster","setVisibleNodesPerCluster","requestAnimationFrame","hidden","c","key","sortedClusters","sortBy","mapValues","keyBy","nodesCount","visibleNodesCount","checked","htmlFor","background","color","borderColor","clusterLabel","CompareAppMenuClusterSelection","breakout","changeBreakout","CompareAppMenu","Loading","props","xmlns","viewBox","preserveAspectRatio","transform","cy","fill","attributeName","begin","calcMode","keySplines","keyTimes","dur","repeatCount","LoadingCustom","innerHeight","innerWidth","MyResponsiveCirclePacking","zoomedId","setZoomedId","setDataReady","dataset","setDataset","linkage","loading","setLoading","d","join","margin","right","bottom","left","colors","scheme","childColor","from","modifiers","padding","enableLabels","labelsFilter","node","depth","labelsSkipRadius","labelTextColor","borderWidth","defs","rotation","lineWidth","spacing","motionConfig","flatten","reduce","acc","item","MyResponsiveSunburst","cornerRadius","theme","enableArcLabels","arcLabelsSkipAngle","arcLabelsTextColor","transitionMode","clickedData","foundObject","find","searchedName","TEXT_COLOR","drawLabel","context","settings","size","labelSize","font","labelFont","weight","labelWeight","measureText","fillStyle","fillRect","y","fillText","useDebounce","delay","debouncedValue","setDebouncedValue","handler","clearTimeout","GraphSettingsController","hoveredNode","hoveredEdge","sigma","debouncedHoveredNode","setSetting","subLabelSize","subLabel","tag","beginPath","shadowOffsetX","shadowOffsetY","shadowBlur","shadowColor","labelWidth","subLabelWidth","clusterLabelWidth","textWidth","round","w","hLabel","hSubLabel","ctx","radius","moveTo","lineTo","quadraticCurveTo","closePath","drawRoundRect","drawHover","getNodeDisplayData","hoveredColor","hasEdge","zIndex","image","highlighted","edge","hasExtremity","previewSlice","previewOpened","openPreview","closePreview","changeObject","getPreviewOpened","getObject","getX","getY","getMouseLayer","document","querySelector","GraphEventsController","setHoveredNode","setHoveredEdge","registerEvents","useRegisterEvents","clickNode","event","getNodeAttribute","clientX","clientY","enterNode","mouseLayer","classList","add","leaveNode","remove","cameraUpdated","point01","viewportToGraph","dims","getDimensions","point00","point11","box","enterEdge","leaveEdge","GraphDataController","nodes","forEach","addNode","omit","edges","addEdge","scores","setNodeAttribute","filterEdges","edgeAttributes","sourceId","targetId","sourcePosition","targetPosition","SearchField","setSearch","setValues","selected","setSelected","newValues","lcSearch","attributes","push","nodeDisplayData","getCamera","animate","ratio","hasNode","list","searchString","valueItem","onKeyPress","toCartesian","point","m1","m2","result","j","sum","multiplyMatrices","addVecs","b","cellParamsToMatrix","alpha","beta","gamma","volume","sqrt","cos","cellVolume","PI","sin","H_SIZE","ELEMENT_SIZE","getSize","sym","s","CPK","h","he","li","be","o","f","ne","na","mg","al","si","cl","ar","ca","sc","ti","cr","mn","fe","co","ni","cu","zn","ga","ge","as","se","br","kr","rb","sr","zr","nb","mo","tc","ru","rh","pd","ag","cd","in","sn","sb","te","xe","cs","ba","la","ce","pr","nd","pm","sm","eu","gd","tb","dy","ho","er","tm","yb","lu","hf","ta","re","os","ir","pt","au","hg","tl","pb","bi","po","at","rn","fr","ra","ac","th","pa","u","np","pu","am","cm","bk","cf","es","fm","md","no","lr","rf","db","sg","bh","hs","mt","ds","rg","cn","uut","uuq","uup","uuh","uus","uuo","modes","proxy","mode","ViewPanelSettings","getElementColor","g","rgb","toString","Atom","hover","clicked","click","scale","onPointerOver","onPointerOut","args","wireframe","Line","start","end","useLayoutEffect","geometry","setFromPoints","THREE","Controls","snap","useSnapshot","scene","useThree","TransformControls","object","getObjectByName","OrbitControls","makeDefault","minPolarAngle","maxPolarAngle","UnitCell","uc","Molecule","rotX","rotY","center","bondLocations","useFrame","delta","atomSet","mp","position","symbol","bondSet","Label1","Label2","MoleculeView","camera","fov","PreviewListItem","href","fontSize","PreviewPanel","modalOpened","content","XYAxis","amdx","amdy","xlab","ylab","Root","showContents","setShowContents","dataReady","tags","filtersState","setFiltersState","constant","graphOptions","initialSettings","nodeProgramClasses","getNodeProgramImage","labelRenderer","defaultNodeType","defaultEdgeType","labelDensity","labelGridCellSize","labelRenderedSizeThreshold","minCameraRatio","maxCameraRatio","renderEdgeLabels","ForceWrapper","graphData","nodeAutoColorBy","nodeLabel","ForceDirectedGraph","setData","Set","hoverNode","useCallback","arc","NODE_R","filteredLinks","links","link","filteredData","CompareAppPlotPlaceHolder","CompareAppPlot","comp","SearchResults","SearchSettings","SearchPanel","PreviewList","pl","previews","CompareAppMain","monitorHeight","refreshRate","render","CompareApp","openApp","Plane","gridHelper","MeshBasicMaterial","ViewAppPlaceHolder","PeriodicTable","ViewAppElementSettings","ViewAppCanvas","ViewAppMain","ViewAppTopBar","ViewApp","CreateAppTopBar","tab","getClass","currTab","thisTab","InputField","ph","required","CreateAppCoordinateSwitch","useFract","useCart","active","gcd","prime_comp","composition","counts","matchAll","elems","elem_counts","parseInt","gcd_counts","arr","findGCD","prime_counts","extractCrystalMetaData","cifAsJson","removeTrailing","safeParse","split","extractAtoms","atom","extractBonds","bond","parseFloat","extractUnitCell","symm","_space_group_symop_operation_xyz","total","_symmetry_equiv_pos","_symmetry_equiv_pos_as_xyz","final_symm","InputItem","DataItem","check","AtomRow","_atom_site_label","_atom_site_type_symbol","BondRow","_geom_bond_atom_site_label_1","_geom_bond_atom_site_label_2","_geom_bond_distance","SymmetryRow","_symmetry_equiv_pos_site_id","SymmetryRow2","CreationProgress","message","CreateAppMainCrystal","isFilePicked","setIsFilePicked","isParsed","setIsParsed","setCifAsJson","refCode","setRefCode","polymorph","setPolymorph","disabled","setDisabled","family","setFamily","parseCIF","fileContents","cifParser","changeHandler","file","files","parsed","createCrystal","String","colSpan","_atom_site","_geom_bond","CreateAppMainSubset","setName","refCodes","setRefCodes","refCodeText","setRefCodeText","createSubset","trim","CreateAppMainSource","urlRef","setURLRef","createSource","CreateAppMain","currentlyOpen","CreateApp","AtomTable","Distance","BondTable","UnitCellRow","A","B","C","Alpha","Beta","Gamma","CellVolume","UnitCellTable","SymmetryTable","splitSym","replaceAll","AMDRow","amd","AMDTable","PDDRow","pdd","PDDTable","CrystalAccordionBody","setActive","metricsLoaded","setMetricsLoaded","AMDs","setAMDs","PDDs","setPDDs","getMetrics","ID","charAt","SymmetryOperators","homeSlice","setCreatePanel","handleTickBox","setActiveAccordion","openCrystalCreate","openSubsetCreate","openSourceCreate","closeCrystalCreate","closeSubsetCreate","closeSourceCreate","setCrystalSearchResults","setSourceSearchResults","setSubsetSearchResults","flushCreateCrystal","flushCreateSubset","flushCreateSource","getSelected","getActiveAccordion","getCreateCrystalOpen","getCreateSubsetOpen","getCreateSourceOpen","getCrystalSearchResults","getSubsetSearchResults","getSourceSearchResults","CrystalAccordion","loaded","setLoaded","Form","Check","CreatedAt","SimilarCrystalRow","datum","Polymorph","Source","SimilarCrystalsTable","CrystalCreateAccordion","bodyOpen","setBodyOpen","pickedFile","setPickedFile","setValidRefCode","setMessage","sourceOptions","setSourceOptions","similarCrystals","setSimilarCrystals","getSources","Badge","bg","Group","controlId","Label","Control","variant","SelectedCount","RecentCrystalAccordionList","activeAccordion","CrystalFacetOptions","SourceFacetOptions","SubsetFacetOptions","SearchAccordion","setFacet","setMatchType","orderBy","setOrderBy","aa","inline","HomeAppTopBar","Breadcrumb","Item","CrystalAccordionList","SourceAccordion","SourceCreateAccordion","setType","SourceAccordionList","CrystalRow","Composition","CrystalTable","SubsetAccordion","Name","Crystals","SubsetCreateAccordion","previewData","setPreviewData","rows","SubsetAccordionList","HomeAppMain","HomeApp","ApplicationBay","settingsModalSlice","settingsModalOpened","potentialBackend","backend","openSettingsModal","closeSettingsModal","changePotentialBackend","setNewBackend","getSettingsModalOpened","getPotentialBackend","LeftSideBarButton","buttonIcon","show","hide","Ball","LeftSideBar","Dashboard","CreateCrystalPanel","CreateSourcePanel","CreateSubsetPanel","CreateModal","SettingsModal","potentialEndpoint","handleURLChange","healthCheck","response","ok","error","statusText","Promise","reject","catch","AppHeader","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","openOptionsPanelSlice","viewToggled","compareToggled","databaseToggled","settingsToggled","store","configureStore","reducer","optionsReducer","settingsReducer","authReducer","compareReducer","createReducer","searchReducer","previewReducer","appReducer","viewReducer","homeReducer","TabSelector","isActive","loginUser","credentials","createUser","LoginPage","setToken","useTabs","selectedTab","setSelectedTab","username","setUserName","password","setPassword","newusername","setNewUserName","newpassword","setNewPassword","email","setEmail","handleSubmit","handleCreation","Index","tokenString","getItem","parse","getToken","userToken","clearToken","removeItem","useToken","tokenChecked","setTokenChecked","path","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.776e613c.chunk.js","sourcesContent":["import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    searchPanelOpened: false,\n    currentContent: \"results\",\n    resultSize: 100,\n    facet: \"name\",\n    k: 100,\n    n: 2,\n    results: {\n        \"data\": [],\n        \"loading\": false,\n    },\n    \"compType\": \"standard\",\n    match: \"partial\",\n    searchFor: \"crystal\",\n};\n\nconst searchPanelSlice = createSlice({\n    name: 'searchPanelOpened',\n    initialState,\n    reducers: {\n        openSearchPanel(state, action) {\n            console.log(\"Opening modal\")\n            state[\"searchPanelOpened\"] = true;\n            return state;\n        },\n        closeSearchPanel(state, action) {\n            console.log(\"Closing modal\")\n            state[\"searchPanelOpened\"] = false;\n            return state;\n        },\n        toggleSearchPanel(state, action) {\n          state[\"searchPanelOpened\"] = !state[\"searchPanelOpened\"];\n          return state\n        },\n        changeContent(state, action){\n            console.log(\"Changing content\");\n            state[\"currentContent\"] = action.payload;\n            return state;\n        },\n        change(state, action){\n            return {\n                ...state,\n                ...action.payload\n            };\n        },\n    }\n})\n\nexport const { openSearchPanel, closeSearchPanel, changeContent, change, toggleSearchPanel } = searchPanelSlice.actions\n\nexport default searchPanelSlice.reducer\n\nexport const getSearchPanelOpened = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"searchPanelOpened\"]\n)\n\nexport const getContent = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"currentContent\"]\n)\n\nexport const getK = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"k\"]\n)\nexport const getFacet = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"facet\"]\n)\nexport const getResultSize = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"resultSize\"]\n)\n\nexport const getResults = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"results\"]\n)\n\nexport const getNorm = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"n\"]\n)\n\nexport const getCompType = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"compType\"]\n)\n\nexport const getMatch = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"match\"]\n)\n\nexport const getSearchFor = createSelector((state) => state.searchPanelSlice, (p) =>\n    p[\"searchFor\"]\n)\n","import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    \"access\": null,\n    \"refresh\": null,\n    \"user\": null,\n    \"email\": null,\n    \"loggedIn\": false,\n}\n\nconst authSlice = createSlice({\n    name: 'auth',\n    initialState,\n    reducers: {\n        addAccessToken(state, action) {\n            sessionStorage.setItem('access', action.payload);\n            return {\n                ...state,\n                \"access\": action.payload,\n            };\n        },\n        addRefreshToken(state, action) {\n            sessionStorage.setItem('refresh', action.payload);\n            return {\n                ...state,\n                \"refresh\": action.payload,\n            };\n        },\n        addUser(state, action) {\n            return {\n                ...state,\n                \"user\": action.payload,\n            }\n        },\n        setLoggedIn(state, action) {\n            return {\n                ...state,\n                ...action.payload\n            }\n        }\n    }\n})\n\nexport const { setLoggedIn, addUser, addAccessToken, addRefreshToken } = authSlice.actions\n\nexport default authSlice.reducer\n\nexport const getAccessToken = createSelector((state) => state.authSlice, (p) => {\n    return p['access']\n})\n\nexport const getRefreshToken = createSelector((state) => state.authSlice, (p) => {\n    return p['refresh']\n})\n\nexport const getCurrentUser = createSelector((state) => state.authSlice, (p) =>\n    p[\"user\"]\n)\n\nexport const getLoggedIn = createSelector((state) => state.authSlice, (p) =>\n    p[\"loggedIn\"]\n)","import {useDispatch, useSelector} from \"react-redux\";\nimport React, {useState} from \"react\";\nimport {\n    change,\n    changeContent,\n    getCompType,\n    getFacet,\n    getK, getMatch,\n    getNorm,\n    getResultSize,\n    openSearchPanel\n} from \"../../features/search/searchSlice\";\nimport {\n    addAccessToken,\n    addRefreshToken,\n    getAccessToken,\n    getCurrentUser,\n    getRefreshToken\n} from \"../../features/auth/authSlice\";\nimport {FaSearch} from \"react-icons/fa\";\nimport \"./search.scss\"\n\nexport const SearchBar = () => {\n    const dispatch = useDispatch()\n    const [query, setQuery] = useState('')\n\n    let facet = useSelector(getFacet)\n    let token = useSelector(getAccessToken)\n    let k = useSelector(getK)\n    let resSize = useSelector(getResultSize)\n    let n = useSelector(getNorm)\n    let compType = useSelector(getCompType)\n    let refreshToken = useSelector(getRefreshToken)\n    let user = useSelector(getCurrentUser)\n    let matchType = useSelector(getMatch)\n    console.log(`Match is ${matchType}`)\n\n    async function search() {\n        console.log(\"doing something\")\n        fetch(\"/api/token/refresh\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer:${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\"refresh\": refreshToken})\n        })\n            .then((resp) => {\n                if (resp.status !== 200) {\n                    sessionStorage.clear()\n                    dispatch(addAccessToken(undefined))\n                    dispatch(addRefreshToken(undefined))\n                    window.location.reload()\n                } else {\n                    resp.json()\n                        .then((r) => {\n                            console.log(r)\n                            let jwt = {\n                                \"access\": r.access,\n                                \"refresh\": r.refresh,\n                                \"user\": user\n                            }\n                            sessionStorage.setItem('token', JSON.stringify(jwt))\n                            dispatch(addAccessToken(jwt[\"access\"]))\n                            dispatch(addRefreshToken(jwt[\"refresh\"]))\n                        })\n                }\n            })\n\n        let url = `/api/search/crystal/${facet}/${query}?match=${matchType}&result_size=${resSize}&k=${k}&n=${n}&comp=${compType}`\n        if (facet === \"subset\") {\n            url = `/api/search/${facet}/${query}?match=${matchType}&result_size=${resSize}&aggregate=true`\n        }\n\n        return fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer:${token}`,\n            },\n        })\n            .then(data => data.json())\n    }\n\n\n    const fetchResults = async(e) => {\n        e.preventDefault();\n        dispatch(change({\"results\": {'data': [], 'loading': true}}))\n        dispatch(changeContent(\"results\"))\n        const res = await search(query, facet, k, resSize, n, compType, token)\n        dispatch(change({\"results\": {'data': res.data, 'loading': false}}))\n    }\n\n    return (\n        <div className=\"search-bar\">\n            <form onSubmit={fetchResults}>\n                <input className={\"search-query\"}  placeholder={\"Search\"}\n                       onChange={e => setQuery(e.target.value)}\n                       onFocus={() => dispatch(openSearchPanel(\"\"))} />\n            </form>\n        </div>\n    )\n}","import { createSlice, createSelector, current } from '@reduxjs/toolkit'\n\nconst initialState = {\n    \"data\": [],\n    \"rendering\": false,\n    \"graphtype\": \"amd\",\n    \"k\": 100,\n    \"measure\": \"pdd\",\n    \"threshold\": 5,\n    \"filtered\": false,\n    \"k_x\": 1,\n    \"k_y\": 2,\n    \"ks\": [1,10,100,100],\n    \"thresholds\":[0.01, 0.02, 0.05, 0.1],\n    \"linkage\": \"single\",\n    \"camera\": {},\n    \"box\": {\"x0\": 0, \"x1\": 0, \"y0\": 0, \"y1\":0},\n    \"breakout\": \"family\",\n    \"menuOpen\": false,\n    \"previewListOpen\": false,\n    \"previewList\": [],\n    \"crystalListOpen\": false,\n    \"clusterPanelOpen\": true,\n    \"searchFieldOpen\": true,\n}\n\nconst compareSlice = createSlice({\n    name: 'comp',\n    initialState,\n    reducers: {\n        addComp(state, action) {\n            let newState = state[\"data\"]\n            if (!state[\"data\"].includes(action.payload))\n                newState = state[\"data\"].concat([action.payload])\n\n            return {\n                ...state,\n                \"data\": newState\n            };\n        },\n        addComps(state, action) {\n            let newState = state[\"data\"]\n            for (let i = 0; i < action.payload.length; i++) {\n                if (!state[\"data\"].includes(action.payload[i]))\n                    newState = newState.concat([action.payload[i]])\n            }\n            return {\n                ...state,\n                \"data\": newState\n            };\n        },\n        removeComp(state, action) {\n            return {\n                ...state,\n                \"data\": state[\"data\"].filter(x => x !== action.payload)\n\n            };\n        },\n        clearComp(state, action){\n            return {\n                ...state,\n                \"data\": []\n            };\n        },\n        setGraphType(state, action) {\n            const gt  = action.payload\n            return {\n              ...state,\n              \"graphtype\": gt\n            };\n        },\n        setMeasure(state, action) {\n            return {\n                ...state,\n                \"measure\": action.payload\n            }\n        },\n        setK(state, action) {\n            return {\n                ...state,\n                \"k\": Number(action.payload)\n            }\n        },\n        setKx(state, action) {\n            return {\n                ...state,\n                \"k_x\": Number(action.payload)\n            }\n        },\n        setKy(state, action) {\n            return {\n                ...state,\n                \"k_y\": Number(action.payload)\n            }\n        },\n        setThreshold(state, action) {\n            return {\n                ...state,\n                \"filtered\": false,\n                \"threshold\": Number(action.payload)\n            }\n        },\n        setFiltered(state, action) {\n            return {\n                ...state,\n                \"filtered\": true,\n            }\n        },\n        setMaxThreshold(state, action) {\n            return {\n                ...state,\n                \"max_threshold\": Number(action.payload)\n            }\n        },\n        setThresholds(state, action) {\n            return {\n                ...state,\n                \"thresholds\": action.payload\n            }\n        },\n        setKs(state, action) {\n            return {\n                ...state,\n                \"ks\": action.payload\n            }\n        },\n        setLinkage(state, action) {\n            return {\n                ...state,\n                \"linkage\": action.payload\n            }\n        },\n        setRendering(state, action) {\n            return {\n                ...state,\n                \"rendering\": action.payload\n            }\n        },\n        setCamera(state, action) {\n            return {\n                ...state,\n                \"camera\": action.payload,\n            }\n        },\n        setBox(state, action) {\n            return {\n                ...state,\n                \"box\": action.payload,\n            }\n        },\n        setMenuOpen(state, action) {\n            return {\n                ...state,\n                \"menuOpen\": action.payload,\n            }\n        },\n        toggleMenu(state, action){\n            state[\"menuOpen\"] = !state[\"menuOpen\"]\n            return state\n        },\n        togglePreviewList(state, action){\n            state[\"previewListOpen\"] = !state[\"previewListOpen\"]\n            return state\n        },\n        openPreviewList(state, action){\n            state[\"previewListOpen\"] = true\n            return state\n        },\n        toggleCrystalList(state, action){\n            state[\"crystalListOpen\"] = !state[\"crystalListOpen\"]\n            return state\n        },\n        addToPreviewList(state, action) {\n            let newState = state[\"previewList\"]\n            if (!state[\"previewList\"].includes(action.payload))\n                newState = state[\"previewList\"].concat([action.payload])\n\n            return {\n                ...state,\n                \"previewList\": newState\n            };\n        },\n        removeFromPreviewList(state, action) {\n            return {\n                ...state,\n                \"previewList\": state[\"previewList\"].filter(x => x !== action.payload)\n            };\n        },\n        toggleSearchField(state, action){\n            state[\"searchFieldOpen\"] = !state[\"searchFieldOpen\"]\n            return state\n        },\n        toggleClusterPanel(state, action){\n            state[\"clusterPanelOpen\"] = !state[\"clusterPanelOpen\"]\n            return state\n        },\n        setBreakout(state, action) {\n            state[\"breakout\"] = action.payload\n            return state\n        }\n    }\n})\n\nexport const { addComp, addComps, removeComp, setGraphType, clearComp, setK, setKx, setKy,\n            setMeasure, setThreshold, setMaxThreshold, setThresholds, setKs, setLinkage,\n            setRendering, setCamera, setBox, setMenuOpen, toggleMenu, togglePreviewList,\n            toggleCrystalList, removeFromPreviewList, addToPreviewList, openPreviewList,\n            toggleClusterPanel, toggleSearchField, setBreakout} = compareSlice.actions\n\nexport default compareSlice.reducer\n\nexport const getComp = createSelector((state) => state.compareSlice, (p) =>\n    p[\"data\"]\n)\n\nexport const isRendering = createSelector((state) => state.compareSlice, (p) => p[\"rendering\"])\n\nexport const getGraphType = createSelector((state) => state.compareSlice, (p) => p[\"graphtype\"])\n\nexport const getK = createSelector((state) => state.compareSlice, (p) => p[\"k\"])\nexport const getKx = createSelector((state) => state.compareSlice, (p) => p[\"k_x\"])\nexport const getKy = createSelector((state) => state.compareSlice, (p) => p[\"k_y\"])\nexport const getMeasure = createSelector((state) => state.compareSlice, (p) => p[\"measure\"])\nexport const getThreshold = createSelector((state) => state.compareSlice, (p) => p[\"threshold\"])\nexport const getMaxThreshold = createSelector((state) => state.compareSlice, (p) => p[\"max_threshold\"])\nexport const getThresholds = createSelector((state) => state.compareSlice, (p) => p[\"thresholds\"])\nexport const getKs = createSelector((state) => state.compareSlice, (p) => p[\"ks\"])\nexport const getLinkage = createSelector((state) => state.compareSlice, (p) => p[\"linkage\"])\nexport const getCamera = createSelector((state) => state.compareSlice, (p) => p[\"camera\"])\nexport const getBox = createSelector((state) => state.compareSlice, (p) => p[\"box\"])\nexport const getMenuOpen = createSelector((state) => state.compareSlice, (p) => p[\"menuOpen\"])\nexport const getPreviewList = createSelector((state) => state.compareSlice, (p) => p[\"previewList\"])\nexport const getPreviewListOpen = createSelector((state) => state.compareSlice, (p) => p[\"previewListOpen\"])\nexport const getSearchFieldOpen = createSelector((state) => state.compareSlice, (p) => p[\"searchFieldOpen\"])\nexport const getClusterPanelOpen = createSelector((state) => state.compareSlice, (p) => p[\"clusterPanelOpen\"])\nexport const getCrystalListOpen = createSelector((state) => state.compareSlice, (p) => p[\"crystalListOpen\"])\nexport const getBreakout = createSelector((state) => state.compareSlice, (p) => p[\"breakout\"])\n","import React from \"react\";\nimport {change, getFacet} from \"../../features/search/searchSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\n\n\nexport const SearchFacetSettings = () => {\n    let dispatch = useDispatch()\n    let facet = useSelector(getFacet)\n\n    const changeFacet = (e) => {\n        dispatch(change({\"facet\": e.target.value}))\n        dispatch(change({\"results\": {'data': [], 'loading': false}}))\n    }\n\n    return (\n        <select name=\"By:\" className=\"search-facet\" value={facet} onChange={ e => changeFacet(e)}>\n            <option value=\"name\">Reference Code</option>\n            <option value=\"similarity\">Distance</option>\n            <option value=\"subset\">Subset</option>\n            <option value=\"composition\">Composition</option>\n        </select>\n    )\n}","import * as React from \"react\";\nimport './Compare.scss'\nimport {SearchBar} from \"../search/SearchBar\";\nimport {openSearchPanel, toggleSearchPanel} from \"../../features/search/searchSlice\";\nimport {useDispatch} from \"react-redux\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ListIcon from \"@mui/icons-material/List\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport PreviewIcon from \"@mui/icons-material/Preview\";\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport WorkspacesIcon from \"@mui/icons-material/Workspaces\"\nimport ManageSearchIcon from \"@mui/icons-material/ManageSearch\"\nimport {toggleCrystalList, toggleMenu, togglePreviewList, clearComp, toggleClusterPanel, toggleSearchField} from \"../../features/compare/compareSlice\";\nimport {SearchFacetSettings} from \"../search/SearchFacetSettings\";\nimport {OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\n\nexport function CompareAppTopBar() {\n    const dispatch = useDispatch()\n\n    const testOpen = () => {\n        console.log(\"opening panel\")\n    }\n\n    return (\n        <>\n            <div className=\"compare-app-top-bar\">\n                <div className={\"left-content\"}>\n                    <OverlayTrigger\n                        key={\"search-bottom\"}\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id=\"search-toggle-tooltip\">\n                                Search\n                            </Tooltip>\n                        }\n                    >\n                        <button onClick={() => dispatch(toggleSearchPanel(\"\"))}>\n                            <SearchIcon/>\n                        </button>\n                    </OverlayTrigger>\n                    <SearchBar/>\n                    <p>by:</p>\n                    <SearchFacetSettings/>\n                </div>\n                <div className={\"right-content\"}>\n                    <OverlayTrigger\n                        key={\"search-graph-bottom\"}\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id=\"search-graph-toggle-tooltip\">\n                                Toggle Search Panel\n                            </Tooltip>\n                        }\n                    >\n                        <button onClick={() => dispatch(toggleSearchField(\"\"))}>\n                            <ManageSearchIcon/>\n                        </button>\n                    </OverlayTrigger>\n\n                    <OverlayTrigger\n                        key={\"clusters-graph-bottom\"}\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id=\"cluster-graph-toggle-tooltip\">\n                                Toggle Clusters Panel\n                            </Tooltip>\n                        }\n                    >\n                        <button onClick={() => dispatch(toggleClusterPanel(\"\"))}>\n                            <WorkspacesIcon/>\n                        </button>\n                    </OverlayTrigger>\n                    <OverlayTrigger\n                        key={\"molview-bottom\"}\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id=\"molview-toggle-tooltip\">\n                                Molecule View\n                            </Tooltip>\n                        }\n                    >\n                        <button onClick={() => dispatch(togglePreviewList(\"\"))}>\n                            <PreviewIcon/>\n                        </button>\n                    </OverlayTrigger>\n\n                    <OverlayTrigger\n                        key={\"curcomp-bottom\"}\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id=\"cucomp-toggle-tooltip\">\n                                Current Comparison\n                            </Tooltip>\n                        }\n                    >\n                        <button onClick={() => dispatch(toggleCrystalList(\"\"))}>\n                            <ListIcon/>\n                        </button>\n                    </OverlayTrigger>\n\n                    <OverlayTrigger\n                        key={\"options-bottom\"}\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id=\"option-toggle-tooltip\">\n                                Menu\n                            </Tooltip>\n                        }\n                    >\n                        <button onClick={() => dispatch(toggleMenu(true))}>\n                            <SettingsIcon/>\n                        </button>\n                    </OverlayTrigger>\n\n                    <OverlayTrigger\n                        key={\"trash-bottom\"}\n                        placement=\"bottom\"\n                        overlay={\n                            <Tooltip id=\"trash-tooltip\">\n                                Remove All\n                            </Tooltip>\n                        }\n                    >\n                        <button onClick={() => dispatch(clearComp(true))}>\n                            <DeleteIcon/>\n                        </button>\n                    </OverlayTrigger>\n\n                </div>\n            </div>\n        </>\n    )\n}\n","import * as React from \"react\";\nimport './Compare.scss'\nimport '../../App.scss'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getMeasure,\n    getThreshold,\n    setK,\n    setMeasure,\n    setThreshold,\n    getK,\n    getMaxThreshold,\n    getKx,\n    getKy,\n    setKx,\n    setKy, setLinkage, getKs, setKs, getThresholds, setThresholds, getGraphType\n} from \"../../features/compare/compareSlice\";\nimport {Button, ButtonGroup} from \"react-bootstrap\";\n\n\n\nfunction GraphControls(){\n    const dispatch = useDispatch()\n    let threshold = useSelector(getThreshold)\n    let k = useSelector(getK)\n    let measure = useSelector(getMeasure)\n    let maxThresh = useSelector(getMaxThreshold)\n\n    return (\n        <>\n            <p>{`Nearest Neighbors: ${k}`}</p>\n            <input type=\"range\" id=\"k\" name=\"k\" onChange={e => dispatch(setK(e.target.value))}\n                   min=\"1\" max=\"200\" value={k} step=\"1\" className={\"range-style\"} />\n            <p>{`Edge Threshold: ${threshold.toFixed(6)}`}</p>\n            <input type=\"range\" id=\"threshold\" name=\"threshold\"\n                   onChange={e => dispatch(setThreshold(e.target.value))}\n                   min=\"0\" max={maxThresh} value={threshold} step={maxThresh / 100} className={\"range-style\"}  />\n            <p>{`Measure: ${measure.toUpperCase()}`}</p>\n            <ButtonGroup aria-label=\"Basic example\" style={{\"width\": \"100%\"}}>\n                <Button className=\"graph-control-button\" style={{\"fontSize\": \"13px\"}}\n                        onClick={() => dispatch(setMeasure(\"pdd\"))}>PDD</Button>\n                <Button className=\"graph-control-button\" style={{\"fontSize\": \"13px\"}}\n                        onClick={() => dispatch(setMeasure(\"amd\"))}>AMD</Button>\n            </ButtonGroup>\n        </>\n    )\n}\n\nfunction ThresholdSettings() {\n    return (\n        <>\n            <GraphControls/>\n        </>\n    )\n}\n\n\nfunction MSTSettings() {\n    return (\n        <>\n            <GraphControls/>\n        </>\n    )\n}\n\nfunction DendrogramSettings() {\n    return (\n        <>\n            <p>Dendrogram</p>\n        </>\n    )\n}\n\nfunction MapSettings() {\n    return (\n        <>\n            <GraphControls/>\n\n        </>\n    )\n}\n\nfunction CircleControls() {\n    const dispatch = useDispatch()\n    let ks = useSelector(getKs)\n    let thresholds = useSelector(getThresholds)\n\n    const replaceKs = (val, ind) => {\n        let kscopy = [...ks]\n        kscopy[ind] = val\n        dispatch(setKs(kscopy))\n    }\n\n    const replaceThresholds = (val, ind) => {\n        let thresholds_copy = [...thresholds]\n        thresholds_copy[ind] = val\n        dispatch(setThresholds(thresholds_copy))\n    }\n\n    return  (\n        <>\n            <p>{`Linkage:`}</p>\n            <select name=\"Linkage:\" id=\"linkage-select\" onChange={ e => dispatch(setLinkage(e.target.value))}>\n                <option value=\"single\">Single</option>\n                <option value=\"average\">Average</option>\n                <option value=\"complete\">Complete</option>\n            </select>\n            <p>{`Layer Nearest-Neighbors: ${ks}`}</p>\n            <input type=\"range\" id=\"ks1\" name=\"ks1\" onChange={e => replaceKs(e.target.value, 0)}\n                   min=\"1\" max=\"1000\" value={ks[0]} step=\"1\" className={\"range-style\"}  />\n            <input type=\"range\" id=\"ks2\" name=\"ks2\" onChange={e => replaceKs(e.target.value, 1)}\n                   min=\"1\" max=\"1000\" value={ks[1]} step=\"1\" className={\"range-style\"} />\n            <input type=\"range\" id=\"ks3\" name=\"ks3\" onChange={e => replaceKs(e.target.value, 2)}\n                   min=\"1\" max=\"1000\" value={ks[2]} step=\"1\" className={\"range-style\"} />\n            <input type=\"range\" id=\"ks4\" name=\"ks4\" onChange={e => replaceKs(e.target.value, 3)}\n                   min=\"1\" max=\"1000\" value={ks[3]} step=\"1\" className={\"range-style\"} />\n            <p>{`Layer Distance Threshold: ${thresholds}`}</p>\n            <input type=\"range\" id=\"threshold1\" name=\"threshold1\" onChange={e => replaceThresholds(e.target.value, 0)}\n                   min=\"0.001\" max=\"1\" value={thresholds[0]} step=\"0.001\" className={\"range-style\"} />\n            <input type=\"range\" id=\"threshold2\" name=\"threshold2\" onChange={e => replaceThresholds(e.target.value, 1)}\n                   min=\"0.001\" max=\"1\" value={thresholds[1]} step=\"0.001\" className={\"range-style\"} />\n            <input type=\"range\" id=\"threshold3\" name=\"threshold3\" onChange={e => replaceThresholds(e.target.value, 2)}\n                   min=\"0.001\" max=\"1\" value={thresholds[2]} step=\"0.001\" className={\"range-style\"} />\n            <input type=\"range\" id=\"threshold4\" name=\"threshold4\" onChange={e => replaceThresholds(e.target.value, 3)}\n                   min=\"0.001\" max=\"1\" value={thresholds[3]} step=\"0.001\" className={\"range-style\"} />\n\n        </>\n    )\n}\n\nconst AMDSettings = () => {\n    return (\n        <AMDControls/>\n    )\n}\n\n\nfunction AMDControls() {\n    const dispatch = useDispatch()\n    let k_x = useSelector(getKx)\n    let k_y = useSelector(getKy)\n    let maxThresh = useSelector(getMaxThreshold)\n    let threshold = useSelector(getThreshold)\n    let k = useSelector(getK)\n\n    return  (\n        <>\n            <p>{`X-Axis: AMD ${k_x}`}</p>\n            <input type=\"range\" id=\"k_x\" name=\"k_x\" onChange={e => dispatch(setKx(e.target.value))}\n                   min=\"1\" max=\"200\" value={k_x} step=\"1\" className={\"range-style\"} />\n            <p>{`Y-Axis: AMD ${k_y}`}</p>\n            <input type=\"range\" id=\"k_y\" name=\"k_y\" onChange={e => dispatch(setKy(e.target.value))}\n                   min=\"1\" max=\"200\" value={k_y} step=\"1\" className={\"range-style\"} />\n            <p>{`Edge Nearest Neighbors: ${k}`}</p>\n            <input type=\"range\" id=\"k\" name=\"k\" onChange={e => dispatch(setK(e.target.value))}\n                   min=\"1\" max=\"200\" value={k} step=\"1\" className={\"range-style\"} />\n            <p>{`Edge Threshold: ${threshold.toFixed(6)}`}</p>\n            <input type=\"range\" id=\"threshold\" name=\"threshold\"\n                   onChange={e => dispatch(setThreshold(e.target.value))}\n                   min=\"0\" max={maxThresh} value={threshold} step={maxThresh / 100} className={\"range-style\"}  />\n        </>\n    )\n}\n\n\nconst CircleSettings = () => {\n    return (\n        <CircleControls/>\n    )\n}\n\nconst ForceSettings = () => {\n    return (\n        <GraphControls/>\n    )\n}\n\nconst PMFGSettings = () => {\n    return (\n        <GraphControls/>\n    )\n}\n\nconst KKGSettings = () => {\n    return (\n        <GraphControls/>\n    )\n}\n\nconst settingsMap = {\"mst\": MSTSettings(),\n                            \"full\": ThresholdSettings(),\n                            \"dendrogram\": DendrogramSettings(),\n                            \"map\": MapSettings(),\n                            \"amd\": AMDSettings(),\n                            \"circle\": CircleSettings(),\n                            \"sunburst\": CircleSettings(),\n                            \"force\": ForceSettings(),\n                            \"pmfg\": PMFGSettings(),\n                            \"kkg\": KKGSettings(),\n}\n\nexport const CompareAppMenuSettings = () => {\n    let plotType = useSelector(getGraphType)\n    console.log(plotType)\n    return (\n        <>\n            {settingsMap[plotType]}\n        </>\n    )\n}","import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    \"openApp\": \"home\",\n    \"width\": 0,\n    \"height\": 0,\n}\n\nconst appSlice = createSlice({\n    name: 'openApplication',\n    initialState,\n    reducers: {\n        openViewApp(state, action) {\n            state[\"openApp\"] = \"view\"\n            return state;\n        },\n        openCompareApp(state, action) {\n            state[\"openApp\"] = \"compare\"\n            return state;\n        },\n        openCreateApp(state, action) {\n            state[\"openApp\"] = \"create\"\n            return state\n        },\n        setSize(state, action) {\n            state[\"width\"] = action.payload.width\n            state[\"height\"] = action.payload.height\n            return state\n        },\n        openHomeApp(state, actions) {\n            state[\"openApp\"] = \"home\"\n            return state\n        }\n    }\n})\n\nexport const { openCompareApp, openViewApp, openCreateApp, setSize, openHomeApp } = appSlice.actions\n\nexport default appSlice.reducer\n\nexport const getOpenApp = createSelector((state) => state.appSlice, (p) =>\n    p[\"openApp\"]\n)\n\nexport const getWidth = createSelector((state) => state.appSlice, (p) =>\n    p[\"width\"]\n)\n\nexport const getHeight = createSelector((state) => state.appSlice, (p) =>\n    p[\"height\"]\n)","import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    currentObject: undefined,\n    menuOpen: false,\n};\n\nconst viewSlice = createSlice({\n    name: 'previewOpened',\n    initialState,\n    reducers: {\n        addView(state, action) {\n            state[\"currentObject\"] = action.payload;\n            return state;\n        },\n        change(state, action){\n            return {\n                ...state,\n                ...action.payload\n            };\n        },\n        setMenuOpen(state, action) {\n            return {\n                ...state,\n                \"menuOpen\": action.payload,\n            }\n        },\n        toggleMenu(state, action) {\n            state[\"menuOpen\"] = !state[\"menuOpen\"]\n            return state;\n        }\n    }\n})\n\nexport const { change, addView, setMenuOpen, toggleMenu } = viewSlice.actions\n\nexport default viewSlice.reducer\n\nexport const getViewObject = createSelector((state) => state.viewSlice, (p) =>\n    p[\"currentObject\"]\n)\n\nexport const getMenuOpen = createSelector((state) => state.viewSlice, (p) => p[\"menuOpen\"])\n\n\n\n","\n\n\nexport const QueryResultDropdownData = ({label, value}) => {\n    let value_result = \"N/A\"\n    if (value !== undefined)\n        value_result = value\n\n    if (value === \"\")\n        value_result = \"None\"\n\n    if (value === true)\n        value_result = \"True\"\n\n    if (value === false)\n        value_result = \"False\"\n\n    return  (\n        <div className={\"query-result-dropdown-data\"}>\n            <p className={\"query-result-dropdown-data-label\"}>{label}</p>\n            <p className={\"query-result-dropdown-data-value\"}>{value_result}</p>\n        </div>\n    )\n}","import React, {useState} from 'react'\nimport {FaPlus} from \"react-icons/fa\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {addComp, addComps} from \"../../features/compare/compareSlice\";\nimport {BsChevronRight, BsChevronDown} from \"react-icons/all\";\nimport {getCompType, getFacet} from \"../../features/search/searchSlice\";\nimport {getOpenApp} from \"../../features/app/appSlice\";\nimport {addView} from \"../../features/view/viewSlice\";\nimport {QueryResultDropdownData} from \"./QueryResultDropdownData\";\nimport BlockIcon from \"@mui/icons-material/Block\"\nimport AddIcon from \"@mui/icons-material/Add\"\nimport cx from \"classnames\"\nimport \"./search.scss\"\nimport {getAccessToken} from \"../../features/auth/authSlice\";\n\n\nasync function getFamily(e, token) {\n    let name = e.target.id.replace(\"-add-family-button\", \"\")\n    return fetch(`/api/compare/family/${name}`, {\n        headers: {\n            'Authorization': `Bearer:${token}`,\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(data => data.json())\n}\n\nexport async function getSubset(name, token) {\n    return fetch(`/api/search/crystal/subset/${name}?match=exact`, {\n        headers: {\n            'Authorization': `Bearer:${token}`,\n            'Content-Type': 'application/json'\n        },\n    })\n        .then(data => data.json())\n}\n\nexport function QueryResult({data}) {\n    let currentApp = useSelector(getOpenApp)\n    const dispatch = useDispatch()\n    const [name, setName] = useState(data[\"name\"])\n    let token = useSelector(getAccessToken)\n\n\n    const addCrystal = (e) => {\n        if (currentApp === \"compare\") {\n            if (data[\"Has3dStructure\"] && !data[\"IsDisordered\"]) {\n                dispatch(addComp(name))\n            }\n        } else if (currentApp === \"view\") {\n            if (data[\"Has3dStructure\"]) {\n                dispatch(addView(name))\n            }\n        }\n    }\n\n    const addSubset = async(name) => {\n        const res = await getSubset(name, token)\n        let names = res[\"data\"].map((x) => x.name)\n        dispatch(addComps(names))\n    }\n\n\n    const [open, setOpen] = useState(false)\n\n    const addFamily = async(e) => {\n        const res = await getFamily(e, token)\n        dispatch(addComps(res[\"names\"]))\n    }\n\n    let dis = open ? \"block\" : \"none\"\n    let type = useSelector(getFacet)\n    let compType = useSelector(getCompType)\n\n    let addButton = <button id={data[\"name\"] + \"-add-button\"} className={\"query-result-quick-add-button\"} onClick={e => addCrystal(e)}>\n        <AddIcon/>\n    </button>\n\n    if (currentApp === \"compare\") {\n        if (!data[\"Has3dStructure\"] || data[\"IsDisordered\"]){\n            addButton  = <button className={\"query-result-quick-add-button\"}>\n                <BlockIcon/>\n            </button>\n        }\n    } else if (currentApp === \"view\") {\n        if (!data[\"Has3dStructure\"]){\n            addButton  = <button className={\"query-result-quick-add-button\"}>\n                <BlockIcon/>\n            </button>\n        }\n    }\n\n\n    let dropdown =  <div id={data[\"name\"] + \"-dropdown\"} className={\"query-result-dropdown\"}  style={{'display': dis}}>\n        <QueryResultDropdownData label={\"Composition:\"} value={data[\"Composition\"]}/>\n        <QueryResultDropdownData label={\"Prime Composition:\"} value={data[\"PrimeComposition\"]}/>\n        <QueryResultDropdownData label={\"Chemical Name:\"} value={data[\"ChemicalName\"]}/>\n        <QueryResultDropdownData label={\"Polymorph:\"} value={data[\"Polymorph\"]}/>\n        <QueryResultDropdownData label={\"Has 3D Structure:\"} value={data[\"Has3dStructure\"]}/>\n        <QueryResultDropdownData label={\"Is Disordered:\"} value={data[\"IsDisordered\"]}/>\n        <div className={\"query-result-dropdown-button-row\"}>\n            <button id={data[\"name\"] + \"-add-crystal-button\"}\n                    className={cx(\"query-result-dropdown-button\", {\"disabled\": !data[\"Has3dStructure\"] || (data[\"IsDisordered\"] && currentApp === \"compare\")})}\n                    onClick={() => addCrystal()}>\n                Add Crystal\n            </button>\n            <button id={data[\"name\"] + \"-add-family-button\"} className={\"query-result-dropdown-button\"} onClick={e => addFamily(e)}>\n                Add Family\n            </button>\n        </div>\n    </div>\n\n\n    if (type === \"subset\") {\n        return (\n            <div className=\"query-result\" id={data[\"Name\"] + \"-result\"} >\n                <h5 className={\"query-result-name\"} style={{\"font-size\":\"15px\"}}>{`${data[\"Name\"]}`}</h5>\n                <h6 className={\"query-result-id\"}>{`Entries: ${data[\"Crystals\"]}`}</h6>\n                <button id={data[\"Name\"] + \"-add-button\"} className={\"query-result-quick-add-button\"} onClick={() => addSubset(data[\"Name\"])}>\n                    <AddIcon/>\n                </button>\n            </div>\n        )\n    } else if (type === \"name\") {\n        return (\n            <div id={data[\"name\"] + \"-accordion\"} className={\"query-result-accordion\"}>\n                <div className=\"query-result\" id={data[\"name\"] + \"-result\"} >\n                    <button id={data[\"name\"] + \"-open-button\"} className={\"query-result-open-button\"} onClick={() => setOpen(!open)}>\n                        {open ? <BsChevronDown /> : <BsChevronRight/>}\n                    </button>\n                    <h4 className={\"query-result-name\"}>{data[\"name\"]}</h4>\n                    <h6 className={\"query-result-id\"}>{data[\"family\"]}</h6>\n                    <p className={\"query-result-source\"}>{data[\"Source\"][\"name\"]}</p>\n                    {addButton}\n                </div>\n                {dropdown}\n            </div>\n        )\n    } else if (type === \"similarity\") {\n        return (\n            <div id={data[\"name\"] + \"-accordion\"} className={\"query-result-accordion\"}>\n                <div className=\"query-result\" id={data[\"name\"] + \"-result\"} >\n                    <button id={data[\"name\"] + \"-open-button\"} className={\"query-result-open-button\"} onClick={() => setOpen(!open)}>\n                        {open ? <BsChevronDown /> : <BsChevronRight/>}\n                    </button>\n                    <div className=\"query-result-name-with-sim\">\n                        <h4>{data[\"name\"]}</h4>\n                        <p>{`Distance: ${data[\"Distance\"].toFixed(6)}`}</p>\n                    </div>\n                    <h6 className={\"query-result-id\"}>{data[\"family\"]}</h6>\n                    <p className={\"query-result-source\"}>{data[\"Source\"][\"name\"]}</p>\n                    {addButton}\n                </div>\n                {dropdown}\n            </div>\n        )\n    } else if (type === \"composition\") {\n        let k = \"Composition\"\n        if (compType === \"coprime\"){\n            k = \"PrimeComposition\"\n        }\n        return (\n            <div id={data[\"name\"] + \"-accordion\"} className={\"query-result-accordion\"}>\n                <div className=\"query-result\" id={data[\"name\"] + \"-result\"} >\n                    <button id={data[\"name\"] + \"-open-button\"} className={\"query-result-open-button\"} onClick={() => setOpen(!open)}>\n                        {open ? <BsChevronDown /> : <BsChevronRight/>}\n                    </button>\n                    <div className=\"query-result-name-with-sim\">\n                        <h4>{data[\"name\"]}</h4>\n                        <p>{`${data[k]}`}</p>\n                    </div>\n                    <h6 className={\"query-result-id\"}>{data[\"family\"]}</h6>\n                    <p className={\"query-result-source\"}>{data[\"Source\"][\"name\"]}</p>\n                    {addButton}\n                </div>\n                {dropdown}\n            </div>\n        )\n    }\n\n}","import * as React from \"react\";\nimport {useEffect, useRef, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getComp, removeComp, getCrystalListOpen} from \"../../features/compare/compareSlice\";\nimport {FaMinus} from \"react-icons/fa\";\nimport {QueryResult} from \"./QueryResult\";\nimport cx from \"classnames\"\nimport {openSearchPanel} from \"../../features/search/searchSlice\";\n\n\nexport function AddedQueryResult(cname) {\n    const dispatch = useDispatch()\n    const addToComparison = (e) => {\n        console.log(e.target.id);\n        let name = e.target.id.replace(\"-remove-button\", \"\")\n        dispatch(removeComp(name))\n    }\n\n    return (\n        <div className=\"query-result-added\" id={cname + \"-result-added\"}>\n            <h4 className={\"query-result-name\"}>{cname}</h4>\n            <button id={cname + \"-remove-button\"} className={\"query-result-remove-button\"} onClick={e => addToComparison(e)}>\n                -\n            </button>\n        </div>\n    )\n}\n\n\nexport function CrystalList({}) {\n    const currentComp = useSelector(getComp)\n    let open = useSelector(getCrystalListOpen)\n    const endRef = useRef(null)\n    const [filter, setFilter] = useState(\"\")\n\n    const scrollToBottom = () => {\n        endRef.current?.scrollIntoView({ behavior: \"smooth\" })\n    }\n\n    let filtered = currentComp\n    if (filter !== \"\"){\n        filtered = currentComp.filter(function (str) {\n            let output = str.toLowerCase().indexOf(filter.toLowerCase()) >= 0;\n            console.log(`Compare ${str} to ${filter}, result is ${output}`)\n            return output\n        });\n    }\n    const numberOfResults = Math.min(200, filtered.length)\n    let resultsToRender = filtered.slice(0, numberOfResults)\n\n    console.log(`Results: ${resultsToRender}`)\n    useEffect(() => {\n        scrollToBottom()\n    }, [currentComp]);\n\n    return (\n        <div id=\"current-crystal-list\" className={cx(\"crystal-list\", {\"open\": open})}>\n            <input className={\"top-filter\"}  placeholder={\"Filter\"}\n                   onChange={e => setFilter(e.target.value)} />\n            {resultsToRender.map(AddedQueryResult)}\n            <div ref={endRef} />\n        </div>\n    )\n}\n","import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    readingFile: false,\n    createModalOpened: false,\n    currentTab: \"crystal\",\n    newSubsetName: \"\",\n    newSubsetItems: [],\n    crystal: {},\n    atoms: [],\n    bonds: [],\n    setSymmetry: \"\",\n    unitCell: {},\n    setIsDisordered: false,\n    currentMessage: \"\",\n    source: \"\",\n    status: undefined,\n    coordinateSystem: \"fract\",\n    sourceStatus: undefined,\n    subsetStatus: undefined,\n    sourceMessage: \"\",\n    subsetMessage: \"\",\n};\n\nconst createModalSlice = createSlice({\n    name: 'createModalOpened',\n    initialState,\n    reducers: {\n        openCreateModal(state, action) {\n            // ✅ This \"mutating\" code is okay inside of createSlice!\n            state[\"createModalOpened\"] = true;\n            return state;\n        },\n        toggleCreateModal(state, action) {\n            state[\"createModalOpened\"] = !state[\"createModalOpened\"];\n            return state;\n        },\n        closeCreateModal(state, action) {\n            // ✅ This \"mutating\" code is okay inside of createSlice!\n            state[\"createModalOpened\"] = false;\n            return state;\n        },\n        setTab(state, action) {\n            state[\"currentTab\"] = action.payload;\n            return state\n        },\n        setReadingFile(state, action) {\n            state[\"readingFile\"] = action.payload;\n            return state\n        },\n        setCurrentMessage(state, action) {\n            console.log(action.payload)\n            state[\"currentMessage\"] = action.payload\n            return state\n        },\n        setAtoms(state, action) {\n            state[\"atoms\"] = action.payload\n            return state\n        },\n        setBonds(state, action) {\n            state[\"bonds\"] = action.payload\n            return state\n        },\n        setUnitCell(state, action) {\n            state[\"unitCell\"] = action.payload\n            return state\n        },\n        setCrystal(state, action) {\n            state[\"crystal\"] = action.payload\n            return state\n        },\n        setSource(state, action) {\n            state[\"source\"] = action.payload\n            return state\n        },\n        setCoordinateSystem(state, action) {\n            state[\"coordinateSystem\"] = action.payload\n            return state\n        },\n        setStatus(state, action) {\n            state[\"status\"] = action.payload\n            return state\n        },\n        setSubsetStatus(state, action) {\n            state[\"subsetStatus\"] = action.payload\n            return state\n        },\n        setSourceStatus(state, action) {\n            state[\"sourceStatus\"] = action.payload\n            return state\n        },\n        setSourceMessage(state, action) {\n            state[\"sourceMessage\"] = action.payload\n            return state\n        },\n        setSubsetMessage(state, action) {\n            state[\"subsetMessage\"] = action.payload\n            return state\n        }\n    }\n})\n\nexport const { openCreateModal, closeCreateModal, setTab,\n                setReadingFile, setCurrentMessage, setAtoms,\n                setBonds, setCrystal, setUnitCell, setSource,\n                setCoordinateSystem, setStatus, setSourceStatus, setSubsetStatus,\n                setSourceMessage, setSubsetMessage} = createModalSlice.actions\n\nexport default createModalSlice.reducer\n\nexport const getCreateModalOpened = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"createModalOpened\"]\n)\n\nexport const getCurrentTab = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"currentTab\"]\n)\n\nexport const isReadingFile = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"readingFile\"]\n)\n\nexport const getCurrentMessage = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"currentMessage\"]\n)\n\nexport const getCrystal = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"crystal\"]\n)\n\nexport const getUnitCell = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"unitCell\"]\n)\n\nexport const getAtoms = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"atoms\"]\n)\n\nexport const getBonds = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"bonds\"]\n)\n\nexport const getSource = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"source\"]\n)\n\nexport const getCoordinateSystem = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"coordinateSystem\"]\n)\n\nexport const getStatus = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"status\"]\n)\n\nexport const getSubsetStatus = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"subsetStatus\"]\n)\n\nexport const getSourceStatus = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"sourceStatus\"]\n)\n\nexport const getSourceMessage = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"sourceMessage\"]\n)\n\n\nexport const getSubsetMessage = createSelector((state) => state.createModalSlice, (p) =>\n    p[\"subsetMessage\"]\n)\n\n\n\n","import * as React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getGraphType, setGraphType} from \"../../features/compare/compareSlice\";\nimport cx from \"classnames\"\n\nexport const CompareAppMenuGraphSelectionButton = ({text, icon, label}) => {\n    let dispatch = useDispatch()\n    let graphType = useSelector(getGraphType)\n\n    return (\n        <div className={cx(\"plot-app-menu-graph-selection-button\", {\"selected\": label === graphType})}\n             onClick={() => dispatch(setGraphType(label))}>\n            {icon}\n            {text}\n        </div>\n    )\n}","import * as React from \"react\";\nimport { CompareAppMenuGraphSelectionButton } from \"./CompareAppMenuGraphSelectionButton\"\n\nexport const CompareAppMenuGraphSelection = () =>{\n    return (\n        <div className=\"plot-app-menu-graph-selection\">\n            <CompareAppMenuGraphSelectionButton label={\"amd\"} text={\"AMD\"} />\n            <CompareAppMenuGraphSelectionButton label={\"mst\"} text={\"MST\"} />\n            <CompareAppMenuGraphSelectionButton label={\"full\"} text={\"Threshold\"} />\n            <CompareAppMenuGraphSelectionButton label={\"circle\"} text={\"Circle\"} />\n            <CompareAppMenuGraphSelectionButton label={\"sunburst\"} text={\"Sunburst\"} />\n            <CompareAppMenuGraphSelectionButton label={\"map\"} text={\"MDS\"} />\n            <CompareAppMenuGraphSelectionButton label={\"force\"} text={\"FDL\"} />\n            <CompareAppMenuGraphSelectionButton label={\"pmfg\"} text={\"PMFG\"} />\n            <CompareAppMenuGraphSelectionButton label={\"kkg\"} text={\"Kamada-Kawai\"} />\n        </div>\n    )\n}\n\n","import React, { FC, useEffect, useRef, useState } from \"react\";\nimport { MdExpandLess, MdExpandMore } from \"react-icons/md\";\nimport AnimateHeight from \"react-animate-height\";\nimport cx from \"classnames\"\n\nconst DURATION = 300;\n\nconst Panel: FC<{ title: JSX.Element | string; initiallyDeployed?: boolean; vis: boolean }> = ({\n  title,\n  initiallyDeployed,\n  children, vis\n}) => {\n  const [isDeployed, setIsDeployed] = useState(initiallyDeployed || false);\n  const dom = useRef<HTMLDivElement>(null);\n\n  useEffect(() => {\n    if (isDeployed)\n      setTimeout(() => {\n        if (dom.current) dom.current.parentElement!.scrollTo({ top: dom.current.offsetTop - 5, behavior: \"smooth\" });\n      }, DURATION);\n  }, [isDeployed]);\n\n  return (\n    <div className={cx(\"panel\", {\"open\": vis})} ref={dom}>\n      <h2>\n        {title}{\" \"}\n        <button type=\"button\" onClick={() => setIsDeployed((v) => !v)}>\n          {isDeployed ? <MdExpandLess /> : <MdExpandMore />}\n        </button>\n      </h2>\n      <AnimateHeight duration={DURATION} height={isDeployed ? \"auto\" : 0}>\n        {children}\n      </AnimateHeight>\n    </div>\n  );\n};\n\nexport default Panel;\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport {useSigma} from \"react-sigma-v2\";\nimport {keyBy, mapValues, sortBy, values} from \"lodash\";\n\nimport {MdGroupWork} from \"react-icons/md\";\nimport Panel from \"./Panel\";\nimport {AiOutlineCheckCircle, AiOutlineCloseCircle} from \"react-icons/all\";\nimport {useSelector} from \"react-redux\";\nimport {getClusterPanelOpen} from \"../../../features/compare/compareSlice\";\n\nconst ClustersPanel = ({ clusters, filters, toggleCluster, setClusters }) => {\n  const sigma = useSigma();\n  const graph = sigma.getGraph();\n  let vis = useSelector(getClusterPanelOpen)\n  const [filter, setFilter] = useState(\"\")\n\n  const nodesPerCluster = useMemo(() => {\n    const index = {};\n    graph.forEachNode((_, { cluster }) => (index[cluster] = (index[cluster] || 0) + 1));\n    return index;\n  }, [graph]);\n\n  const maxNodesPerCluster = useMemo(() => Math.max(...values(nodesPerCluster)), [nodesPerCluster]);\n  const visibleClustersCount = useMemo(() => Object.keys(filters.clusters).length, [filters]);\n\n  const [visibleNodesPerCluster, setVisibleNodesPerCluster] = useState(nodesPerCluster);\n  useEffect(() => {\n    // To ensure the graphology instance has up to data \"hidden\" values for\n    // nodes, we wait for next frame before reindexing. This won't matter in the\n    // UX, because of the visible nodes bar width transition.\n    requestAnimationFrame(() => {\n      const index = {};\n      graph.forEachNode((_, { cluster, hidden }) => !hidden && (index[cluster] = (index[cluster] || 0) + 1));\n      setVisibleNodesPerCluster(index);\n    });\n  }, [filters, graph]);\n\n  if (filter !== \"\"){\n    clusters = clusters.filter(function (c) {\n      return c.key.toLowerCase().indexOf(filter.toLowerCase()) >= 0\n    });\n  }\n\n  const sortedClusters = useMemo(\n    () => sortBy(clusters, (cluster) => -nodesPerCluster[cluster.key]),\n    [clusters, nodesPerCluster],\n  );\n\n  return (\n    <Panel\n      title={\n        <>\n          <MdGroupWork className=\"text-muted\" /> Clusters\n          {visibleClustersCount < clusters.length ? (\n            <span className=\"text-muted text-small\">\n              {\" \"}\n              ({visibleClustersCount} / {clusters.length})\n            </span>\n          ) : (\n            \"\"\n          )}\n        </>\n      }\n      vis={vis}\n    >\n      <p className=\"buttons\">\n        <button className=\"btn\" onClick={() => setClusters(mapValues(keyBy(clusters, \"key\"), () => true))}>\n          <AiOutlineCheckCircle /> Check all\n        </button>{\" \"}\n        <button className=\"btn\" onClick={() => setClusters({})}>\n          <AiOutlineCloseCircle /> Uncheck all\n        </button>\n      </p>\n      <input className={\"top-filter\"}  placeholder={\"Filter\"} onChange={e => setFilter(e.target.value)} />\n             <ul>\n        {sortedClusters.map((cluster) => {\n          const nodesCount = nodesPerCluster[cluster.key];\n          const visibleNodesCount = visibleNodesPerCluster[cluster.key] || 0;\n          return (\n            <li\n              className=\"caption-row\"\n              key={cluster.key}\n              title={`${nodesCount} page${nodesCount > 1 ? \"s\" : \"\"}${\n                visibleNodesCount !== nodesCount ? ` (only ${visibleNodesCount} visible)` : \"\"\n              }`}\n            >\n              <input\n                type=\"checkbox\"\n                checked={filters.clusters[cluster.key] || false}\n                onChange={() => toggleCluster(cluster.key)}\n                id={`cluster-${cluster.key}`}\n              />\n              <label htmlFor={`cluster-${cluster.key}`}>\n                <span className=\"circle\" style={{ background: cluster.color, borderColor: cluster.color }} />{\" \"}\n                <div className=\"node-label\">\n                  <span>{cluster.clusterLabel}</span>\n                  <div className=\"bar\" style={{ width: (100 * nodesCount) / maxNodesPerCluster + \"%\" }}>\n                    <div\n                      className=\"inside-bar\"\n                      style={{\n                        width: (100 * visibleNodesCount) / nodesCount + \"%\",\n                      }}\n                    />\n                  </div>\n                </div>\n              </label>\n            </li>\n          );\n        })}\n      </ul>\n    </Panel>\n  );\n};\n\nexport default ClustersPanel;\n","import * as React from \"react\";\nimport { CompareAppMenuGraphSelectionButton } from \"./CompareAppMenuGraphSelectionButton\"\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getBreakout, getGraphType, setBreakout} from \"../../features/compare/compareSlice\";\n\nexport const CompareAppMenuClusterSelection = () => {\n    let dispatch = useDispatch()\n    let breakout = useSelector(getBreakout)\n    let graphType = useSelector(getGraphType)\n\n    if (graphType === \"circle\" || graphType === \"sunburst\") {\n        return <div>\n\n        </div>\n    }\n\n    const changeBreakout = (e) => {\n        dispatch(setBreakout(e.target.value))\n    }\n\n    return (\n        <>\n            <h6>CLUSTER BY</h6>\n            <div className=\"plot-app-menu-cluster-selection\">\n                <select className={\"cluster-facet\"} value={breakout} onChange={(e) => changeBreakout(e)}>\n                    <option value={\"family\"}>Family</option>\n                    <option value={\"polymorph\"}>Polymorph</option>\n                    <option value={\"composition\"}>Composition</option>\n                    <option value={\"prime_composition\"}>Prime Composition</option>\n                </select>\n            </div>\n        </>\n    )\n}\n\n","import {BiNetworkChart, BiRefresh, BiTrash, BiChevronLeft} from \"react-icons/bi\";\nimport {\n    clearComp,\n    getComp,\n    getGraphType,\n    getMenuOpen,\n    setGraphType,\n    setMenuOpen\n} from \"../../features/compare/compareSlice\";\nimport {IoSettingsOutline} from \"react-icons/io5\";\nimport {CompareAppMenuSettings} from \"./CompareAppMenuSettings\";\nimport ListIcon from \"@mui/icons-material/List\";\nimport {CrystalList} from \"../search/CrystalList\";\nimport * as React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {useState} from \"react\";\nimport cx from 'classnames';\nimport {closeCreateModal} from \"../../features/create/createSlice\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport ScienceIcon from \"@mui/icons-material/Science\";\nimport StorageIcon from \"@mui/icons-material/Storage\";\nimport {CompareAppMenuGraphSelection} from \"./CompareAppMenuGraphSelection\";\nimport ClustersPanel from \"./views/ClustersPanel\";\nimport {CompareAppMenuClusterSelection} from \"./CompareAppMenuClusterSelection\";\n\nexport const OpenCompareMenu = () => {\n    let dispatch = useDispatch()\n    let clicked = useSelector(getMenuOpen)\n\n    return (\n        <div className={cx(\"open-plot-app-menu\", {\"clicked\": clicked})}\n            onClick={() => dispatch(setMenuOpen(true))}>\n            <BiChevronLeft/>\n        </div>\n    )\n}\n\n\nexport const CompareAppMenu = () => {\n    let open = useSelector(getMenuOpen)\n    let dispatch = useDispatch()\n\n    return (\n        <div className={cx(\"compare-app-menu\", {\"open\": open})}>\n            <div className={\"app-menu-container\"}>\n                <h6>GRAPH TYPE</h6>\n                <CompareAppMenuGraphSelection/>\n                <CompareAppMenuClusterSelection/>\n                <h6>SETTINGS</h6>\n                <CompareAppMenuSettings/>\n            </div>\n        </div>\n    )\n}\n","import React from \"react\";\n\n\nexport function Loading(props) {\n    return (\n        <div className=\"inner\" style={{\"width\": \"200px\", \"height\": \"200px\", \"background\": \"transparent\"}} {...props}>\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n                 style={{\"margin\": \"auto\", \"background\": \"transparent\", \"display\": \"block\"}}\n                 width=\"200px\" height=\"200px\" viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n                <g transform=\"translate(20 50)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" calcMode=\"spline\"\n    keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" values=\"0;1;0\" keyTimes=\"0;0.5;1\" dur=\"1s\"\n    repeatCount=\"indefinite\"/>\n                    </circle>\n                </g>\n                <g transform=\"translate(40 50)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#bbcedd\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" calcMode=\"spline\"\n    keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" values=\"0;1;0\" keyTimes=\"0;0.5;1\" dur=\"1s\"\n    repeatCount=\"indefinite\"/>\n                    </circle>\n                </g>\n                <g transform=\"translate(60 50)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#dce4eb\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" calcMode=\"spline\"\n    keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" values=\"0;1;0\" keyTimes=\"0;0.5;1\" dur=\"1s\"\n    repeatCount=\"indefinite\"/>\n                    </circle>\n                </g>\n                <g transform=\"translate(80 50)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#fdfdfd\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" calcMode=\"spline\"\n    keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" values=\"0;1;0\" keyTimes=\"0;0.5;1\" dur=\"1s\"\n    repeatCount=\"indefinite\"/>\n                    </circle>\n                </g>\n            </svg>\n        </div>\n    )\n}\n\n\nexport function LoadingCustom({height, width, innerHeight, innerWidth}) {\n    return (\n        <div className=\"inner\" style={{\"width\": width, \"height\": height, \"background\": \"transparent\"}} >\n            <svg xmlns=\"http://www.w3.org/2000/svg\"\n                 style={{\"margin\": \"auto\", \"background\": \"transparent\", \"display\": \"block\"}}\n                 width={innerWidth} height={innerHeight} viewBox=\"0 0 100 100\" preserveAspectRatio=\"xMidYMid\">\n                <g transform=\"translate(20 50)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#85a2b6\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.375s\" calcMode=\"spline\"\n                                          keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" values=\"0;1;0\" keyTimes=\"0;0.5;1\" dur=\"1s\"\n                                          repeatCount=\"indefinite\"/>\n                    </circle>\n                </g>\n                <g transform=\"translate(40 50)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#bbcedd\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.25s\" calcMode=\"spline\"\n                                          keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" values=\"0;1;0\" keyTimes=\"0;0.5;1\" dur=\"1s\"\n                                          repeatCount=\"indefinite\"/>\n                    </circle>\n                </g>\n                <g transform=\"translate(60 50)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#dce4eb\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"-0.125s\" calcMode=\"spline\"\n                                          keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" values=\"0;1;0\" keyTimes=\"0;0.5;1\" dur=\"1s\"\n                                          repeatCount=\"indefinite\"/>\n                    </circle>\n                </g>\n                <g transform=\"translate(80 50)\">\n                    <circle cx=\"0\" cy=\"0\" r=\"6\" fill=\"#fdfdfd\">\n                        <animateTransform attributeName=\"transform\" type=\"scale\" begin=\"0s\" calcMode=\"spline\"\n                                          keySplines=\"0.3 0 0.7 1;0.3 0 0.7 1\" values=\"0;1;0\" keyTimes=\"0;0.5;1\" dur=\"1s\"\n                                          repeatCount=\"indefinite\"/>\n                    </circle>\n                </g>\n            </svg>\n        </div>\n    )\n}","import {CirclePacking, ResponsiveCirclePacking} from '@nivo/circle-packing'\nimport {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getComp, getKs, getLinkage, getThresholds, setMaxThreshold} from \"../../features/compare/compareSlice\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {constant, keyBy, mapValues} from \"lodash\";\nimport * as React from \"react\";\nimport {CompareAppMenu} from \"./CompareAppMenu\";\nimport {Loading} from \"../../Loading\";\n\n\nexport const MyResponsiveCirclePacking = ({}) => {\n    const [zoomedId, setZoomedId] = useState(\"\")\n    const [dataReady, setDataReady] = useState(false);\n    const [dataset, setDataset] = useState(null);\n\n    let thresholds = useSelector(getThresholds)\n    let linkage = useSelector(getLinkage)\n    let ks = useSelector(getKs)\n    let token = useSelector(getAccessToken)\n    let names = useSelector(getComp)\n    const [loading, setLoading] = useState(false)\n\n\n    useEffect(() => {\n        setLoading(true)\n        fetch('/api/compare/job', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer: ${token}`,\n                'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n                'Content-Length': '<calculated when request is sent>'\n            },\n            body: JSON.stringify({\"names\": names})\n        })\n            .then((data) => data.json())\n            .then((d) => {\n                let url = `/api/compare/circle/amd/${'[' + ks.join(',') + ']'}?linkage=${linkage}&thresholds=${'[' + thresholds.join(',') + ']'}&names=${d[\"callback\"]}`\n                return url\n            })\n            .then(url => {\n                fetch(url, {\n                    headers: {\n                        'Authorization': `Bearer: ${token}`,\n                    }\n                })\n                    .then(res => res.json())\n                    .then((dataset) => {\n                        setDataset(dataset);\n                        setLoading(false)\n                        requestAnimationFrame(() => setDataReady(true));\n                    });\n            })\n    }, [ks, linkage, names, thresholds]);\n\n    if (loading)\n        return (\n            <Loading style={{\"display\": \"grid\",\n                \"justify-content\": \"center\",\n                \"align-content\": \"center\",\n                \"height\": \"100vh\",\n                \"background\": \"var(--defaultprimary)\"}}/>\n        )\n\n    if (!dataset) return null;\n\n    return (\n        <>\n            <ResponsiveCirclePacking\n                data={dataset}\n                margin={{top: 10, right: 0, bottom: 20, left: 20}}\n                id=\"name\"\n                value=\"loc\"\n                colors={{scheme: 'nivo'}}\n                childColor={{\n                    from: 'color',\n                    modifiers: [\n                        [\n                            'brighter',\n                            0.4\n                        ]\n                    ]\n                }}\n                padding={4}\n                enableLabels={true}\n                labelsFilter={function (n) {\n                    return 2 === n.node.depth\n                }}\n                labelsSkipRadius={10}\n                labelTextColor={{\n                    from: 'color',\n                    modifiers: [\n                        [\n                            'darker',\n                            2\n                        ]\n                    ]\n                }}\n                borderWidth={1}\n                borderColor={{\n                    from: 'color',\n                    modifiers: [\n                        [\n                            'darker',\n                            0.5\n                        ]\n                    ]\n                }}\n                defs={[\n                    {\n                        id: 'lines',\n                        type: 'patternLines',\n                        background: 'none',\n                        color: 'inherit',\n                        rotation: -45,\n                        lineWidth: 5,\n                        spacing: 8\n                    }\n                ]}\n                fill={[\n                    {\n                        match: {\n                            depth: 1\n                        },\n                        id: 'lines'\n                    }\n                ]}\n                zoomedId={zoomedId}\n                motionConfig=\"slow\"\n                onClick={node => {\n                    console.log(node)\n                    setZoomedId(zoomedId === node.id ? null : node.id)\n                    console.log(zoomedId)\n                }}\n            />\n            <CompareAppMenu />\n        </>\n    )\n}","import { ResponsiveSunburst } from '@nivo/sunburst'\nimport React, {useEffect, useState} from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getComp, getKs, getLinkage, getThresholds} from \"../../features/compare/compareSlice\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {CompareAppMenu} from \"./CompareAppMenu\";\nimport {Loading} from \"../../Loading\";\n\n\nconst flatten = data =>\n    data.reduce((acc, item) => {\n        if (item.children) {\n            return [...acc, item, ...flatten(item.children)]\n        }\n\n        return [...acc, item]\n    }, [])\n\nconst findObject = (data, name) => data.find(searchedName => searchedName.name === name)\n\n\nexport const MyResponsiveSunburst = () => {\n    const [dataReady, setDataReady] = useState(false);\n    const [dataset, setDataset] = useState(null);\n    const [loading, setLoading] = useState(false)\n    let thresholds = useSelector(getThresholds)\n    let linkage = useSelector(getLinkage)\n    let ks = useSelector(getKs)\n    let token = useSelector(getAccessToken)\n    let names = useSelector(getComp)\n\n    useEffect(() => {\n        setLoading(true)\n        fetch('/api/compare/job', {\n            method: 'POST',\n            headers: {\n                'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n                'Content-Length': '<calculated when request is sent>'\n            },\n            body: JSON.stringify({\"names\": names})\n        })\n            .then((data) => data.json())\n            .then((d) => {\n                let url = `/api/compare/sunburst/amd/${'[' + ks.join(',') + ']'}?linkage=${linkage}&thresholds=${'[' + thresholds.join(',') + ']'}&names=${d[\"callback\"]}`\n                return url\n            })\n            .then(url => {\n                fetch(url)\n                    .then(res => res.json())\n                    .then((dataset) => {\n                        setDataset(dataset);\n                        setLoading(false)\n                        requestAnimationFrame(() => setDataReady(true));\n                    });\n            })\n    }, [ks, linkage, names, thresholds]);\n\n    if (loading)\n        return (\n            <Loading style={{\"display\": \"grid\",\n                \"justify-content\": \"center\",\n                \"align-content\": \"center\",\n                \"height\": \"100vh\",\n                \"background\": \"var(--defaultprimary)\"}}/>\n        )\n\n    if (!dataset) return null;\n\n\n    return (\n        <>\n            <ResponsiveSunburst\n                data={dataset}\n                margin={{top: 10, right: 10, bottom: 10, left: 10}}\n                id=\"name\"\n                value=\"loc\"\n                cornerRadius={2}\n                borderColor={{theme: 'background'}}\n                colors={{scheme: 'nivo'}}\n                childColor={{\n                    from: 'color',\n                    modifiers: [\n                        [\n                            'brighter',\n                            0.1\n                        ]\n                    ]\n                }}\n                enableArcLabels={true}\n                arcLabelsSkipAngle={10}\n                arcLabelsTextColor={{\n                    from: 'color',\n                    modifiers: [\n                        [\n                            'darker',\n                            1.4\n                        ]\n                    ]\n                }}\n                transitionMode=\"pushIn\"\n                onClick={clickedData => {\n                    const foundObject = findObject(flatten(dataset.children), clickedData.id)\n                    if (foundObject && foundObject.children) {\n                        setDataset(foundObject)\n                    }\n                }}\n            />\n            <CompareAppMenu/>\n        </>\n    )\n}\n","import { NodeDisplayData, PartialButFor, PlainObject } from \"sigma/types\";\nimport { Settings } from \"sigma/settings\";\n\nconst TEXT_COLOR = \"#000000\";\n\n/**\n * This function draw in the input canvas 2D context a rectangle.\n * It only deals with tracing the path, and does not fill or stroke.\n */\nexport function drawRoundRect(\n  ctx: CanvasRenderingContext2D,\n  x: number,\n  y: number,\n  width: number,\n  height: number,\n  radius: number,\n): void {\n  ctx.beginPath();\n  ctx.moveTo(x + radius, y);\n  ctx.lineTo(x + width - radius, y);\n  ctx.quadraticCurveTo(x + width, y, x + width, y + radius);\n  ctx.lineTo(x + width, y + height - radius);\n  ctx.quadraticCurveTo(x + width, y + height, x + width - radius, y + height);\n  ctx.lineTo(x + radius, y + height);\n  ctx.quadraticCurveTo(x, y + height, x, y + height - radius);\n  ctx.lineTo(x, y + radius);\n  ctx.quadraticCurveTo(x, y, x + radius, y);\n  ctx.closePath();\n}\n\n/**\n * Custom hover renderer\n */\nexport function drawHover(context: CanvasRenderingContext2D, data: PlainObject, settings: PlainObject) {\n  const size = settings.labelSize;\n  const font = settings.labelFont;\n  const weight = settings.labelWeight;\n  const subLabelSize = size - 2;\n\n  const label = data.label;\n  const subLabel = data.tag !== \"unknown\" ? data.tag : \"\";\n  const clusterLabel = data.clusterLabel;\n\n  // Then we draw the label background\n  context.beginPath();\n  context.fillStyle = \"#fff\";\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 2;\n  context.shadowBlur = 8;\n  context.shadowColor = \"#000\";\n\n  context.font = `${weight} ${size}px ${font}`;\n  const labelWidth = context.measureText(label).width;\n  context.font = `${weight} ${subLabelSize}px ${font}`;\n  const subLabelWidth = subLabel ? context.measureText(subLabel).width : 0;\n  context.font = `${weight} ${subLabelSize}px ${font}`;\n  const clusterLabelWidth = clusterLabel ? context.measureText(clusterLabel).width : 0;\n\n  const textWidth = Math.max(labelWidth, subLabelWidth, clusterLabelWidth);\n\n  const x = Math.round(data.x);\n  const y = Math.round(data.y);\n  const w = Math.round(textWidth + size / 2 + data.size + 3);\n  const hLabel = Math.round(size / 2 + 4);\n  const hSubLabel = subLabel ? Math.round(subLabelSize / 2 + 9) : 0;\n  const hClusterLabel = Math.round(subLabelSize / 2 + 9);\n\n  drawRoundRect(context, x, y - hSubLabel - 12, w, hClusterLabel + hLabel + hSubLabel + 12, 5);\n  context.closePath();\n  context.fill();\n\n  context.shadowOffsetX = 0;\n  context.shadowOffsetY = 0;\n  context.shadowBlur = 0;\n\n  // And finally we draw the labels\n  context.fillStyle = TEXT_COLOR;\n  context.font = `${weight} ${size}px ${font}`;\n  context.fillText(label, data.x + data.size + 3, data.y + size / 3);\n\n  if (subLabel) {\n    context.fillStyle = TEXT_COLOR;\n    context.font = `${weight} ${subLabelSize}px ${font}`;\n    context.fillText(subLabel, data.x + data.size + 3, data.y - (2 * size) / 3 - 2);\n  }\n\n  context.fillStyle = data.color;\n  context.font = `${weight} ${subLabelSize}px ${font}`;\n  context.fillText(clusterLabel, data.x + data.size + 3, data.y + size / 3 + 3 + subLabelSize);\n}\n\n/**\n * Custom label renderer\n */\nexport default function drawLabel(\n  context: CanvasRenderingContext2D,\n  data: PartialButFor<NodeDisplayData, \"x\" | \"y\" | \"size\" | \"label\" | \"color\">,\n  settings: Settings,\n): void {\n  if (!data.label) return;\n\n  const size = settings.labelSize,\n    font = settings.labelFont,\n    weight = settings.labelWeight;\n\n  context.font = `${weight} ${size}px ${font}`;\n  const width = context.measureText(data.label).width + 8;\n\n  context.fillStyle = \"#ffffffcc\";\n  context.fillRect(data.x + data.size, data.y + size / 3 - 15, width, 20);\n\n  context.fillStyle = \"#000\";\n  context.fillText(data.label, data.x + data.size + 3, data.y + size / 3);\n}\n","import { useEffect, useState } from \"react\";\n\nfunction useDebounce<T>(value: T, delay: number): T {\n  // State and setters for debounced value\n  const [debouncedValue, setDebouncedValue] = useState<T>(value);\n\n  useEffect(\n    () => {\n      // Update debounced value after delay\n      const handler = setTimeout(() => {\n        if (value !== debouncedValue) setDebouncedValue(value);\n      }, delay);\n\n      // Cancel the timeout if value changes (also on delay change or unmount)\n      // This is how we prevent debounced value from updating if value is changed ...\n      // .. within the delay period. Timeout gets cleared and restarted.\n      return () => {\n        clearTimeout(handler);\n      };\n    },\n    [value, delay], // Only re-call effect if value or delay changes\n  );\n\n  return debouncedValue;\n}\n\nexport default useDebounce;\n","import { useSigma } from \"react-sigma-v2\";\nimport { FC, useEffect } from \"react\";\n\nimport { drawHover } from \"../canvas-utils\";\nimport useDebounce from \"../use-debounce\";\nimport {useDispatch} from \"react-redux\";\nimport {setCamera} from \"../../../features/compare/compareSlice\";\n\nconst NODE_FADE_COLOR = \"#bbb\";\nconst EDGE_FADE_COLOR = \"#eee\";\n\nconst GraphSettingsController: FC<{ hoveredNode: string | null, hoveredEdge: string | null }> =\n    ({ children, hoveredNode, hoveredEdge }) => {\n  const sigma = useSigma();\n  const graph = sigma.getGraph();\n  let dispatch = useDispatch();\n\n  // Here we debounce the value to avoid having too much highlights refresh when\n  // moving the mouse over the graph:\n  const debouncedHoveredNode = useDebounce(hoveredNode, 40);\n  const debouncedHoveredEdge = useDebounce(hoveredEdge, 40);\n\n  /**\n   * Initialize here settings that require to know the graph and/or the sigma\n   * instance:\n   */\n  useEffect(() => {\n    sigma.setSetting(\"hoverRenderer\", (context, data, settings) =>\n      drawHover(context, { ...sigma.getNodeDisplayData(data.key), ...data }, settings),\n    );\n  }, [sigma, graph]);\n\n  /**\n   * Update node and edge reducers when a node is hovered, to highlight its\n   * neighborhood:\n   */\n  useEffect(() => {\n    const hoveredColor: string = debouncedHoveredNode ? sigma.getNodeDisplayData(debouncedHoveredNode)!.color : \"\";\n\n    sigma.setSetting(\n      \"nodeReducer\",\n      debouncedHoveredNode\n        ? (node, data) =>\n            node === debouncedHoveredNode ||\n            graph.hasEdge(node, debouncedHoveredNode) ||\n            graph.hasEdge(debouncedHoveredNode, node)\n              ? { ...data, zIndex: 1 }\n              : { ...data, zIndex: 0, label: \"\", color: NODE_FADE_COLOR, image: null, highlighted: false }\n        : null,\n    );\n    sigma.setSetting(\n      \"edgeReducer\",\n      debouncedHoveredNode\n        ? (edge, data) =>\n            graph.hasExtremity(edge, debouncedHoveredNode)\n              ? { ...data, color: hoveredColor, size: 4 }\n              : { ...data, color: EDGE_FADE_COLOR, hidden: true }\n        : null,\n    );\n  }, [debouncedHoveredNode]);\n\n\n  return <>{children}</>;\n};\n\nexport default GraphSettingsController;\n","import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    previewOpened: false,\n    currentObject: null,\n    currentContent: \"molecule\",\n    x: 0,\n    y: 0,\n};\n\nconst previewSlice = createSlice({\n    name: 'previewOpened',\n    initialState,\n    reducers: {\n        openPreview(state, action) {\n            console.log(\"Opening modal\")\n            state[\"previewOpened\"] = true;\n            return state;\n        },\n        closePreview(state, action) {\n            console.log(\"Closing modal\")\n            state[\"previewOpened\"] = false;\n            return state;\n        },\n        changeContent(state, action){\n            console.log(\"Changing content\");\n            state[\"currentContent\"] = action.payload;\n            return state;\n        },\n        changeObject(state, action) {\n            state[\"currentObject\"] = action.payload;\n            return state;\n        },\n        change(state, action){\n            return {\n                ...state,\n                ...action.payload\n            };\n        },\n    }\n})\n\nexport const { openPreview, closePreview, changeContent, change, changeObject } = previewSlice.actions\n\nexport default previewSlice.reducer\n\nexport const getPreviewOpened = createSelector((state) => state.previewSlice, (p) =>\n    p[\"previewOpened\"]\n)\n\nexport const getObject = createSelector((state) => state.previewSlice, (p) =>\n    p[\"currentObject\"]\n)\n\nexport const getContent = createSelector((state) => state.previewSlice, (p) =>\n    p[\"currentContent\"]\n)\n\nexport const getX = createSelector((state) => state.previewSlice, (p) =>\n    p[\"x\"]\n)\n\nexport const getY = createSelector((state) => state.previewSlice, (p) =>\n    p[\"y\"]\n)\n\n\n","import { useRegisterEvents, useSigma } from \"react-sigma-v2\";\nimport { FC, useEffect } from \"react\";\nimport {useDispatch} from \"react-redux\";\nimport {change, changeObject, openPreview} from \"../../../features/preview/previewSlice\";\nimport {setBox, setCamera} from \"../../../features/compare/compareSlice\";\nimport {getPosition} from \"sigma/core/captors/captor\";\n\nfunction getMouseLayer() {\n  return document.querySelector(\".sigma-mouse\");\n}\n\nconst GraphEventsController: FC<{ setHoveredNode: (node: string | null) => void,\n                                  setHoveredEdge: (edge: string | null) => void}> = ({ setHoveredNode, children, setHoveredEdge }) => {\n  const sigma = useSigma();\n  const graph = sigma.getGraph();\n  const registerEvents = useRegisterEvents();\n  let dispatch = useDispatch();\n\n  /**\n   * Initialize here settings that require to know the graph and/or the sigma\n   * instance:\n   */\n  useEffect(() => {\n    registerEvents({\n      clickNode({ node, event }) {\n        if (!graph.getNodeAttribute(node, \"hidden\")) {\n          console.log(graph.getNodeAttribute(node, \"key\"))\n          const x = event.clientX\n          const y = event.clientY\n          dispatch(change({x: x, y: y}))\n          dispatch(changeObject(graph.getNodeAttribute(node, \"key\")))\n          dispatch(openPreview(true))\n        }\n      },\n      enterNode({ node }) {\n        setHoveredNode(node);\n        // TODO: Find a better way to get the DOM mouse layer:\n        const mouseLayer = getMouseLayer();\n\n        if (mouseLayer) mouseLayer.classList.add(\"mouse-pointer\");\n      },\n      leaveNode() {\n        setHoveredNode(null);\n        // TODO: Find a better way to get the DOM mouse layer:\n        const mouseLayer = getMouseLayer();\n        if (mouseLayer) mouseLayer.classList.remove(\"mouse-pointer\");\n      },\n      cameraUpdated(e) {\n        let point01 = sigma.viewportToGraph({x: 0, y: 0})\n        let dims = sigma.getDimensions()\n        let point00 = sigma.viewportToGraph({x: 0, y: dims.height})\n        let point11 = sigma.viewportToGraph({x: dims.width, y: dims.height})\n\n        let box = {\"x0\": point01.x,\n                   \"y1\": point01.y,\n                   \"y0\": point00.y,\n                   \"x1\": point11.x}\n        dispatch(setBox(box))\n        dispatch(setCamera(e))\n      },\n      enterEdge({edge}) {\n        setHoveredEdge(edge);\n        // TODO: Find a better way to get the DOM mouse layer:\n        const mouseLayer = getMouseLayer();\n        if (mouseLayer) mouseLayer.classList.add(\"mouse-pointer\");\n      },\n      leaveEdge() {\n        setHoveredEdge(null);\n        // TODO: Find a better way to get the DOM mouse layer:\n        const mouseLayer = getMouseLayer();\n        if (mouseLayer) mouseLayer.classList.remove(\"mouse-pointer\");\n      },\n    });\n  }, []);\n\n  return <>{children}</>;\n};\n\nexport default GraphEventsController;\n","import { useSigma } from \"react-sigma-v2\";\nimport { FC, useEffect } from \"react\";\nimport { keyBy, omit } from \"lodash\";\n\nimport { Dataset, FiltersState } from \"../types\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getType} from \"@reduxjs/toolkit\";\nimport {getThreshold, setBox, setCamera} from \"../../../features/compare/compareSlice\";\n\nconst GraphDataController: FC<{ dataset: Dataset; filters: FiltersState }> = ({ dataset, filters, children }) => {\n  const sigma = useSigma();\n  const graph = sigma.getGraph();\n  let threshold = useSelector(getThreshold)\n\n\n  useEffect(() => {\n    if (!graph || !dataset) return;\n\n    const clusters = keyBy(dataset.clusters, \"key\");\n\n    dataset.nodes.forEach((node) => {\n      if (!graph.nodes().includes(node.key))\n          graph.addNode(node.key, {\n            ...node,\n            ...omit(clusters[node.cluster], \"key\"),\n          })\n        },\n    );\n    dataset.edges.forEach(([source, target, weight, show]) => {\n      if (!graph.hasEdge(source, target)) {\n          if (weight < threshold) {\n            graph.addEdge(source, target, {size: weight, label: weight.toFixed(4)})\n          }\n      }\n    });\n\n    // Use degrees as node sizes:\n    const scores = graph.nodes().map((node) => graph.getNodeAttribute(node, \"score\"));\n    const minDegree = Math.min(...scores);\n    const maxDegree = Math.max(...scores);\n    const MIN_NODE_SIZE = 20;\n    const MAX_NODE_SIZE = 30;\n    graph.forEachNode((node) =>\n      graph.setNodeAttribute(\n        node,\n        \"size\",\n        5\n        //((graph.getNodeAttribute(node, \"score\") - minDegree) / (maxDegree - minDegree)) *\n        //  (MAX_NODE_SIZE - MIN_NODE_SIZE) +\n        //  MIN_NODE_SIZE,\n      ),\n    );\n\n    graph.filterEdges((key, edgeAttributes, sourceId, targetId, sourcePosition, targetPosition) => {\n\n    })\n\n    return () => graph.clear();\n  }, [graph, dataset, threshold]);\n\n  /**\n   * Apply filters to graphology:\n   */\n  useEffect(() => {\n    const { clusters } = filters;\n    graph.forEachNode((node, { cluster }) =>\n      graph.setNodeAttribute(node, \"hidden\", !clusters[cluster] ),\n    );\n  }, [graph, filters]);\n\n  return <>{children}</>;\n};\n\nexport default GraphDataController;\n","import React, { useEffect, useState } from \"react\";\nimport { useSigma } from \"react-sigma-v2\";\nimport { BsSearch } from \"react-icons/bs\";\nimport {useSelector} from \"react-redux\";\nimport {getSearchFieldOpen} from \"../../../features/compare/compareSlice\";\nimport cx from \"classnames\"\n\n/**\n * This component is basically a fork from React-sigma-v2's SearchControl\n * component, to get some minor adjustments:\n * 1. We need to hide hidden nodes from results\n * 2. We need custom markup\n */\nconst SearchField = ({ filters }) => {\n  const sigma = useSigma();\n  const [search, setSearch] = useState(\"\");\n  const [values, setValues] = useState([]);\n  const [selected, setSelected] = useState(null);\n  let vis = useSelector(getSearchFieldOpen)\n\n  useEffect(() => {\n    const newValues = [];\n    const lcSearch = search.toLowerCase();\n    if (!selected && search.length > 1) {\n      sigma.getGraph().forEachNode((key, attributes) => {\n        if (!attributes.hidden && attributes.label && attributes.label.toLowerCase().indexOf(lcSearch) === 0)\n          newValues.push({ id: key, label: attributes.label });\n      });\n    }\n    setValues(newValues);\n  }, [search, selected, sigma]);\n\n  useEffect(() => {\n    if (!selected) return;\n    sigma.getGraph().setNodeAttribute(selected, \"highlighted\", true);\n    const nodeDisplayData = sigma.getNodeDisplayData(selected);\n\n    if (nodeDisplayData)\n      sigma.getCamera().animate(\n          { ...nodeDisplayData, ratio: 0.05 },\n          {\n            duration: 600,\n          },\n      );\n\n    return () => {\n      if (sigma.getGraph().hasNode(selected))\n        sigma.getGraph().setNodeAttribute(selected, \"highlighted\", false);\n    };\n  }, [selected, sigma]);\n\n  const onInputChange = (e) => {\n    const searchString = e.target.value;\n    const valueItem = values.find((value) => value.label === searchString);\n    console.log(values)\n    if (valueItem) {\n      setSearch(valueItem.label);\n      setValues([]);\n      setSelected(valueItem.id);\n    } else {\n      setSelected(null);\n      setSearch(searchString);\n    }\n  };\n\n  const onKeyPress = (e) => {\n    if (e.key === \"Enter\" && values.length) {\n      setSearch(values[0].label);\n      setSelected(values[0].id);\n    }\n  };\n\n  return (\n    <div className={cx(\"search-wrapper\", {\"open\": vis})}>\n      <input\n        type=\"search\"\n        placeholder=\"Search in nodes...\"\n        list=\"nodes\"\n        value={search}\n        onChange={onInputChange}\n        onKeyPress={onKeyPress}\n      />\n      <BsSearch className=\"icon\" />\n      <datalist id=\"nodes\">\n        {values.map((value) => (\n            <option key={value.id} value={value.label}>\n              {value.label}\n            </option>\n        ))}\n      </datalist>\n    </div>\n  );\n};\n\n\nexport default SearchField;\n","\n\nexport const toCartesian = (unitCell, point) => {\n    if (unitCell === null)\n        return point\n\n    console.log(\"unit cell is\")\n    console.log(unitCell)\n    //let res = multiplyMatrices(unitCell, [[point[0]], [point[1]], [point[2]]])\n    let res = multiplyMatrices([point], unitCell)\n    console.log(res)\n    return res[0]//[res[0], res[1], res[0]]\n}\n\nfunction multiplyMatrices(m1, m2) {\n    var result = [];\n    for (var i = 0; i < m1.length; i++) {\n        result[i] = [];\n        for (var j = 0; j < m2[0].length; j++) {\n            var sum = 0;\n            for (var k = 0; k < m1[0].length; k++) {\n                sum += m1[i][k] * m2[k][j];\n            }\n            result[i][j] = sum;\n        }\n    }\n    return result;\n}\n\nexport function addVecs(a,b){\n    return a.map((e,i) => e + b[i]);\n}\n\nexport function cellParamsToMatrix(a,b,c,alpha,beta,gamma) {\n    alpha = Math.PI * alpha / 180\n    beta = Math.PI * beta / 180\n    gamma = Math.PI * gamma / 180\n    let volume = cellVolume(a,b,c,alpha,beta,gamma)\n    console.log(\"volume is\")\n    console.log(volume)\n    //let row1 = [a, b*Math.cos(gamma), c*Math.cos(beta)]\n    //let row2 = [0, b*Math.sin(gamma), c*(Math.cos(alpha)-Math.cos(beta)*Math.cos(gamma))/(Math.sin(gamma))]\n    //let row3 = [0, 0, volume/(a*b*Math.sin(gamma))]\n    let row1 = [a, 0, 0]\n    let row2 = [b*Math.cos(gamma), b*Math.sin(gamma), 0]\n    let row3 = [c*Math.cos(beta), c*(Math.cos(alpha)-Math.cos(beta)*Math.cos(gamma))/(Math.sin(gamma)), volume/(a*b*Math.sin(gamma))]\n    return [row1, row2, row3]\n}\n\nfunction cellVolume(a,b,c,alpha,beta,gamma) {\n    return a * b * c * Math.sqrt(1 - Math.cos(alpha) ** 2 - Math.cos(beta) ** 2 - Math.cos(gamma) ** 2 + 2 * Math.cos(alpha) * Math.cos(beta) * Math.cos(gamma))\n}","import React, {useState, useEffect, useRef, useLayoutEffect} from 'react';\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccessToken} from \"../features/auth/authSlice\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport ListIcon from '@mui/icons-material/List';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport AddIcon from '@mui/icons-material/Add';\n\nimport {\n    getPreviewOpened,\n    getContent,\n    changeContent,\n    getObject,\n    closePreview,\n    getX,\n    getY,\n} from \"../features/preview/previewSlice\";\nimport { removeFromPreviewList, addToPreviewList, openPreviewList } from \"../features/compare/compareSlice\";\nimport { Canvas, useFrame, Color, useThree} from '@react-three/fiber'\nimport { OrbitControls, TransformControls, ContactShadows, useGLTF, useCursor } from '@react-three/drei'\nimport { proxy, useSnapshot } from 'valtio'\nimport * as THREE from \"three\";\nimport {LoadingCustom} from \"../Loading\";\nimport {addVecs, cellParamsToMatrix, toCartesian} from \"./base/geometry\";\n\n\n\n\nconst ELEMENT_COLOR = {\n    \"H\": \"red\",\n    \"O\": \"white\",\n    \"C\": \"black\",\n}\n\nconst H_SIZE = 0.2\n\nconst ELEMENT_SIZE = {\n    \"H\": H_SIZE,\n    \"O\": H_SIZE,\n    \"C\": H_SIZE,\n}\n\nconst getSize = (sym) => {\n    let s = ELEMENT_SIZE[sym]\n    if (s === undefined){\n        return H_SIZE\n    } else return s\n}\n\nconst CPK = {\n    h: [ 255, 255, 255 ],\n    he: [ 217, 255, 255 ],\n    li: [ 204, 128, 255 ],\n    be: [ 194, 255, 0 ],\n    b: [ 255, 181, 181 ],\n    c: [ 144, 144, 144 ],\n    n: [ 48, 80, 248 ],\n    o: [ 255, 13, 13 ],\n    f: [ 144, 224, 80 ],\n    ne: [ 179, 227, 245 ],\n    na: [ 171, 92, 242 ],\n    mg: [ 138, 255, 0 ],\n    al: [ 191, 166, 166 ],\n    si: [ 240, 200, 160 ],\n    p: [ 255, 128, 0 ],\n    s: [ 255, 255, 48 ],\n    cl: [ 31, 240, 31 ],\n    ar: [ 128, 209, 227 ],\n    k: [ 143, 64, 212 ],\n    ca: [ 61, 255, 0 ],\n    sc: [ 230, 230, 230 ],\n    ti: [ 191, 194, 199 ],\n    v: [ 166, 166, 171 ],\n    cr: [ 138, 153, 199 ],\n    mn: [ 156, 122, 199 ],\n    fe: [ 224, 102, 51 ],\n    co: [ 240, 144, 160 ],\n    ni: [ 80, 208, 80 ],\n    cu: [ 200, 128, 51 ],\n    zn: [ 125, 128, 176 ],\n    ga: [ 194, 143, 143 ],\n    ge: [ 102, 143, 143 ],\n    as: [ 189, 128, 227 ],\n    se: [ 255, 161, 0 ],\n    br: [ 166, 41, 41 ],\n    kr: [ 92, 184, 209 ],\n    rb: [ 112, 46, 176 ],\n    sr: [ 0, 255, 0 ],\n    y: [ 148, 255, 255 ],\n    zr: [ 148, 224, 224 ],\n    nb: [ 115, 194, 201 ],\n    mo: [ 84, 181, 181 ],\n    tc: [ 59, 158, 158 ],\n    ru: [ 36, 143, 143 ],\n    rh: [ 10, 125, 140 ],\n    pd: [ 0, 105, 133 ],\n    ag: [ 192, 192, 192 ],\n    cd: [ 255, 217, 143 ],\n    in: [ 166, 117, 115 ],\n    sn: [ 102, 128, 128 ],\n    sb: [ 158, 99, 181 ],\n    te: [ 212, 122, 0 ],\n    i: [ 148, 0, 148 ],\n    xe: [ 66, 158, 176 ],\n    cs: [ 87, 23, 143 ],\n    ba: [ 0, 201, 0 ],\n    la: [ 112, 212, 255 ],\n    ce: [ 255, 255, 199 ],\n    pr: [ 217, 255, 199 ],\n    nd: [ 199, 255, 199 ],\n    pm: [ 163, 255, 199 ],\n    sm: [ 143, 255, 199 ],\n    eu: [ 97, 255, 199 ],\n    gd: [ 69, 255, 199 ],\n    tb: [ 48, 255, 199 ],\n    dy: [ 31, 255, 199 ],\n    ho: [ 0, 255, 156 ],\n    er: [ 0, 230, 117 ],\n    tm: [ 0, 212, 82 ],\n    yb: [ 0, 191, 56 ],\n    lu: [ 0, 171, 36 ],\n    hf: [ 77, 194, 255 ],\n    ta: [ 77, 166, 255 ],\n    w: [ 33, 148, 214 ],\n    re: [ 38, 125, 171 ],\n    os: [ 38, 102, 150 ],\n    ir: [ 23, 84, 135 ],\n    pt: [ 208, 208, 224 ],\n    au: [ 255, 209, 35 ],\n    hg: [ 184, 184, 208 ],\n    tl: [ 166, 84, 77 ],\n    pb: [ 87, 89, 97 ],\n    bi: [ 158, 79, 181 ],\n    po: [ 171, 92, 0 ],\n    at: [ 117, 79, 69 ],\n    rn: [ 66, 130, 150 ],\n    fr: [ 66, 0, 102 ],\n    ra: [ 0, 125, 0 ],\n    ac: [ 112, 171, 250 ],\n    th: [ 0, 186, 255 ],\n    pa: [ 0, 161, 255 ],\n    u: [ 0, 143, 255 ],\n    np: [ 0, 128, 255 ],\n    pu: [ 0, 107, 255 ],\n    am: [ 84, 92, 242 ],\n    cm: [ 120, 92, 227 ],\n    bk: [ 138, 79, 227 ],\n    cf: [ 161, 54, 212 ],\n    es: [ 179, 31, 212 ],\n    fm: [ 179, 31, 186 ],\n    md: [ 179, 13, 166 ],\n    no: [ 189, 13, 135 ],\n    lr: [ 199, 0, 102 ],\n    rf: [ 204, 0, 89 ],\n    db: [ 209, 0, 79 ],\n    sg: [ 217, 0, 69 ],\n    bh: [ 224, 0, 56 ],\n    hs: [ 230, 0, 46 ],\n    mt: [ 235, 0, 38 ],\n    ds: [ 235, 0, 38 ],\n    rg: [ 235, 0, 38 ],\n    cn: [ 235, 0, 38 ],\n    uut: [ 235, 0, 38 ],\n    uuq: [ 235, 0, 38 ],\n    uup: [ 235, 0, 38 ],\n    uuh: [ 235, 0, 38 ],\n    uus: [ 235, 0, 38 ],\n    uuo: [ 235, 0, 38 ]\n};\n\nfunction rgbToHex(r, g, b) {\n    return \"#\" + ((1 << 24) + (r << 16) + (g << 8) + b).toString(16).slice(1);\n}\n\nconst modes = ['translate', 'rotate', 'scale']\nconst state = proxy({ current: null, mode: 0 })\n\nfunction ViewPanelSettings({}){\n    let dispatch = useDispatch()\n\n    return (\n        <div id=\"view-panel-settings\">\n\n        </div>\n    )\n}\n\n\nconst getElementColor = (e) => {\n    let rgb = CPK[e]\n    return rgbToHex(rgb[0], rgb[1], rgb[2])\n}\n\nfunction Atom(props) {\n    // This reference gives us direct access to the THREE.Mesh object\n    const ref = useRef()\n    // Hold state for hovered and clicked events\n    const [hovered, hover] = useState(false)\n    const [clicked, click] = useState(false)\n    // Subscribe this component to the render-loop, rotate the mesh every frame\n    //useFrame((state, delta) => {\n    //    ref.current.rotation.y += 0.005; ref.current.rotation.x += 0.01\n    // })\n\n    return (\n        <mesh\n            {...props}\n            ref={ref}\n            scale={clicked ? 1 : 1}\n            onClick={(event) => click(!clicked)}\n            onPointerOver={(event) => hover(true)}\n            onPointerOut={(event) => hover(false)}>\n            <sphereGeometry args={[getSize(props['symbol'])]} />\n            <meshBasicMaterial wireframe={false} color={getElementColor(props['symbol'].toLowerCase())} />\n        </mesh>\n    )\n}\n\n\nfunction Line({ start, end, color }) {\n    const ref = useRef()\n    useLayoutEffect(() => {\n        ref.current.geometry.setFromPoints([start, end].map((point) => new THREE.Vector3(...point)))\n    }, [start, end])\n    return (\n        <line ref={ref}>\n            <bufferGeometry />\n            <lineBasicMaterial color={color} />\n        </line>\n    )\n}\n\n\nexport function Controls() {\n    // Get notified on changes to state\n    const snap = useSnapshot(state)\n    const scene = useThree((state) => state.scene)\n    return (\n        <>\n            {/* As of drei@7.13 transform-controls can refer to the target by children, or the object prop */}\n            {snap.current && <TransformControls object={scene.getObjectByName(snap.current)} mode={modes[snap.mode]} />}\n            {/* makeDefault makes the controls known to r3f, now transform-controls can auto-disable them when active */}\n            <OrbitControls makeDefault minPolarAngle={0} maxPolarAngle={Math.PI / 1.75} />\n        </>\n    )\n}\n\nexport const UnitCell = ({dataset}) => {\n    let uc = cellParamsToMatrix(dataset.unitCell[\"A\"], dataset.unitCell[\"B\"], dataset.unitCell[\"C\"],\n        dataset.unitCell[\"Alpha\"], dataset.unitCell[\"Beta\"], dataset.unitCell[\"Gamma\"])\n\n    let s = [0,0,0]\n\n    return (\n        <group>\n            <Line start={s} end={uc[0]} color={\"red\"}/>\n            <Line start={s} end={uc[1]} color={\"blue\"}/>\n            <Line start={s} end={uc[2]} color={\"green\"}/>\n\n            <Line start={uc[1]} end={addVecs(uc[0], uc[1])} color={\"grey\"}/>\n            <Line start={uc[2]} end={addVecs(uc[2], uc[1])} color={\"grey\"}/>\n            <Line start={uc[2]} end={addVecs(uc[2], uc[1])} color={\"grey\"}/>\n            <Line start={uc[2]} end={addVecs(uc[2], uc[0])} color={\"grey\"}/>\n\n            <Line start={uc[0]} end={addVecs(uc[0], uc[1])} color={\"grey\"}/>\n            <Line start={uc[1]} end={addVecs(uc[1], uc[2])} color={\"grey\"}/>\n            <Line start={uc[0]} end={addVecs(uc[0], uc[2])} color={\"grey\"}/>\n            <Line start={addVecs(uc[0], uc[2])} end={addVecs(addVecs(uc[0], uc[2]), uc[1])} color={\"grey\"}/>\n            <Line start={addVecs(uc[1], uc[2])} end={addVecs(addVecs(uc[1], uc[2]), uc[0])} color={\"grey\"}/>\n            <Line start={addVecs(uc[0], uc[1])} end={addVecs(addVecs(uc[0], uc[2]), uc[1])} color={\"grey\"}/>\n\n        </group>\n    )\n}\n\n\nexport const Molecule = ({dataset, rotX, rotY, center}) => {\n    const ref = useRef()\n    let bondLocations = {}\n    let uc = null\n    if (dataset.unitCell) {\n        uc = cellParamsToMatrix(dataset.unitCell[\"A\"], dataset.unitCell[\"B\"], dataset.unitCell[\"C\"],\n            dataset.unitCell[\"Alpha\"], dataset.unitCell[\"Beta\"], dataset.unitCell[\"Gamma\"])\n    }\n    let c = [0,0,0]\n    if (center) {\n        c = toCartesian(uc, dataset.center)\n    }\n\n    useFrame((state, delta) => {\n        ref.current.rotation.y += rotY;\n        ref.current.rotation.x += rotX;\n    })\n\n    let atomSet = dataset[\"atoms\"].map((i) => {\n        let mp = toCartesian(uc, [i[\"X\"], i[\"Y\"], i[\"Z\"]])\n        mp[0] -= c[0]\n        mp[1] -= c[1]\n        mp[2] -= c[2]\n        bondLocations[i[\"Label\"]] = mp\n\n        return (\n            <Atom position={mp} symbol={i[\"Symbol\"]} />\n        )\n    })\n\n    let bondSet = dataset[\"bonds\"].map((i) => {\n        if (i.Label1 === null || i.Label2 === null) {\n            return\n        }\n        let s = bondLocations[i[\"Label1\"]]\n        let e = bondLocations[i[\"Label2\"]]\n\n        return (\n            <Line start={s}\n                  end={e}/>\n        )\n    })\n\n    return (\n        <group ref={ref}>\n            { atomSet }\n            { bondSet }\n        </group>\n    )\n}\n\n\nexport function MoleculeView({name}) {\n    let token = useSelector(getAccessToken)\n    console.log(\"inside molecule view\")\n    const [dataset, setDataset] = useState(null);\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(`/api/crystal/id/${name}`, {\n            headers: {\n                'Authorization': `Bearer:${token}`,\n                'Content-Type': 'application/json'\n            }\n        }).then(data => data.json())\n            .then((d) => {\n                let id = d[\"id\"]\n                fetch(`/api/crystal/molecule/${id}`, {\n                    headers: {\n                        'Authorization': `Bearer:${token}`,\n                        'Content-Type': 'application/json'\n                    }\n                }).then(data => data.json())\n                    .then((d) => {\n                        setDataset(d)\n                        setLoading(false)\n                    })\n            })\n    }, [name])\n\n    if (loading) {\n        return <LoadingCustom width={\"100%\"} height={\"100%\"} innerHeight={\"95%\"} innerWidth={\"50px\"}/>\n    }\n\n    let atoms;\n    if (!loading) {\n        atoms = <div className=\"no-atom-geometry-content\">\n            <p>No Geometry found.</p>\n        </div>\n    }\n    console.log(\"Dataset: \")\n    console.log(dataset)\n    if (dataset != null && !loading && dataset.atoms) {\n\n        atoms =\n            <Canvas className=\"preview-panel-canvas\"\n                    camera={{ position: [7, 7, 7], fov: 62 }}>\n                <ambientLight />\n                <pointLight position={[1, 1, 1]} />\n                <Molecule dataset={dataset} rotX={0.001} rotY={0.005} center={true}/>\n                <Controls/>\n            </Canvas>\n\n    }\n    return (\n        <>\n            { atoms }\n        </>\n    )\n}\n\nexport const PreviewListItem = ({name}) => {\n    const dispatch = useDispatch()\n\n    return (\n        <div className=\"preview-list-item\">\n            <div className=\"top-container\">\n                <div className={\"left-content\"}>\n                    <p className=\"preview-title\">{name}</p>\n                </div>\n                <div className={\"right-content\"}>\n                    <a href={`https://www.ccdc.cam.ac.uk/structures/Search?Ccdcid=${name}&DatabaseToSearch=Published`}\n                       target={\"_blank\"}\n                       style={{\"color\": \"var(--default-text)\"}}>CCDC</a>\n                    <button onClick={() => dispatch(removeFromPreviewList(name))}>\n                        <CloseIcon fontSize={\"small\"}/>\n                    </button>\n                </div>\n            </div>\n            <MoleculeView name={name}/>\n        </div>\n    )\n}\n\n\nfunction PreviewPanel({}) {\n    let dispatch = useDispatch()\n\n    let modalOpened = useSelector(getPreviewOpened)\n    let currentContent = useSelector(getContent)\n    let x = useSelector(getX)\n    let y = useSelector(getY)\n    let currentObject = useSelector(getObject)\n\n\n    let vis  = 'none'\n    if (modalOpened)\n        vis = 'block'\n\n    let content = <div/>\n    if (modalOpened){\n        if (currentContent === \"settings\")\n            content = <ViewPanelSettings/>;\n        else if (currentContent === \"molecule\")\n            content = <MoleculeView name={currentObject}/>\n    }\n    return (\n        <div className=\"preview-panel\" style={{'display': vis, \"left\": `${x}px`, \"top\": `${y}px`}}>\n            <div className=\"top-container\">\n                <div className={\"left-content\"}>\n                    <p className=\"preview-title\">{currentObject}</p>\n                </div>\n                <div className={\"right-content\"}>\n                    <a href={`https://www.ccdc.cam.ac.uk/structures/Search?Ccdcid=${currentObject}&DatabaseToSearch=Published`}\n                       target={\"_blank\"}\n                       style={{\"color\": \"var(--default-text)\"}}>CCDC</a>\n                    <button onClick={() => {\n                        dispatch(addToPreviewList(currentObject))\n                        dispatch(openPreviewList(\"\"))\n                        dispatch(closePreview(false))\n                    }}>\n                        <AddIcon fontSize={\"small\"}/>\n                    </button>\n                    <button onClick={() => dispatch(closePreview(false))}>\n                        <CloseIcon fontSize={\"small\"}/>\n                    </button>\n                </div>\n            </div>\n            {content}\n        </div>\n    )\n\n}\n\nexport default PreviewPanel;","import \"./styles.css\";\n\nimport React, { useEffect, useState } from \"react\";\nimport {SigmaContainer, ZoomControl, FullScreenControl, ForceAtlasControl, useSigma} from \"react-sigma-v2\";\nimport getNodeProgramImage from \"sigma/rendering/webgl/programs/node.image\";\nimport { omit, mapValues, keyBy, constant } from \"lodash\";\nimport {ForceAtlas2} from 'react-sigma';\nimport GraphSettingsController from \"./GraphSettingsController\";\nimport GraphEventsController from \"./GraphEventsController\";\nimport GraphDataController from \"./GraphDataController\";\nimport DescriptionPanel from \"./DescriptionPanel\";\nimport ClustersPanel from \"./ClustersPanel\";\nimport SearchField from \"./SearchField\";\nimport drawLabel from \"../canvas-utils\";\nimport { CompareAppMenu } from \"../CompareAppMenu\";\nimport \"react-sigma-v2/lib/react-sigma-v2.css\";\nimport { GrClose } from \"react-icons/gr\";\nimport { BiRadioCircleMarked, BiBookContent } from \"react-icons/bi\";\nimport { BsArrowsFullscreen, BsFullscreenExit, BsZoomIn, BsZoomOut } from \"react-icons/bs\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getBox, getBreakout,\n    getCamera,\n    getComp,\n    getGraphType,\n    getK,\n    getKx, getKy,\n    getMeasure,\n    getThreshold, setCamera,\n    setMaxThreshold, setRendering\n} from \"../../../features/compare/compareSlice\";\nimport {Loading} from \"../../../Loading\";\nimport PreviewPanel from \"../../PreviewPanel\";\nimport {getAccessToken} from \"../../../features/auth/authSlice\";\n\n\nfunction XYAxis() {\n    let box = useSelector(getBox)\n    let gt = useSelector(getGraphType)\n    let amdx = useSelector(getKx)\n    let amdy = useSelector(getKy)\n    let xlab = \"x\"\n    let ylab = \"y\"\n    if (gt === \"amd\") {\n        xlab = `AMD ${amdx}`\n        ylab = `AMD ${amdy}`\n    }\n    let dispatch = useDispatch()\n    let sigma = useSigma()\n\n    useEffect(() => {\n        console.log(\"inside request animation frame\")\n        let point01 = sigma.viewportToGraph({x: 0, y: 0})\n        let dims = sigma.getDimensions()\n        let point00 = sigma.viewportToGraph({x: 0, y: dims.height})\n        let point11 = sigma.viewportToGraph({x: dims.width, y: dims.height})\n\n        let box = {\"x0\": point01.x,\n            \"y1\": point01.y,\n            \"y0\": point00.y,\n            \"x1\": point11.x\n        }\n        dispatch(setCamera(box))\n    });\n    let axisNeeded = gt === \"amd\" || gt === \"mds\"\n    if (!axisNeeded)\n        return (\n            <div></div>\n        )\n\n    return (\n        <div id=\"xy-axis-outer\">\n            <div id=\"xy-axis-inner\">\n\n            </div>\n            <div id=\"tick-upper-left\" className=\"tick\">\n                <p>{box[\"y1\"].toFixed(2)}</p>\n            </div>\n            <div id={\"y-label\"}>\n                <p>{ylab}</p>\n            </div>\n            <div id=\"tick-lower-left\" className=\"tick\">\n                <p>{`(${box[\"x0\"].toFixed(2)}, ${box[\"y0\"].toFixed(2)})`}</p>\n            </div>\n            <div id={\"x-label\"}>\n                <p>{xlab}</p>\n            </div>\n            <div id=\"tick-lower-right\" className=\"tick\">\n                <p>{box[\"x1\"].toFixed(2)}</p>\n            </div>\n        </div>\n    )\n}\n\nconst Root = () => {\n    const dispatch = useDispatch()\n    let token = useSelector(getAccessToken)\n    let names = useSelector(getComp)\n    let graphType = useSelector(getGraphType)\n    let k = useSelector(getK)\n    let k_x = useSelector(getKx)\n    let k_y = useSelector(getKy)\n    let measure = useSelector(getMeasure)\n    let breakout = useSelector(getBreakout)\n\n    const [showContents, setShowContents] = useState(false);\n    const [dataReady, setDataReady] = useState(false);\n    const [loading, setLoading] = useState(false)\n    const [dataset, setDataset] = useState(null);\n    const [filtersState, setFiltersState] = useState({\n        clusters: {},\n        tags: {},\n    });\n    const [hoveredNode, setHoveredNode] = useState(null);\n    const [hoveredEdge, setHoveredEdge] = useState(null)\n\n    // Load data on mount:\n    useEffect(() => {\n        console.log(\"Hitting Python API\")\n        setLoading(true)\n        fetch('/api/compare/job', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer: ${token}`,\n                'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n                'Content-Length': '<calculated when request is sent>'\n            },\n            body: JSON.stringify({\"names\": names})\n        })\n            .then((data) => data.json())\n            .then((d) => {\n                let url = `/api/compare/${graphType}/${measure}/${k}?threshold=${5}&names=${d[\"callback\"]}&breakout=${breakout}`\n                if (graphType === \"amd\"){\n                    url = `/api/compare/${graphType}/${k_x}/${k_y}?names=${d[\"callback\"]}&breakout=${breakout}&edge_k=${k}`\n                }\n                return url\n            })\n            .then(url => {\n                fetch(url, {\n                    headers: {\n                        'Authorization': `Bearer: ${token}`,\n                    }\n                })\n                    .then((res) => res.json())\n                    .then((dataset) => {\n                        setDataset(dataset);\n                        dispatch(setMaxThreshold(dataset.max))\n                        setFiltersState({\n                            clusters: mapValues(keyBy(dataset.clusters, \"key\"), constant(true)),\n                            tags: mapValues(keyBy(dataset.tags, \"key\"), constant(true)),\n                        });\n                        requestAnimationFrame(() => {\n                            setDataReady(true)\n                            setLoading(false)\n                        });\n                    });\n            })\n\n    }, [breakout, dispatch, graphType, k, k_x, k_y, measure, names]);\n\n\n    if (loading)\n        return (\n            <Loading style={{\"display\": \"grid\",\n                             \"justify-content\": \"center\",\n                             \"align-content\": \"center\",\n                             \"height\": \"100vh\",\n                             \"background\": \"transparent\"}}/>\n        )\n    if (!dataReady)\n        return null;\n\n\n    return (\n        <div id=\"app-root\" className={showContents ? \"show-contents\" : \"\"}>\n            <SigmaContainer\n                graphOptions={{ type: \"undirected\" }}\n                initialSettings={{\n                    nodeProgramClasses: { image: getNodeProgramImage() },\n                    labelRenderer: drawLabel,\n                    defaultNodeType: \"image\",\n                    defaultEdgeType: \"line\",\n                    labelDensity: 0.07,\n                    labelGridCellSize: 60,\n                    labelRenderedSizeThreshold: 15,\n                    labelFont: \"Lato, sans-serif\",\n                    zIndex: false,\n                    minCameraRatio: 0.1,\n                    maxCameraRatio: 1,\n                    renderEdgeLabels: true,\n                }}\n                className=\"react-sigma\"\n            >\n                <GraphSettingsController hoveredNode={hoveredNode} hoveredEdge={hoveredEdge} />\n                <GraphEventsController setHoveredNode={setHoveredNode} setHoveredEdge={setHoveredEdge} />\n                <GraphDataController dataset={dataset} filters={filtersState} />\n                {dataReady && (\n                    <>\n                        <XYAxis/>\n                        <PreviewPanel/>\n                        <div className=\"contents\">\n                            <div className=\"ico\">\n                                <button\n                                    type=\"button\"\n                                    className=\"ico hide-contents\"\n                                    onClick={() => setShowContents(false)}\n                                    title=\"Show caption and description\"\n                                >\n                                    <GrClose />\n                                </button>\n                            </div>\n                            <div className={\"panels\"}>\n                                <SearchField filters={filtersState} />\n                                <ClustersPanel\n                                    clusters={dataset.clusters}\n                                    filters={filtersState}\n                                    setClusters={(clusters) =>\n                                        setFiltersState((filters) => ({\n                                            ...filters,\n                                            clusters,\n                                        }))\n                                    }\n                                    toggleCluster={(cluster) => {\n                                        setFiltersState((filters) => ({\n                                            ...filters,\n                                            clusters: filters.clusters[cluster]\n                                                ? omit(filters.clusters, cluster)\n                                                : { ...filters.clusters, [cluster]: true },\n                                        }));\n                                    }}\n                                />\n                            </div>\n                        </div>\n                    </>\n                )}\n            </SigmaContainer>\n        </div>\n    );\n\n};\n\nexport default Root;\n","import React, {useEffect, useState, useCallback} from \"react\";\nimport ForceGraph2D from 'react-force-graph-2d';\nimport {\n    getBreakout,\n    getComp,\n    getK,\n    getMeasure,\n    getThreshold,\n    setMaxThreshold\n} from \"../../features/compare/compareSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {Loading} from \"../../Loading\";\nimport {getHeight, getWidth, setSize} from \"../../features/app/appSlice\";\n\n\nconst ForceWrapper = ({data}) => {\n    let width = useSelector(getWidth)\n    let height = useSelector(getHeight)\n\n    console.log(width, height)\n\n    return (\n        <ForceGraph2D\n            id={\"my-force-graph\"}\n            width={width}\n            height={height}\n            graphData={data}\n            nodeAutoColorBy=\"group\"\n            nodeLabel=\"id\"\n        />\n    )\n}\n\n\nexport const ForceDirectedGraph = ({size}) => {\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState(null)\n    const [dataReady, setDataReady] = useState(false)\n    const [highlightNodes, setHighlightNodes] = useState(new Set());\n    const [highlightLinks, setHighlightLinks] = useState(new Set());\n    const [hoverNode, setHoverNode] = useState(null);\n\n    let measure = useSelector(getMeasure)\n    let token = useSelector(getAccessToken)\n    let names = useSelector(getComp)\n    let breakout = useSelector(getBreakout)\n    let k = useSelector(getK)\n    let dispatch = useDispatch()\n    let threshold = useSelector(getThreshold)\n    dispatch(setSize({\"height\": size.height, \"width\": size.width}))\n\n\n    const NODE_R = 0\n\n    useEffect(() => {\n        console.log(\"Hitting Python API\")\n        setLoading(true)\n        fetch('/api/compare/job', {\n            method: 'POST',\n            headers: {\n                'Authorization': `Bearer: ${token}`,\n                'Content-Type': 'multipart/form-data; boundary=<calculated when request is sent>',\n                'Content-Length': '<calculated when request is sent>'\n            },\n            body: JSON.stringify({\"names\": names})\n        })\n            .then((data) => data.json())\n            .then((d) => {\n                let url = `/api/compare/force/${measure}/${k}?threshold=${threshold}&names=${d[\"callback\"]}&breakout=${breakout}`\n                return url\n            })\n            .then(url => {\n                fetch(url, {\n                    headers: {\n                        'Authorization': `Bearer: ${token}`,\n                    }\n                })\n                    .then((res) => res.json())\n                    .then((dataset) => {\n                        setData(dataset);\n                        dispatch(setMaxThreshold(dataset.max))\n                        requestAnimationFrame(() => {\n                            setDataReady(true)\n                            setLoading(false)\n                        });\n                    });\n            })\n\n    }, [breakout, dispatch, k, measure, names]);\n\n\n    const updateHighlight = () => {\n        setHighlightNodes(highlightNodes);\n        setHighlightLinks(highlightLinks);\n    };\n\n    const handleNodeHover = node => {\n        highlightNodes.clear();\n        highlightLinks.clear();\n        if (node) {\n            highlightNodes.add(node);\n            node.neighbors.forEach(neighbor => highlightNodes.add(neighbor));\n            node.links.forEach(link => highlightLinks.add(link));\n        }\n\n        setHoverNode(node || null);\n        updateHighlight();\n    };\n\n    const handleLinkHover = link => {\n        highlightNodes.clear();\n        highlightLinks.clear();\n\n        if (link) {\n            highlightLinks.add(link);\n            highlightNodes.add(link.source);\n            highlightNodes.add(link.target);\n        }\n\n        updateHighlight();\n    };\n\n    const paintRing = useCallback((node, ctx) => {\n        // add ring just for highlighted nodes\n        ctx.beginPath();\n        ctx.arc(node.x, node.y, NODE_R * 1.4, 0, 2 * Math.PI, false);\n        ctx.fillStyle = node === hoverNode ? 'red' : 'orange';\n        ctx.fill();\n    }, [hoverNode]);\n\n\n\n    if (loading)\n        return (\n            <Loading style={{\"display\": \"grid\",\n                \"justify-content\": \"center\",\n                \"align-content\": \"center\",\n                \"height\": \"100vh\",\n                \"background\": \"transparent\"}}/>\n        )\n    if (!dataReady)\n        return null;\n\n\n    let filteredLinks = data.links.filter((link) => {\n        return link.value < threshold\n    })\n\n    let filteredData = {\n        nodes: data.nodes,\n        links: filteredLinks\n    }\n\n    console.log(filteredData)\n    return (\n        <div className={\"force-graph-wrapper\"}>\n            <ForceWrapper data={filteredData}/>\n        </div>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {getComp, getGraphType} from \"../../features/compare/compareSlice\";\nimport {OpenCompareMenu} from \"./CompareAppMenu\";\nimport {MyResponsiveCirclePacking} from \"./CirclePacking\";\nimport {MyResponsiveSunburst} from \"./Sunburst\";\nimport Root from \"./views/Root\";\nimport * as React from \"react\";\nimport AddIcon from \"@mui/icons-material/Add\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ManageAccountsIcon from \"@mui/icons-material/ManageAccounts\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport {ForceDirectedGraph} from \"./ForceDirectedGraph\";\nimport { SizeMe } from 'react-sizeme'\nimport {setSize} from \"../../features/app/appSlice\";\n\n\nfunction CompareAppPlotPlaceHolder(props) {\n    return (\n        <div id=\"plot-app-placeholder\">\n            <div id=\"plot-app-placeholder-message\">\n                <ul>\n                    <li>\n                        <h1>\n                            Create new crystals using <AddIcon fontSize={\"large\"}/>\n                        </h1>\n                    </li>\n                    <li>\n                        <h1>\n                            Search for crystals using <SearchIcon fontSize={\"large\"}/>\n                        </h1>\n                    </li>\n                    <li>\n                        <h1>\n                            Change account settings with <ManageAccountsIcon fontSize={\"large\"}/>\n                        </h1>\n                    </li>\n                    <li>\n                        <h1>\n                            Logout using <LogoutIcon fontSize={\"large\"}/>\n                        </h1>\n                    </li>\n                </ul>\n            </div>\n        </div>\n    )\n}\n\n\nexport function CompareAppPlot({size}) {\n\n    const graphType = useSelector(getGraphType)\n    const comp = useSelector(getComp)\n    let dispatch = useDispatch()\n\n    let graph = <CompareAppPlotPlaceHolder/>;\n\n    if (comp.length !== 0) {\n        if (graphType === \"circle\"){\n            graph = <>\n                <MyResponsiveCirclePacking/>\n            </>\n        } else if (graphType === \"sunburst\") {\n            graph = <>\n                <MyResponsiveSunburst/>\n            </>\n        } else if (graphType === \"force\") {\n            /*graph = <SizeMe\n                monitorHeight\n                refreshRate={32}\n                render={({ size }) => {\n                    console.log(size)\n                    return <ForceDirectedGraph size={size}/>\n                }}\n            />*/\n            graph = <ForceDirectedGraph size={size}/>\n        } else {\n            graph = <>\n                <Root/>\n            </>\n        }\n    }\n\n    return (\n        <>\n            <div className=\"compare-app-plot\">\n                { graph }\n            </div>\n        </>\n    )\n}","import {QueryResult} from \"./QueryResult\";\nimport React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getResults} from \"../../features/search/searchSlice\";\nimport \"./search.scss\"\nimport {LoadingCustom} from \"../../Loading\";\n\n\nexport const SearchResults = () => {\n    let results = useSelector(getResults)\n\n    if (results.data === null || results.data === undefined || results.data.length === 0)\n        return <p style={{'text-align': 'center',\n            'color': 'var(--defaulttext)',\n            'position': 'relative', 'top': '45%', 'left':'20%', 'text-style':'italic'}}>No Results to show..</p>\n\n    return (\n        <>\n            {\n                results.loading &&\n                <div style={{\"display\": \"grid\", \"justify-content\": \"center\", \"align-content\": \"center\"}}>\n                    <LoadingCustom width={\"100%\"} height={\"100%\"} innerHeight={\"95%\"} innerWidth={\"100px\"}/>\n                </div>\n            }\n            {\n                results['data'].length > 0 && !results.loading &&\n                results.data.map((i) => <QueryResult data={i}/>)\n            }\n        </>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {change, getCompType, getFacet, getK, getNorm, getResultSize} from \"../../features/search/searchSlice\";\nimport React from \"react\";\nimport {SearchFacetSettings} from \"./SearchFacetSettings\";\n\nexport function SearchSettings({}){\n    let dispatch = useDispatch()\n    let k = useSelector(getK)\n    let resSize = useSelector(getResultSize)\n    let n = useSelector(getNorm)\n    let compType = useSelector(getCompType)\n\n\n    return (\n        <div id=\"search-panel-settings\">\n            <p>{`Result Size: ${resSize}`}</p>\n            <input type=\"range\" id=\"search-result-size\" name=\"search-result-size\" onChange={e => dispatch(change({\"resultSize\": e.target.value}))}\n                   min=\"10\" max=\"500\" value={resSize} step=\"10\" className={\"range-style\"}  />\n            <br/>\n            <h6>Distance</h6>\n            <p>{`Nearest Neighbors (Distance Only): ${k}`}</p>\n            <input type=\"range\" id=\"search-k\" name=\"search-k\" onChange={e => dispatch(change({\"k\": e.target.value}))}\n                   min=\"1\" max=\"100\" value={k} step=\"1\" className={\"range-style\"}  />\n            <p>{`Norm (Distance Only): ${n}`}</p>\n            <input type=\"range\" id=\"search-n\" name=\"search-n\" onChange={e => dispatch(change({\"n\": e.target.value}))}\n                   min=\"0\" max=\"10\" value={n} step=\"1\" className={\"range-style\"}  />\n            <br/>\n            <h6>Composition</h6>\n            <select name=\"Form:\" id=\"composition-facet\" value={compType}\n                    onChange={ e => dispatch(change({\"compType\": e.target.value}))}>\n                <option value=\"standard\">Standard</option>\n                <option value=\"coprime\">Prime</option>\n            </select>\n        </div>\n    )\n}","import React, {useState,useEffect} from 'react'\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    changeContent,\n    closeSearchPanel,\n    getContent,\n    getSearchPanelOpened,\n} from \"../../features/search/searchSlice\";\nimport CloseIcon from '@mui/icons-material/Close';\nimport ListIcon from '@mui/icons-material/List';\nimport SettingsIcon from '@mui/icons-material/Settings';\nimport cx from \"classnames\";\nimport {SearchBar} from \"./SearchBar\";\nimport {SearchResults} from \"./SearchResults\";\nimport {SearchSettings} from \"./SearchSettings\";\n\n\nfunction SearchPanel({}) {\n    let dispatch = useDispatch()\n    let open = useSelector(getSearchPanelOpened)\n    let currentContent = useSelector(getContent)\n    let content = <SearchResults/>;\n\n    if (currentContent === \"settings\")\n        content = <SearchSettings/>;\n\n\n    console.log(`Search Panel: ${open}`)\n    return (\n        <div className={cx(\"search-panel\", {\"open\": open})}>\n            <div className=\"close-button-container\">\n                <button onClick={() => dispatch(closeSearchPanel(false))}>\n                    <CloseIcon fontSize={\"small\"}/>\n                </button>\n                <button onClick={() => dispatch(changeContent(\"settings\"))}>\n                    <SettingsIcon fontSize={\"small\"}/>\n                </button>\n                <button onClick={() => dispatch(changeContent(\"results\"))}>\n                    <ListIcon fontSize={\"small\"}/>\n                </button>\n\n            </div>\n            { content }\n        </div>\n    )\n\n}\n\nexport default SearchPanel;","import {useSelector} from \"react-redux\";\nimport {getPreviewList, getPreviewListOpen} from \"../../features/compare/compareSlice\";\nimport {QueryResult} from \"../search/QueryResult\";\nimport React from \"react\";\nimport {PreviewListItem} from \"../PreviewPanel\";\nimport cx from \"classnames\"\n\n\nexport const PreviewList = () => {\n    let pl = useSelector(getPreviewList)\n    let open = useSelector(getPreviewListOpen)\n    console.log(pl)\n    let previews = <>\n        {pl.map((i) => <PreviewListItem name={i}/>)}\n    </>\n    return (\n        <div className={cx(\"preview-list\", {\"open\": open})}>\n            {previews}\n        </div>\n    )\n}","import * as React from \"react\";\nimport './Compare.scss'\nimport  'csv-parser'\nimport {CompareAppPlot} from \"./CompareAppPlot\";\nimport SearchPanel from \"../search/SearchPanel\";\nimport PreviewPanel from \"../PreviewPanel\";\nimport {PreviewList} from \"./PreviewList\";\nimport ClustersPanel from \"./views/ClustersPanel\";\nimport {omit} from \"lodash\";\nimport SearchField from \"./views/SearchField\";\nimport {CompareAppMenu} from \"./CompareAppMenu\";\nimport {CrystalList} from \"../search/CrystalList\";\nimport { SizeMe } from 'react-sizeme'\n\n\nexport function CompareAppMain({}) {\n\n    return (\n        <div className=\"compare-app-main\">\n            <SearchPanel/>\n            <SizeMe\n                monitorHeight\n                refreshRate={32}\n                render={({ size }) => {\n                    return <CompareAppPlot size={size}/>\n                }}\n            />\n            <PreviewList/>\n            <CrystalList/>\n            <CompareAppMenu/>\n        </div>\n    )\n}\n","import * as React from \"react\";\nimport './Compare.scss'\nimport {CompareAppTopBar} from \"./CompareAppTopBar\";\nimport {CompareAppMain} from \"./CompareAppMain\";\nimport {useSelector} from \"react-redux\";\nimport {getOpenApp} from \"../../features/app/appSlice\";\nimport cx from \"classnames\"\n\n\nexport const CompareApp = () => {\n    const openApp = useSelector(getOpenApp)\n\n\n    return (\n        <div className={cx(\"compare-app\", {\"hidden\": openApp !== \"compare\"})}>\n            <CompareAppTopBar/>\n            <CompareAppMain/>\n        </div>\n    )\n}\n","import AddIcon from \"@mui/icons-material/Add\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ManageAccountsIcon from \"@mui/icons-material/ManageAccounts\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport * as React from \"react\";\nimport {Canvas,} from \"@react-three/fiber\";\nimport {Controls, } from \"../PreviewPanel\";\nimport * as THREE from \"three\";\nimport {MeshBasicMaterial} from \"three\";\n\n\nexport const Plane = () => {\n    const size = 10;\n    const divisions = 10;\n\n    const gridHelper = new THREE.GridHelper( 400, 40, 0x0000ff, 0x808080 );\n    const m = new THREE.Mesh(gridHelper, new MeshBasicMaterial())\n    return (\n        <primitive object={gridHelper} position={[-5, -5, -5]} />\n    );\n}\n\n\nexport function ViewAppPlaceHolder(props) {\n    return (\n        <div id=\"view-app-placeholder\">\n            <Canvas className=\"view-app-canvas\" style={{\"height\": \"100%\", \"width\": \"100%\"}}\n                    camera={{ position: [10, 10, 10], fov: 62 }}>\n                <ambientLight />\n                <pointLight position={[1, 1, 1]} />\n                <Plane/>\n                <Controls/>\n            </Canvas>\n        </div>\n    )\n}","\n\nexport const PeriodicTable = () => {\n    return (\n        <div className=\"periodic-table\">\n            <div id={\"Li\"} className=\"periodic-table__element periodic-table__element--alkali-metal li\">\n                <div className=\"name\">Lithium</div>\n                <div className=\"atomic-number\">3</div>\n                <div className=\"symbol\">Li</div>\n                <div className=\"atomic-weight\">6.94</div>\n            </div>\n            <div id={\"Na\"} className=\"periodic-table__element periodic-table__element--alkali-metal na\">\n                <div className=\"name\">Sodium</div>\n                <div className=\"atomic-number\">11</div>\n                <div className=\"symbol\">Na</div>\n                <div className=\"atomic-weight\">22.990</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkali-metal k\">\n                <div className=\"name\">Potassium</div>\n                <div className=\"atomic-number\">19</div>\n                <div className=\"symbol\">K</div>\n                <div className=\"atomic-weight\">39.098</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkali-metal rb\">\n                <div className=\"name\">Rubidium</div>\n                <div className=\"atomic-number\">37</div>\n                <div className=\"symbol\">Rb</div>\n                <div className=\"atomic-weight\">85.468</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkali-metal cs\">\n                <div className=\"name\">Caesium</div>\n                <div className=\"atomic-number\">55</div>\n                <div className=\"symbol\">Cs</div>\n                <div className=\"atomic-weight\">132.91</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkali-metal fr\">\n                <div className=\"name\">Francium</div>\n                <div className=\"atomic-number\">87</div>\n                <div className=\"symbol\">Fr</div>\n                <div className=\"atomic-weight\">[223]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkaline-earth-metal be\">\n                <div className=\"name\">Berilium</div>\n                <div className=\"atomic-number\">4</div>\n                <div className=\"symbol\">Be</div>\n                <div className=\"atomic-weight\">9.0122</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkaline-earth-metal mg\">\n                <div className=\"name\">Magnesium</div>\n                <div className=\"atomic-number\">12</div>\n                <div className=\"symbol\">Mg</div>\n                <div className=\"atomic-weight\">24.305</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkaline-earth-metal ca\">\n                <div className=\"name\">Calcium</div>\n                <div className=\"atomic-number\">20</div>\n                <div className=\"symbol\">Ca</div>\n                <div className=\"atomic-weight\">40.078</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkaline-earth-metal sr\">\n                <div className=\"name\">Stronium</div>\n                <div className=\"atomic-number\">38</div>\n                <div className=\"symbol\">Sr</div>\n                <div className=\"atomic-weight\">87.62</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkaline-earth-metal ba\">\n                <div className=\"name\">Barium</div>\n                <div className=\"atomic-number\">56</div>\n                <div className=\"symbol\">Ba</div>\n                <div className=\"atomic-weight\">137.33</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--alkaline-earth-metal ra\">\n                <div className=\"name\">Radium</div>\n                <div className=\"atomic-number\">88</div>\n                <div className=\"symbol\">Ra</div>\n                <div className=\"atomic-weight\">[226]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal sc\">\n                <div className=\"name\">Scandium</div>\n                <div className=\"atomic-number\">21</div>\n                <div className=\"symbol\">Sc</div>\n                <div className=\"atomic-weight\">44.956</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal y\">\n                <div className=\"name\">Yttrium</div>\n                <div className=\"atomic-number\">39</div>\n                <div className=\"symbol\">Y</div>\n                <div className=\"atomic-weight\">88.906</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal ti\">\n                <div className=\"name\">Titanium</div>\n                <div className=\"atomic-number\">22</div>\n                <div className=\"symbol\">Ti</div>\n                <div className=\"atomic-weight\">47.867</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal zr\">\n                <div className=\"name\">Zirconium</div>\n                <div className=\"atomic-number\">40</div>\n                <div className=\"symbol\">Zr</div>\n                <div className=\"atomic-weight\">91.224</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal hf\">\n                <div className=\"name\">Hafnium</div>\n                <div className=\"atomic-number\">72</div>\n                <div className=\"symbol\">Hf</div>\n                <div className=\"atomic-weight\">178.49</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal rf\">\n                <div className=\"name\">Rutherfordium</div>\n                <div className=\"atomic-number\">104</div>\n                <div className=\"symbol\">Rf</div>\n                <div className=\"atomic-weight\">[267]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal v\">\n                <div className=\"name\">Vanadium</div>\n                <div className=\"atomic-number\">23</div>\n                <div className=\"symbol\">V</div>\n                <div className=\"atomic-weight\">50.942</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal nb\">\n                <div className=\"name\">Niobium</div>\n                <div className=\"atomic-number\">41</div>\n                <div className=\"symbol\">Nb</div>\n                <div className=\"atomic-weight\">92.906</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal ta\">\n                <div className=\"name\">Tantalum</div>\n                <div className=\"atomic-number\">73</div>\n                <div className=\"symbol\">Ta</div>\n                <div className=\"atomic-weight\">180.95</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal db\">\n                <div className=\"name\">Dubnium</div>\n                <div className=\"atomic-number\">105</div>\n                <div className=\"symbol\">Db</div>\n                <div className=\"atomic-weight\">[268]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal cr\">\n                <div className=\"name\">Chromium</div>\n                <div className=\"atomic-number\">24</div>\n                <div className=\"symbol\">Cr</div>\n                <div className=\"atomic-weight\">51.996</div>\n            </div>\n\n            <div className=\"periodic-table__element periodic-table__element--transition-metal mo\">\n                <div className=\"name\">Molybdenum</div>\n                <div className=\"atomic-number\">42</div>\n                <div className=\"symbol\">Mo</div>\n                <div className=\"atomic-weight\">95.95</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal w\">\n                <div className=\"name\">Tungsten</div>\n                <div className=\"atomic-number\">74</div>\n                <div className=\"symbol\">W</div>\n                <div className=\"atomic-weight\">183.84</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal sg\">\n                <div className=\"name\">Seaborgium</div>\n                <div className=\"atomic-number\">106</div>\n                <div className=\"symbol\">Sg</div>\n                <div className=\"atomic-weight\">[268]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal mn\">\n                <div className=\"name\">Manganese</div>\n                <div className=\"atomic-number\">25</div>\n                <div className=\"symbol\">Mn</div>\n                <div className=\"atomic-weight\">54.938</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal tc\">\n                <div className=\"name\">Technetium</div>\n                <div className=\"atomic-number\">43</div>\n                <div className=\"symbol\">Tc</div>\n                <div className=\"atomic-weight\">[98]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal re\">\n                <div className=\"name\">Rhenium</div>\n                <div className=\"atomic-number\">75</div>\n                <div className=\"symbol\">Re</div>\n                <div className=\"atomic-weight\">186.21</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal bh\">\n                <div className=\"name\">Bohrium</div>\n                <div className=\"atomic-number\">107</div>\n                <div className=\"symbol\">Bh</div>\n                <div className=\"atomic-weight\">[270]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal fe\">\n                <div className=\"name\">Iron</div>\n                <div className=\"atomic-number\">26</div>\n                <div className=\"symbol\">Fe</div>\n                <div className=\"atomic-weight\">55.845</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal ru\">\n                <div className=\"name\">Ruthenium</div>\n                <div className=\"atomic-number\">44</div>\n                <div className=\"symbol\">Ru</div>\n                <div className=\"atomic-weight\">101.07</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal os\">\n                <div className=\"name\">Osmium</div>\n                <div className=\"atomic-number\">76</div>\n                <div className=\"symbol\">Os</div>\n                <div className=\"atomic-weight\">190.23</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal hs\">\n                <div className=\"name\">Hassium</div>\n                <div className=\"atomic-number\">108</div>\n                <div className=\"symbol\">Hs</div>\n                <div className=\"atomic-weight\">[270]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal co\">\n                <div className=\"name\">Cobalt</div>\n                <div className=\"atomic-number\">27</div>\n                <div className=\"symbol\">Co</div>\n                <div className=\"atomic-weight\">58.933</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal rh\">\n                <div className=\"name\">Rhodium</div>\n                <div className=\"atomic-number\">45</div>\n                <div className=\"symbol\">Rh</div>\n                <div className=\"atomic-weight\">102.91</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal ir\">\n                <div className=\"name\">Iridium</div>\n                <div className=\"atomic-number\">77</div>\n                <div className=\"symbol\">Ir</div>\n                <div className=\"atomic-weight\">192.22</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal ni\">\n                <div className=\"name\">Nickel</div>\n                <div className=\"atomic-number\">28</div>\n                <div className=\"symbol\">Ni</div>\n                <div className=\"atomic-weight\">58.693</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal pd\">\n                <div className=\"name\">Palladium</div>\n                <div className=\"atomic-number\">46</div>\n                <div className=\"symbol\">Pd</div>\n                <div className=\"atomic-weight\">106.42</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal pt\">\n                <div className=\"name\">Platinum</div>\n                <div className=\"atomic-number\">78</div>\n                <div className=\"symbol\">Pt</div>\n                <div className=\"atomic-weight\">195.08</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal cu\">\n                <div className=\"name\">Copper</div>\n                <div className=\"atomic-number\">29</div>\n                <div className=\"symbol\">Cu</div>\n                <div className=\"atomic-weight\">63.546</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal ag\">\n                <div className=\"name\">Silver</div>\n                <div className=\"atomic-number\">47</div>\n                <div className=\"symbol\">Ag</div>\n                <div className=\"atomic-weight\">107.87</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--transition-metal au\">\n                <div className=\"name\">Gold</div>\n                <div className=\"atomic-number\">79</div>\n                <div className=\"symbol\">Au</div>\n                <div className=\"atomic-weight\">196.97</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal zn\">\n                <div className=\"name\">Zn</div>\n                <div className=\"atomic-number\">30</div>\n                <div className=\"symbol\">Zn</div>\n                <div className=\"atomic-weight\">65.38</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal cd\">\n                <div className=\"name\">Cadmium</div>\n                <div className=\"atomic-number\">48</div>\n                <div className=\"symbol\">Cd</div>\n                <div className=\"atomic-weight\">112.41</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal hg\">\n                <div className=\"name\">Mercury</div>\n                <div className=\"atomic-number atomic-number--green\">80</div>\n                <div className=\"symbol\">Hg</div>\n                <div className=\"atomic-weight\">200.59</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal cn\">\n                <div className=\"name\">Coppernicum</div>\n                <div className=\"atomic-number\">112</div>\n                <div className=\"symbol\">Cn</div>\n                <div className=\"atomic-weight\">[285]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal al\">\n                <div className=\"name\">Aluminium</div>\n                <div className=\"atomic-number\">13</div>\n                <div className=\"symbol\">Al</div>\n                <div className=\"atomic-weight\">26.982</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal ga\">\n                <div className=\"name\">Gallium</div>\n                <div className=\"atomic-number\">31</div>\n                <div className=\"symbol\">Ga</div>\n                <div className=\"atomic-weight\">69.723</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal in\">\n                <div className=\"name\">Indium</div>\n                <div className=\"atomic-number\">49</div>\n                <div className=\"symbol\">In</div>\n                <div className=\"atomic-weight\">114.82</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal tl\">\n                <div className=\"name\">Thallium</div>\n                <div className=\"atomic-number\">81</div>\n                <div className=\"symbol\">Tl</div>\n                <div className=\"atomic-weight\">204.38</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal sn\">\n                <div className=\"name\">Tin</div>\n                <div className=\"atomic-number\">50</div>\n                <div className=\"symbol\">Sn</div>\n                <div className=\"atomic-weight\">118.71</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal pb\">\n                <div className=\"name\">Lead</div>\n                <div className=\"atomic-number\">82</div>\n                <div className=\"symbol\">Pb</div>\n                <div className=\"atomic-weight\">207.2</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal bi\">\n                <div className=\"name\">Bismuth</div>\n                <div className=\"atomic-number\">83</div>\n                <div className=\"symbol\">Bi</div>\n                <div className=\"atomic-weight\">208.98</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--post-transition-metal po\">\n                <div className=\"name\">Polonium</div>\n                <div className=\"atomic-number\">84</div>\n                <div className=\"symbol\">Po</div>\n                <div className=\"atomic-weight\">[209]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--metaloid b\">\n                <div className=\"name\">Boron</div>\n                <div className=\"atomic-number\">5</div>\n                <div className=\"symbol\">B</div>\n                <div className=\"atomic-weight\">10.81</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--metaloid si\">\n                <div className=\"name\">Silicon</div>\n                <div className=\"atomic-number\">14</div>\n                <div className=\"symbol\">Si</div>\n                <div className=\"atomic-weight\">28.085</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--metaloid ge\">\n                <div className=\"name\">Germanium</div>\n                <div className=\"atomic-number\">32</div>\n                <div className=\"symbol\">Ge</div>\n                <div className=\"atomic-weight\">76.630</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--metaloid as\">\n                <div className=\"name\">Arsenic</div>\n                <div className=\"atomic-number\">33</div>\n                <div className=\"symbol\">As</div>\n                <div className=\"atomic-weight\">74.922</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--metaloid sb\">\n                <div className=\"name\">Antimony</div>\n                <div className=\"atomic-number\">51</div>\n                <div className=\"symbol\">Sb</div>\n                <div className=\"atomic-weight\">121.76</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--metaloid te\">\n                <div className=\"name\">Tellurium</div>\n                <div className=\"atomic-number\">52</div>\n                <div className=\"symbol\">Te</div>\n                <div className=\"atomic-weight\">127.60</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--metaloid at\">\n                <div className=\"name\">Astatine</div>\n                <div className=\"atomic-number\">82</div>\n                <div className=\"symbol\">At</div>\n                <div className=\"atomic-weight\">[210]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal\">\n                <div className=\"name\">Hydrogen</div>\n                <div className=\"atomic-number\">1</div>\n                <div className=\"symbol\">H</div>\n                <div className=\"atomic-weight\">1.008</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal c\">\n                <div className=\"name\">Carbon</div>\n                <div className=\"atomic-number\">6</div>\n                <div className=\"symbol\">C</div>\n                <div className=\"atomic-weight\">12.011</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal n\">\n                <div className=\"name\">Nitrogen</div>\n                <div className=\"atomic-number\">7</div>\n                <div className=\"symbol\">N</div>\n                <div className=\"atomic-weight\">14.007</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal o\">\n                <div className=\"name\">Oxygen</div>\n                <div className=\"atomic-number\">8</div>\n                <div className=\"symbol\">O</div>\n                <div className=\"atomic-weight\">15.999</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal f\">\n                <div className=\"name\">Fluorine</div>\n                <div className=\"atomic-number\">9</div>\n                <div className=\"symbol\">F</div>\n                <div className=\"atomic-weight\">18.998</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal p\">\n                <div className=\"name\">Phosphorus</div>\n                <div className=\"atomic-number\">15</div>\n                <div className=\"symbol\">P</div>\n                <div className=\"atomic-weight\">30.974</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal s\">\n                <div className=\"name\">Sulfur</div>\n                <div className=\"atomic-number\">16</div>\n                <div className=\"symbol\">S</div>\n                <div className=\"atomic-weight\">32.06</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal cl\">\n                <div className=\"name\">Chlorine</div>\n                <div className=\"atomic-number\">17</div>\n                <div className=\"symbol\">Cl</div>\n                <div className=\"atomic-weight\">35.45</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal se\">\n                <div className=\"name\">Selenium</div>\n                <div className=\"atomic-number\">34</div>\n                <div className=\"symbol\">Se</div>\n                <div className=\"atomic-weight\">78.971</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal br\">\n                <div className=\"name\">Bromine</div>\n                <div className=\"atomic-number\">35</div>\n                <div className=\"symbol\">Br</div>\n                <div className=\"atomic-weight\">79.904</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--reactive-nonmetal i\">\n                <div className=\"name\">Iodine</div>\n                <div className=\"atomic-number\">53</div>\n                <div className=\"symbol\">I</div>\n                <div className=\"atomic-weight\">126.90</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--lanthanide la\">\n                <div className=\"name\">Lanthanum</div>\n                <div className=\"atomic-number\">57</div>\n                <div className=\"symbol\">La</div>\n                <div className=\"atomic-weight\">138.91</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--actinide ac\">\n                <div className=\"name\">Actinium</div>\n                <div className=\"atomic-number\">89</div>\n                <div className=\"symbol\">Ac</div>\n                <div className=\"atomic-weight\">[227]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--noble-gas he\">\n                <div className=\"name\">Helium</div>\n                <div className=\"atomic-number\">2</div>\n                <div className=\"symbol\">He</div>\n                <div className=\"atomic-weight\">4.0026</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--noble-gas ne\">\n                <div className=\"name\">Neon</div>\n                <div className=\"atomic-number\">10</div>\n                <div className=\"symbol\">Ne</div>\n                <div className=\"atomic-weight\">20.180</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--noble-gas he\">\n                <div className=\"name\">Argon</div>\n                <div className=\"atomic-number\">18</div>\n                <div className=\"symbol\">Ar</div>\n                <div className=\"atomic-weight\">39.948</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--noble-gas he\">\n                <div className=\"name\">Krypton</div>\n                <div className=\"atomic-number\">36</div>\n                <div className=\"symbol\">Kr</div>\n                <div className=\"atomic-weight\">83.798</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--noble-gas he\">\n                <div className=\"name\">Xenon</div>\n                <div className=\"atomic-number\">54</div>\n                <div className=\"symbol\">Xe</div>\n                <div className=\"atomic-weight\">131.29</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--noble-gas he\">\n                <div className=\"name\">Radon</div>\n                <div className=\"atomic-number\">86</div>\n                <div className=\"symbol\">Rn</div>\n                <div className=\"atomic-weight\">[222]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown og\">\n                <div className=\"name\">Ogannesson</div>\n                <div className=\"atomic-number\">118</div>\n                <div className=\"symbol\">Og</div>\n                <div className=\"atomic-weight\">[294]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown mt\">\n                <div className=\"name\">Meitnerium</div>\n                <div className=\"atomic-number\">109</div>\n                <div className=\"symbol\">Mt</div>\n                <div className=\"atomic-weight\">[278]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown ds\">\n                <div className=\"name\">Darmstadtium</div>\n                <div className=\"atomic-number\">110</div>\n                <div className=\"symbol\">Ds</div>\n                <div className=\"atomic-weight\">[281]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown rg\">\n                <div className=\"name\">Roentgenium</div>\n                <div className=\"atomic-number\">111</div>\n                <div className=\"symbol\">Rg</div>\n                <div className=\"atomic-weight\">[282]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown nh\">\n                <div className=\"name\">Nihonium</div>\n                <div className=\"atomic-number\">113</div>\n                <div className=\"symbol\">Nh</div>\n                <div className=\"atomic-weight\">[286]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown fl\">\n                <div className=\"name\">Flerovium</div>\n                <div className=\"atomic-number\">114</div>\n                <div className=\"symbol\">Fl</div>\n                <div className=\"atomic-weight\">[289]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown mc\">\n                <div className=\"name\">Moscovium</div>\n                <div className=\"atomic-number\">115</div>\n                <div className=\"symbol\">Mc</div>\n                <div className=\"atomic-weight\">[290]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown lv\">\n                <div className=\"name\">Livermorium</div>\n                <div className=\"atomic-number\">116</div>\n                <div className=\"symbol\">Lv</div>\n                <div className=\"atomic-weight\">[293]</div>\n            </div>\n            <div className=\"periodic-table__element periodic-table__element--unknown ts\">\n                <div className=\"name\">Tennessine</div>\n                <div className=\"atomic-number\">117</div>\n                <div className=\"symbol\">Ts</div>\n                <div className=\"atomic-weight\">[294]</div>\n            </div>\n        </div>\n\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport {getMenuOpen, setMenuOpen} from \"../../features/view/viewSlice\";\nimport cx from \"classnames\";\nimport {BiChevronLeft} from \"react-icons/bi\";\nimport * as React from \"react\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport {PeriodicTable} from \"./PeriodicTable\";\nimport {useState} from \"react\";\n\n\nconst ElementSettings = (elem) => {\n    return (\n        <div className={\"element-settings\"}>\n\n        </div>\n    )\n}\n\n\nexport const ViewAppElementSettings = ({}) => {\n    let open = useSelector(getMenuOpen) === \"element\"\n    let dispatch = useDispatch()\n    const [elem, setElem] = useState(\"\");\n\n    return (\n        <div className={cx(\"view-app-menu\", {\"open\": open})}>\n            <div className={\"view-app-menu-container\"}>\n                <h6>ELEMENT SETTINGS</h6>\n                <PeriodicTable/>\n            </div>\n        </div>\n    )\n}","import * as React from \"react\";\nimport {useSelector} from \"react-redux\";\nimport {getObject} from \"../../features/preview/previewSlice\";\nimport {useEffect, useState} from \"react\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {Molecule, Controls, UnitCell} from \"../PreviewPanel\";\nimport {getComp} from \"../../features/compare/compareSlice\";\nimport {Plane, ViewAppPlaceHolder} from \"./ViewAppPlaceholder\";\nimport {Loading} from \"../../Loading\";\nimport \"./view.scss\"\nimport {getViewObject} from \"../../features/view/viewSlice\";\nimport { ViewAppElementSettings} from \"./ViewAppElementSettings\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\n\nexport const ViewAppCanvas = () => {\n    let currentObject = useSelector(getViewObject)\n    let token = useSelector(getAccessToken)\n\n    const [dataset, setDataset] = useState(null);\n    const [loading, setLoading] = useState(false)\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(`/api/crystal/id/${currentObject}`, {\n            headers: {\n                'Authorization': `Bearer:${token}`,\n                'Content-Type': 'application/json'\n            }\n        }).then(data => data.json())\n            .then((d) => {\n                let id = d[\"id\"]\n                fetch(`/api/crystal/molecule/${id}`, {\n                    headers: {\n                        'Authorization': `Bearer:${token}`,\n                        'Content-Type': 'application/json'\n                    }\n                }).then(data => data.json())\n                    .then((d) => {\n                        setDataset(d)\n                        setLoading(false)\n                    })\n            })\n    }, [currentObject])\n\n    if (currentObject === undefined) {\n        return (\n            <ViewAppPlaceHolder/>\n        )\n    }\n\n    if (loading)\n        return (\n            <Loading style={{\"display\": \"grid\",\n                \"justify-content\": \"center\",\n                \"align-content\": \"center\",\n                \"height\": \"100vh\",\n                \"background\": \"var(--defaultprimary)\"}}/>\n        )\n\n    let content = <div className=\"no-atom-geometry-content\">\n        <p>No Geometry found.</p>\n    </div>\n\n\n\n    if (dataset != null && !loading && dataset.atoms) {\n\n        content =\n            <>\n                <Canvas className=\"view-app-canvas\"\n                        camera={{ position: [10, 10, 10], fov: 62 }}>\n                    <ambientLight />\n                    <pointLight position={[1, 1, 1]} />\n                    <Molecule dataset={dataset} rotY={0.00} rotX={0.0} center={false}/>\n                    <UnitCell dataset={dataset}/>\n                    <Plane/>\n                    <Controls/>\n                </Canvas>\n                <ViewAppElementSettings/>\n            </>\n\n    }\n    return (\n        <div className={\"view-app-main-canvas\"}>\n            { content }\n        </div>\n    )\n}","import * as React from \"react\";\nimport './view.scss'\nimport  'csv-parser'\nimport SearchPanel from \"../search/SearchPanel\";\nimport {ViewAppCanvas} from \"./ViewAppCanvas\";\nimport {ViewAppElementSettings} from \"./ViewAppElementSettings\";\n\n\nexport function ViewAppMain({}) {\n\n    return (\n        <div className=\"view-app-main\">\n            <SearchPanel/>\n            <ViewAppCanvas/>\n            <ViewAppElementSettings/>\n        </div>\n    )\n}\n","import * as React from \"react\";\nimport './view.scss'\nimport {SearchBar} from \"../search/SearchBar\";\nimport {openSearchPanel, toggleSearchPanel} from \"../../features/search/searchSlice\";\nimport {useDispatch} from \"react-redux\";\nimport SearchIcon from \"@mui/icons-material/Search\";\nimport ListIcon from \"@mui/icons-material/List\";\nimport SettingsIcon from \"@mui/icons-material/Settings\";\nimport PreviewIcon from \"@mui/icons-material/Preview\";\nimport DeleteIcon from \"@mui/icons-material/Delete\"\nimport WorkspacesIcon from \"@mui/icons-material/Workspaces\"\nimport ManageSearchIcon from \"@mui/icons-material/ManageSearch\"\nimport {toggleMenu} from \"../../features/view/viewSlice\";\nimport {SearchFacetSettings} from \"../search/SearchFacetSettings\";\nimport { DiAtom } from 'react-icons/di';\n\nexport function ViewAppTopBar() {\n    const dispatch = useDispatch()\n\n    const testOpen = () => {\n        console.log(\"opening panel\")\n    }\n\n    return (\n        <>\n            <div className=\"view-app-top-bar\">\n                <div className={\"left-content\"}>\n                    <button onClick={() => dispatch(toggleSearchPanel(\"\"))}>\n                        <SearchIcon/>\n                    </button>\n                    <SearchBar/>\n                    <p>by:</p>\n                    <SearchFacetSettings/>\n                </div>\n                <div className={\"right-content\"}>\n                    <button onClick={() => dispatch(toggleMenu(true))}>\n                        <DiAtom size={\"24\"}/>\n                    </button>\n                    <button >\n                        <DeleteIcon/>\n                    </button>\n                </div>\n            </div>\n        </>\n    )\n}\n","import * as React from \"react\";\nimport './view.scss'\nimport {ViewAppMain} from \"./ViewAppMain\";\nimport {ViewAppTopBar} from \"./ViewAppTopBar\";\nimport {useSelector} from \"react-redux\";\nimport {getOpenApp} from \"../../features/app/appSlice\";\nimport cx from \"classnames\";\n\nexport const ViewApp = () => {\n    const openApp = useSelector(getOpenApp)\n\n    return (\n        <div className={cx(\"view-app\", {\"hidden\": openApp !== \"view\"})}>\n            <ViewAppTopBar/>\n            <ViewAppMain/>\n        </div>\n    )\n}\n","import ScienceIcon from \"@mui/icons-material/Science\";\nimport ListIcon from \"@mui/icons-material/List\";\nimport StorageIcon from \"@mui/icons-material/Storage\";\nimport React, {useState} from \"react\";\nimport cx from \"classnames\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getCurrentTab, setTab} from \"../../features/create/createSlice\";\n\n\nexport const CreateAppTopBar = () => {\n    let dispatch = useDispatch()\n    let tab = useSelector(getCurrentTab)\n    const getClass = (currTab, thisTab) => {\n        return cx(\"create-app-tab-button\", {\"selected\": currTab === thisTab})\n    }\n\n    return (\n        <div className={\"create-app-top-bar\"}>\n            <div className={\"left-content\"}>\n                <div className=\"create-app-tabs\">\n                    <button className={getClass(\"crystal\", tab)} onClick={() => dispatch(setTab(\"crystal\"))}>\n                        <ScienceIcon fontSize={\"small\"}/>\n                        Crystal\n                    </button>\n                    <button className={getClass(\"subset\", tab)} onClick={() => dispatch(setTab(\"subset\"))}>\n                        <ListIcon fontSize={\"small\"}/>\n                        Subset\n                    </button>\n                    <button className={getClass(\"source\", tab)} onClick={() => dispatch(setTab(\"source\"))}>\n                        <StorageIcon fontSize={\"small\"}/>\n                        Source\n                    </button>\n                </div>\n            </div>\n            <div className={\"right-content\"}>\n\n            </div>\n        </div>\n    )\n}","import React, {useState} from \"react\";\n\n\nexport const InputField = ({label, ph, name, id}) => {\n    return (\n        <div className=\"form__group field\">\n            <input type=\"input\" className=\"form__field\" placeholder={ph} name={name} id={id} required/>\n            <label htmlFor={name} className=\"form__label\">{label}</label>\n        </div>\n    )\n}","import {useDispatch, useSelector} from \"react-redux\";\nimport cx from 'classnames';\nimport {getCoordinateSystem, setCoordinateSystem} from \"../../features/create/createSlice\";\n\nexport const CreateAppCoordinateSwitch = () => {\n    let dispatch = useDispatch()\n    let coordSys = useSelector(getCoordinateSystem)\n    let useFract = coordSys === \"fract\"\n    let useCart = !useFract\n\n    return (\n        <div id={\"button-switch\"} className={\"button-switch\"}>\n            <button className={cx(\"switch-button\", {active: useFract})}\n                    onClick={() => dispatch(setCoordinateSystem(\"fract\"))}>Fractional</button>\n            <button className={cx(\"switch-button\", {active: useCart})}\n                    onClick={() => dispatch(setCoordinateSystem(\"cartn\"))}>Cartesian</button>\n        </div>\n    )\n}","\nexport function gcd(a, b) {\n    if (a === 0)\n        return b;\n    return gcd(b % a, a);\n}\n\nexport function findGCD(arr, n) {\n    let result = arr[0];\n    for (let i = 1; i < n; i++) {\n        result = gcd(arr[i], result);\n\n        if (result === 1) {\n            return 1;\n        }\n    }\n    return result;\n}\n\nexport const prime_comp = (composition) => {\n    if (composition) {\n        if (composition.includes(\".\"))\n            return composition\n        else {\n            let re = /[a-zA-Z]+\\d+[.]?/g\n            let matches = [...composition.matchAll(re)]\n            let counts = matches.map((x) => x[0])\n\n            let elems = counts.map((x) => {\n                const re = /[a-zA-Z]+/g\n                return [...x.matchAll(re)]\n            }).map((x) => x[0][0])\n\n            let elem_counts = counts.map((x) => {\n                const re = /[\\d]+/g\n                return [...x.matchAll(re)]\n            }).map((x) => parseInt(x[0]))\n            const gcd_counts = findGCD(elem_counts, elem_counts.length)\n            const prime_counts = elem_counts.map((x) => x / gcd_counts)\n            let prime_comp = \"\"\n            for (let i = 0; i < elems.length; i++){\n                prime_comp += elems[i] + prime_counts[i] + \" \"\n            }\n            return prime_comp.slice(0, -1)\n        }\n    } else {\n        return \"\"\n    }\n}\n\nexport const extractCrystalMetaData = (cifAsJson) => {\n    return {\n        \"MnemonicId\": 0,\n        \"Composition\": cifAsJson[\"_chemical_formula_sum\"] || \"\",\n        \"PrimeComposition\": prime_comp(cifAsJson[\"_chemical_formula_sum\"]) || \"\",\n        \"ChemicalName\": cifAsJson[\"_chemical_name_common\"] || \"\",\n        \"Has3dStructure\": cifAsJson[\"_atom_site\"] === undefined || true,\n        \"IsDisordered\": cifAsJson[\"_atom_site\"][\"_atom_site_disorder_group\"] || false,\n    }\n}\n\nconst removeTrailing = (str) => {\n    if (str)\n        return safeParse(str.split(\"(\")[0])\n    else\n        return undefined\n}\n\n// OK\nexport const extractAtoms = (cifAsJson) => {\n    if (cifAsJson[\"_atom_site\"]) {\n        return cifAsJson[\"_atom_site\"].map((atom) => {\n            return {\n                \"X\": removeTrailing(atom[\"_atom_site_fract_x\"]),\n                \"X_cart\": removeTrailing(atom[\"_atom_site_cartn_x\"]),\n                \"Y\": removeTrailing(atom[\"_atom_site_fract_y\"]),\n                \"Y_cart\": removeTrailing(atom[\"_atom_site_cartn_y\"]),\n                \"Z\": removeTrailing(atom[\"_atom_site_fract_z\"]),\n                \"Z_cart\": removeTrailing(atom[\"_atom_site_cartn_z\"]),\n                \"Label\": atom[\"_atom_site_label\"],\n                \"Symbol\": atom[\"_atom_site_type_symbol\"]\n            }\n        })\n    } else {\n        return []\n    }\n}\n\n// OK\nexport const extractBonds = (cifAsJson) => {\n    if (cifAsJson[\"_geom_bond\"]) {\n        return cifAsJson[\"_geom_bond\"].map((bond) => {\n            return {\n                \"Label1\": bond[\"_geom_bond_atom_site_label_1\"],\n                \"Label2\": bond[\"_geom_bond_atom_site_label_2\"],\n                \"Distance\": removeTrailing(bond[\"_geom_bond_distance\"]),\n            }\n        })\n    } else {\n        return []\n    }\n}\n\nconst safeParse = (val) => {\n    if (val)\n        return parseFloat(val)\n    else return undefined\n}\n\nexport const extractUnitCell = (cifAsJson) => {\n    let symm = \"(\"\n    if (cifAsJson._space_group_symop_operation_xyz) {\n        symm += cifAsJson._space_group_symop_operation_xyz.reduce((total, n) => \"'\" + n._space_group_symop_operation_xyz + \"',\" + total, \"\")\n    } else if (cifAsJson._symmetry_equiv_pos) {\n        symm += cifAsJson._symmetry_equiv_pos.reduce((total, n) => \"'\" + n._symmetry_equiv_pos_as_xyz + \"',\" + total, \"\")\n    }\n\n    let final_symm = symm.slice(0, -1) + \")\"\n\n    return {\n        \"A\": safeParse(cifAsJson[\"_cell_length_a\"]),\n        \"B\": safeParse(cifAsJson[\"_cell_length_b\"]),\n        \"C\": safeParse(cifAsJson[\"_cell_length_c\"]),\n        \"Alpha\": safeParse(cifAsJson[\"_cell_angle_alpha\"]),\n        \"Beta\": safeParse(cifAsJson[\"_cell_angle_beta\"]),\n        \"Gamma\": safeParse(cifAsJson[\"_cell_angle_gamma\"]),\n        \"CellVolume\": safeParse(cifAsJson[\"_cell_volume\"]),\n        \"SymmetryOperators\": final_symm\n    }\n}","import cx from \"classnames\"\nimport {InputField} from \"../base/InputField\";\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    setReadingFile,\n    setCurrentMessage,\n    getCurrentMessage,\n    getCoordinateSystem, getSource,\n    getStatus, setStatus\n} from \"../../features/create/createSlice\";\nimport { cifParser } from 'cif-to-json';\nimport {LoadingCustom} from \"../../Loading\";\nimport {\n    addAccessToken,\n    addRefreshToken,\n    getAccessToken,\n    getCurrentUser,\n    getRefreshToken\n} from \"../../features/auth/authSlice\";\nimport {refresh} from \"../base/refresh\";\nimport {CreateAppSourceDropdown} from \"./CreateAppSourceDropdown\";\nimport {CreateAppCoordinateSwitch} from \"./CreateAppCoordinateSwitch\";\nimport {BsCheckCircle, BsXCircle} from 'react-icons/bs'\nimport {findGCD, gcd, prime_comp} from \"../home/CIFHelpers\";\n\n\nexport const InputItem = ({id, label, onChange, value}) => {\n    return (\n        <div className={\"input-item\"}>\n            <label htmlFor={id}>{label}</label>\n            <br/>\n            <input type={\"text\"} id={id} onChange={onChange} value={value}/>\n        </div>\n    )\n}\n\n\nexport const DataItem = ({label, value}) => {\n    return (\n        <div className={\"data-item\"}>\n            <p>{label}</p>\n            <p>{value}</p>\n        </div>\n    )\n}\n\nexport const check = (item) => {\n    if (item === undefined)\n        return \"\"\n    else return item\n}\n\nexport const AtomRow = ({data}) => {\n    let coordinateSystem = useSelector(getCoordinateSystem)\n\n    return (\n        <tr>\n            <td>{check(data._atom_site_label)}</td>\n            <td>{check(data._atom_site_type_symbol)}</td>\n            <td>{check(data[`_atom_site_${coordinateSystem}_x`])}</td>\n            <td>{check(data[`_atom_site_${coordinateSystem}_y`])}</td>\n            <td>{check(data[`_atom_site_${coordinateSystem}_z`])}</td>\n        </tr>\n    )\n}\n\nconst BondRow = ({data}) => {\n    return (\n        <tr>\n            <td>{check(data._geom_bond_atom_site_label_1)}</td>\n            <td>{check(data._geom_bond_atom_site_label_2)}</td>\n            <td>{check(data._geom_bond_distance)}</td>\n        </tr>\n    )\n}\n\nconst SymmetryRow = ({data}) => {\n    return (\n        <tr>\n            <td>{check(data._symmetry_equiv_pos_site_id)}</td>\n            <td>{check(data._symmetry_equiv_pos_as_xyz)}</td>\n        </tr>\n    )\n}\n\nconst SymmetryRow2 = ({data}) => {\n    console.log(data._space_group_symop_operation_xyz)\n    return (\n        <tr>\n            <td>{check(data._space_group_symop_operation_xyz)}</td>\n        </tr>\n    )\n}\n\nconst CreationProgress = () => {\n    let message = useSelector(getCurrentMessage)\n    let status = useSelector(getStatus)\n    console.log(message)\n    return (\n        <div className={\"creation-progress\"}>\n            {!(status === \"complete\") || <BsCheckCircle size={60}/>}\n            {!(status === \"loading\") || <LoadingCustom width={\"100px\"} height={\"100px\"} />}\n            {!(status === \"failed\") || <BsXCircle size={60}/>}\n            <h4>{message}</h4>\n        </div>\n    )\n}\n\n\nconst extractCrystalMetaData = (cifAsJson) => {\n    console.log(\"inside extract cmd\")\n    console.log(cifAsJson)\n    return {\n        \"MnemonicId\": 0,\n        \"Composition\": cifAsJson[\"_chemical_formula_sum\"] || \"\",\n        \"PrimeComposition\": prime_comp(cifAsJson[\"_chemical_formula_sum\"]) || \"\",\n        \"ChemicalName\": cifAsJson[\"_chemical_name_common\"] || \"\",\n        \"Has3dStructure\": cifAsJson[\"_atom_site\"] === undefined || true,\n        \"IsDisordered\": cifAsJson[\"_atom_site\"][\"_atom_site_disorder_group\"] || false,\n    }\n}\n\nconst removeTrailing = (str) => {\n    if (str)\n        return safeParse(str.split(\"(\")[0])\n    else\n        return undefined\n}\n\nconst extractAtoms = (cifAsJson, id) => {\n    if (cifAsJson[\"_atom_site\"]) {\n        return cifAsJson[\"_atom_site\"].map((atom) => {\n            return {\n                \"CrystalID\": id,\n                \"X\": removeTrailing(atom[\"_atom_site_fract_x\"]),\n                \"X_cart\": removeTrailing(atom[\"_atom_site_cartn_x\"]),\n                \"Y\": removeTrailing(atom[\"_atom_site_fract_y\"]),\n                \"Y_cart\": removeTrailing(atom[\"_atom_site_cartn_y\"]),\n                \"Z\": removeTrailing(atom[\"_atom_site_fract_z\"]),\n                \"Z_cart\": removeTrailing(atom[\"_atom_site_cartn_z\"]),\n                \"Label\": atom[\"_atom_site_label\"],\n                \"Symbol\": atom[\"_atom_site_type_symbol\"]\n            }\n        })\n    } else {\n        return []\n    }\n}\n\nconst extractBonds = (cifAsJson, id) => {\n    if (cifAsJson[\"_geom_bond\"]) {\n        return cifAsJson[\"_geom_bond\"].map((bond) => {\n            return {\n                \"CrystalID\": id,\n                \"Label1\": bond[\"_geom_bond_atom_site_label_1\"],\n                \"Label2\": bond[\"_geom_bond_atom_site_label_2\"],\n                \"Distance\": removeTrailing(bond[\"_geom_bond_distance\"]),\n            }\n        })\n    } else {\n        return []\n    }\n}\n\nconst safeParse = (val) => {\n    if (val)\n        return parseFloat(val)\n    else return undefined\n}\n\nconst extractUnitCell = (cifAsJson, id) => {\n    let symm = \"(\"\n    if (cifAsJson._space_group_symop_operation_xyz) {\n        symm += cifAsJson._space_group_symop_operation_xyz.reduce((total, n) => \"'\" + n._space_group_symop_operation_xyz + \"',\" + total, \"\")\n    } else if (cifAsJson._symmetry_equiv_pos) {\n        symm += cifAsJson._symmetry_equiv_pos.reduce((total, n) => \"'\" + n._symmetry_equiv_pos_as_xyz + \"',\" + total, \"\")\n    }\n\n    let final_symm = symm.slice(0, -1) + \")\"\n\n    return {\n        \"CrystalID\": id,\n        \"A\": safeParse(cifAsJson[\"_cell_length_a\"]),\n        \"B\": safeParse(cifAsJson[\"_cell_length_b\"]),\n        \"C\": safeParse(cifAsJson[\"_cell_length_c\"]),\n        \"Alpha\": safeParse(cifAsJson[\"_cell_angle_alpha\"]),\n        \"Beta\": safeParse(cifAsJson[\"_cell_angle_beta\"]),\n        \"Gamma\": safeParse(cifAsJson[\"_cell_angle_gamma\"]),\n        \"CellVolume\": safeParse(cifAsJson[\"_cell_volume\"]),\n        \"SymmetryOperators\": final_symm\n    }\n}\n\n\n\n\nexport const CreateAppMainCrystal = ({open}) => {\n    let dispatch = useDispatch()\n    const [isFilePicked, setIsFilePicked] = useState(false);\n    const [isParsed, setIsParsed] = useState(false)\n    const [cifAsJson, setCifAsJson] = useState(null)\n    const [refCode, setRefCode] = useState(\"\")\n    const [polymorph, setPolymorph] = useState(\"\")\n    const [disabled, setDisabled] = useState(true)\n    const [family, setFamily] = useState(\"\")\n\n    let token = useSelector(getAccessToken)\n    let refreshToken = useSelector(getRefreshToken)\n    let user = useSelector(getCurrentUser)\n    let source = useSelector(getSource)\n\n    const parseCIF = (fileContents) => {\n        let result = cifParser(fileContents);\n        console.log(result)\n        return result\n    }\n\n    const changeHandler = async(event) => {\n        const file = event.target.files.item(0)\n        dispatch(setReadingFile(true))\n        const text = await file.text();\n        let parsed = parseCIF(text)\n        dispatch(setReadingFile(false))\n        setIsFilePicked(true)\n        setCifAsJson(parsed)\n        setIsParsed(true)\n        setDisabled(refCode === \"\" || false || family === \"\")\n    };\n\n    const createCrystal = async(event) => {\n        if (disabled)\n            return\n\n        dispatch(setStatus(\"loading\"))\n        fetch(\"/api/token/refresh\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer:${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\"refresh\": refreshToken})\n        })\n            .then((resp) => {\n                if (resp.status !== 200) {\n                    sessionStorage.clear()\n                    dispatch(addAccessToken(undefined))\n                    dispatch(addRefreshToken(undefined))\n                } else {\n                    resp.json()\n                        .then((r) => {\n                            console.log(r)\n                            let jwt = {\n                                \"access\": r.access,\n                                \"refresh\": r.refresh,\n                                \"user\": user\n                            }\n                            sessionStorage.setItem('token', JSON.stringify(jwt))\n                            dispatch(addAccessToken(jwt[\"access\"]))\n                            dispatch(addRefreshToken(jwt[\"refresh\"]))\n                        })\n                }\n            })\n\n        if (refCode === \"\") {\n            dispatch(setCurrentMessage(\"Please enter a Reference Code\"))\n            dispatch(setStatus(\"failed\"))\n            return\n        }\n\n        if (!isFilePicked) {\n            dispatch(setCurrentMessage(\"Please Select a CIF file\"))\n            dispatch(setStatus(\"failed\"))\n            return\n        }\n\n        dispatch(setCurrentMessage(\"Extracting meta data..\"))\n        let crystal = extractCrystalMetaData(cifAsJson)\n\n        fetch(`/api/crystal/`, {\n            method: \"POST\",\n            headers: {\n                'Authorization': `Bearer:${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                ...crystal,\n                \"Polymorph\": polymorph,\n                \"SourceID\": parseInt(source) || 0,\n                \"name\": refCode,\n                \"family\": family,\n            })\n        }).then((resp) => {\n            dispatch(setCurrentMessage(\"Adding Crystal Meta data..\"))\n            if (resp.status !== 200) {\n                dispatch(setCurrentMessage(\"Crystal Creation Failed.\"))\n                dispatch(setStatus(\"failed\"))\n            } else {\n                resp.json().then((data) => {\n                    console.log(data)\n                    let id = data[\"data\"][\"ID\"]\n                    dispatch(setCurrentMessage(\"Extracting atoms..\"))\n                    let atoms = extractAtoms(cifAsJson, id)\n                    dispatch(setCurrentMessage(\"Extracting bonds..\"))\n                    let bonds = extractBonds(cifAsJson, id)\n                    dispatch(setCurrentMessage(\"Extracting unit cell..\"))\n                    let unitCell = extractUnitCell(cifAsJson, id)\n                    dispatch(setCurrentMessage(\"Checking Reference Code..\"))\n                    fetch(`/api/crystal/${id}`, {\n                        method: 'POST',\n                        headers: {\n                            'Authorization': `Bearer:${token}`,\n                            'Content-Type': 'application/json',\n                        },\n                        body: JSON.stringify({\n                            \"atoms\": atoms,\n                            \"bonds\": bonds,\n                            \"unitCell\": unitCell,\n                        })\n                    }).then((data) => {\n                        if (data.status !== 200) {\n                            dispatch(setCurrentMessage(\"Error occurred during crystal creation\"))\n                            dispatch(setStatus(\"failed\"))\n                        } else {\n                            dispatch(setStatus(\"complete\"))\n                            dispatch(setCurrentMessage(\"Crystal Creation Successful\"))\n                        }\n                    })\n                })\n            }\n        })\n    }\n\n    return (\n        <div className={cx(\"create-tab-content\", {\"open\": open})}>\n            <div className={\"create-tab-crystal-meta-panel\"}>\n                <h6>From CIF:</h6>\n                <input type=\"file\" id=\"myFile\" name=\"filename\" onChange={changeHandler}/>\n                <br/>\n                <CreateAppCoordinateSwitch/>\n                <div>\n                    <div className=\"create-crystal-options-meta\">\n                        <InputItem label={\"Reference Code:\"} id={\"new-crystal-refcode\"}\n                                   value={refCode}\n                                   onChange={(e) => {\n                                       setRefCode(e.target.value)\n                                       setFamily(e.target.value.replace(/\\d+$/, \"\"))\n                                       console.log(refCode)\n                                       console.log(family)\n                                       setDisabled(e.target.value === \"\" || !isFilePicked || e.target.value.replace(/\\d+$/, \"\") === \"\")\n                                       console.log(disabled)\n                                   }} />\n                        <InputItem label={\"Family:\"} id={\"new-crystal-family\"}\n                                   value={family}\n                                   onChange={(e) => {\n                                       setFamily(e.target.value)\n                                       setDisabled(refCode === \"\" || !isFilePicked || e.target.value === \"\")\n                                   }}\n                                    />\n                        <InputItem label={\"Polymorph: (Defaults to None)\"} id={\"new-crystal-polymorph\"}\n                                   onChange={(e) => setPolymorph(e.target.value)} />\n                    </div>\n                    <button className={cx(\"create-crystal-options-button\", {\"disabled\": disabled})} onClick={createCrystal}>Create</button>\n                </div>\n                <br/>\n                <CreationProgress/>\n            </div>\n            <div className={\"create-tab-crystal-cif-results-panel\"}>\n                <h3>Crystal Information</h3>\n                {isParsed && Object.keys(cifAsJson).map(function(key, index) {\n                    let v = cifAsJson[key]\n                    if (typeof v === \"string\" || v instanceof String){\n                        return <DataItem label={key} value={v}/>\n                    } else return undefined\n                })}\n                <h3>Symmetry Equivalence</h3>\n                <table>\n                    <thead>\n                    <tr>\n                        <th colSpan=\"1\">Position Site Id</th>\n                        <th colSpan=\"1\">Position X,Y,Z</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {isParsed && cifAsJson._symmetry_equiv_pos && cifAsJson._symmetry_equiv_pos.map(function (i) {\n                        return <SymmetryRow data={i}/>\n                    })}\n                    </tbody>\n                </table>\n                <table>\n                    <thead>\n                    <tr>\n                        <th colSpan=\"1\">Space Group Symmetry Operation</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {isParsed && cifAsJson._space_group_symop_operation_xyz && cifAsJson._space_group_symop_operation_xyz.map(function (i) {\n                        return <SymmetryRow2 data={i}/>\n                    })}\n                    </tbody>\n                </table>\n                <h3>Atom Information</h3>\n                <table>\n                    <thead>\n                    <tr>\n                        <th colSpan=\"1\">Label</th>\n                        <th colSpan=\"1\">Species</th>\n                        <th colSpan=\"1\">X</th>\n                        <th colSpan=\"1\">Y</th>\n                        <th colSpan=\"1\">Z</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {isParsed && cifAsJson._atom_site && cifAsJson._atom_site.map(function (i) {\n                        return <AtomRow data={i}/>\n                    })}\n                    </tbody>\n                </table>\n                <h3>Bond Information</h3>\n                <table>\n                    <thead>\n                    <tr>\n                        <th colSpan=\"1\">Bond Label 1</th>\n                        <th colSpan=\"1\">Bond Label 2</th>\n                        <th colSpan=\"1\">Distance</th>\n                    </tr>\n                    </thead>\n                    <tbody>\n                    {isParsed && cifAsJson._geom_bond && cifAsJson._geom_bond.map(function (i) {\n                        return <BondRow data={i}/>\n                    })}\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    )\n}","import cx from \"classnames\";\nimport {InputItem} from \"./CreateAppMainCrystal\";\nimport React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {\n    getCurrentMessage,\n    getStatus,\n    getSubsetMessage,\n    getSubsetStatus,\n    setSubsetMessage, setSubsetStatus\n} from \"../../features/create/createSlice\";\nimport {LoadingCustom} from \"../../Loading\";\nimport {BsCheckCircle, BsXCircle} from \"react-icons/bs\";\n\nconst CreationProgress = () => {\n    let message = useSelector(getSubsetMessage)\n    let status = useSelector(getSubsetStatus)\n    return (\n        <div className={\"creation-progress\"}>\n            {!(status === \"complete\") || <BsCheckCircle size={60}/>}\n            {!(status === \"loading\") || <LoadingCustom width={\"100px\"} height={\"100px\"} />}\n            {!(status === \"failed\") || <BsXCircle size={60}/>}\n            <h4>{message}</h4>\n        </div>\n    )\n}\n\n\nexport const CreateAppMainSubset = ({open}) => {\n    const [name, setName] = useState(\"\")\n    const [refCodes, setRefCodes] = useState([])\n    const [refCodeText, setRefCodeText] = useState(\"\")\n    const [disabled, setDisabled] = useState(true)\n    const dispatch = useDispatch()\n    let token = useSelector(getAccessToken)\n\n    const createSubset = async() => {\n        if (!disabled) {\n            dispatch(setSubsetMessage(\"Creating Subset..\"))\n            dispatch(setSubsetStatus(\"loading\"))\n            fetch(`/api/subset/`, {\n                method: \"POST\",\n                headers: {\n                    'Authorization': `Bearer:${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    \"Name\": name,\n                    \"CrystalIds\": refCodes,\n                })\n            }).then((resp) => {\n                if (resp.status !== 200) {\n                    resp.json()\n                        .then((data) => {\n                            dispatch(setSubsetMessage(`Creation Failed: ${data[\"message\"] || \"\"}`))\n                            dispatch(setSubsetStatus(\"failed\"))\n                        })\n                } else {\n                    resp.json()\n                        .then((data) => {\n                            dispatch(setSubsetStatus(\"complete\"))\n                            dispatch(setSubsetMessage(\"Creation Successful.\"))\n                        })\n                }\n            })\n        }\n    }\n\n    return (\n        <div className={cx(\"create-tab-content\", {\"open\": open})}>\n            <div className={\"create-subset-panel\"}>\n                <InputItem label={\"Subset Name:\"} value={name} onChange={(e) => {\n                    setName(e.target.value)\n                    setDisabled(e.target.value === \"\" || refCodes.length === 0)\n                }}/>\n                <label>Reference Codes (Comma-Separated):</label>\n                <textarea className={\"create-panel-text-area\"}\n                    value={refCodeText} onChange={(e) => {\n                    setRefCodeText(e.target.value)\n                    let r  = e.target.value.split(\",\").map((x) => {\n                        return x.trim()\n                    })\n                    setRefCodes(r)\n                    setDisabled(e.target.value === \"\" || r.length === 0)\n                    console.log(refCodes)\n                }}/>\n                <button className={cx(\"create-crystal-options-button\", {\"disabled\": disabled})}\n                        onClick={createSubset}>Create</button>\n                <CreationProgress />\n            </div>\n        </div>\n    )\n}","import cx from \"classnames\";\nimport {InputItem} from \"./CreateAppMainCrystal\";\nimport React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {\n    getCurrentMessage,\n    getSourceMessage, getSourceStatus, setSourceMessage, setSourceStatus,\n} from \"../../features/create/createSlice\";\nimport {LoadingCustom} from \"../../Loading\";\nimport {BsCheckCircle, BsXCircle} from \"react-icons/bs\";\n\nconst CreationProgress = () => {\n    let message = useSelector(getSourceMessage)\n    let status = useSelector(getSourceStatus)\n    return (\n        <div className={\"creation-progress\"}>\n            {!(status === \"complete\") || <BsCheckCircle size={60}/>}\n            {!(status === \"loading\") || <LoadingCustom width={\"100px\"} height={\"100px\"} />}\n            {!(status === \"failed\") || <BsXCircle size={60}/>}\n            <h4>{message}</h4>\n        </div>\n    )\n}\n\n\nexport const CreateAppMainSource = ({open}) => {\n    const [name, setName] = useState(\"\")\n    const [urlRef, setURLRef] = useState(\"\")\n    const [disabled, setDisabled] = useState(true)\n\n    let token = useSelector(getAccessToken)\n    const dispatch = useDispatch()\n\n    const createSource = async() => {\n        if (!disabled) {\n            dispatch(setSourceMessage(\"Creating Source..\"))\n            dispatch(setSourceStatus(\"loading\"))\n            fetch(`/api/source/`, {\n                method: \"POST\",\n                headers: {\n                    'Authorization': `Bearer:${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    \"name\": name,\n                    \"url\": urlRef,\n                })\n            }).then((resp) => {\n                if (resp.status !== 200) {\n                    resp.json()\n                        .then((data) => {\n                            dispatch(setSourceMessage(`Creation Failed: ${data[\"message\"] || \"\"}`))\n                            dispatch(setSourceStatus(\"failed\"))\n                        })\n                } else {\n                    resp.json()\n                        .then((data) => {\n                            dispatch(setSourceMessage(\"Creation Successful.\"))\n                            dispatch(setSourceStatus(\"complete\"))\n                        })\n                }\n            })\n        }\n    }\n\n    return (\n        <div className={cx(\"create-tab-content\", {\"open\": open})}>\n            <div className={\"create-subset-panel\"}>\n                <InputItem label={\"Source Name:\"} value={name} onChange={(e) => {\n                    setName(e.target.value)\n                    setDisabled(e.target.value === \"\")\n                }}/>\n                <InputItem label={\"URL Reference:\"} value={urlRef} onChange={(e) => setURLRef(e.target.value)}/>\n                <button className={cx(\"create-crystal-options-button\", {\"disabled\": disabled})}\n                        onClick={createSource}>Create</button>\n                <CreationProgress />\n            </div>\n        </div>\n    )\n}","import {CreateAppMainCrystal} from \"./CreateAppMainCrystal\";\nimport {CreateAppMainSubset} from \"./CreateAppMainSubset\";\nimport {CreateAppMainSource} from \"./CreateAppMainSource\";\nimport {useSelector} from \"react-redux\";\nimport {getCurrentTab} from \"../../features/create/createSlice\";\n\n\nexport const CreateAppMain = () => {\n    let currentlyOpen = useSelector(getCurrentTab)\n\n    return (\n        <div className={\"create-app-main\"}>\n            <CreateAppMainCrystal open={currentlyOpen === \"crystal\"}/>\n            <CreateAppMainSubset open={currentlyOpen === \"subset\"}/>\n            <CreateAppMainSource open={currentlyOpen === \"source\"}/>\n        </div>\n    )\n}","import * as React from \"react\";\nimport './create.scss'\nimport {useSelector} from \"react-redux\";\nimport {getOpenApp} from \"../../features/app/appSlice\";\nimport cx from \"classnames\";\nimport {CreateAppTopBar} from \"./CreateAppTopBar\";\nimport {CreateAppMain} from \"./CreateAppMain\";\n\nexport const CreateApp = () => {\n    const openApp = useSelector(getOpenApp)\n\n    return (\n        <div className={cx(\"create-app\", {\"hidden\": openApp !== \"create\"})}>\n            <CreateAppTopBar/>\n            <CreateAppMain/>\n        </div>\n    )\n}\n","import React from \"react\";\n\n\nconst AtomRow = (data) => {\n    console.log(\"Atom row is\")\n    console.log(data.data)\n    return (\n        <tr>\n            <td>{data.data[\"Label\"]}</td>\n            <td>{data.data[\"Symbol\"]}</td>\n            <td>{data.data[\"X\"]}</td>\n            <td>{data.data[\"Y\"]}</td>\n            <td>{data.data[\"Z\"]}</td>\n        </tr>\n    )\n}\n\nexport const AtomTable = ({data}) => {\n    console.log(data)\n    return (\n        <div className={\"atom-info\"}>\n            <p>Atom Information</p>\n            <table className={\"atom-table\"}>\n                <thead>\n                <tr>\n                    <th colSpan=\"1\">Label</th>\n                    <th colSpan=\"1\">Species</th>\n                    <th colSpan=\"1\">X</th>\n                    <th colSpan=\"1\">Y</th>\n                    <th colSpan=\"1\">Z</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map(function (i) {\n                    return <AtomRow data={i}/>\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}","import React from \"react\";\nimport {check} from \"../create/CreateAppMainCrystal\";\n\nconst BondRow = ({data}) => {\n    console.log(\"Bond Data is\")\n    console.log(data)\n    return (\n        <tr>\n            <td>{check(data.Label1)}</td>\n            <td>{check(data.Label2)}</td>\n            <td>{check(data.Distance)}</td>\n        </tr>\n    )\n}\n\nexport const BondTable = ({data}) => {\n    return (\n        <div className={\"bond-info\"}>\n            <p>Bond Information</p>\n            <table className={\"bond-table\"}>\n                <thead>\n                <tr>\n                    <th colSpan=\"1\">Label 1</th>\n                    <th colSpan=\"1\">Label 2</th>\n                    <th colSpan=\"1\">Distance</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map(function (i) {\n                    return <BondRow data={i}/>\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}","import React from \"react\";\nimport {check} from \"../create/CreateAppMainCrystal\";\n\nconst UnitCellRow = ({data}) => {\n    console.log(\"Bond Data is\")\n    console.log(data)\n    return (\n        <tr>\n            <td>{check(data.A)}</td>\n            <td>{check(data.B)}</td>\n            <td>{check(data.C)}</td>\n            <td>{check(data.Alpha)}</td>\n            <td>{check(data.Beta)}</td>\n            <td>{check(data.Gamma)}</td>\n            <td>{check(data.CellVolume)}</td>\n        </tr>\n    )\n}\n\nexport const UnitCellTable = ({data}) => {\n    return (\n        <div className={\"unitcell-info\"}>\n            <p>Unit Cell Information</p>\n            <table className={\"unitcell-table\"}>\n                <thead>\n                <tr>\n                    <th colSpan=\"1\">A</th>\n                    <th colSpan=\"1\">B</th>\n                    <th colSpan=\"1\">C</th>\n                    <th colSpan=\"1\">Alpha</th>\n                    <th colSpan=\"1\">Beta</th>\n                    <th colSpan=\"1\">Gamma</th>\n                    <th colSpan=\"1\">Cell Volume</th>\n                </tr>\n                </thead>\n                <tbody>\n                <UnitCellRow data={data}/>\n                </tbody>\n            </table>\n        </div>\n    )\n}","import React from \"react\";\n\n\nconst SymmetryRow = ({data}) => {\n    return (\n        <tr>\n            <td>{data}</td>\n        </tr>\n    )\n}\n\n\nexport const SymmetryTable = ({data}) => {\n    let splitSym = data.\n        replaceAll(\"(\", \"\").\n        replaceAll(\")\", \"\").\n        replaceAll(\" \", \"\").\n        replaceAll(\"\\\",\", \":\").\n        replaceAll(\"\\',\", \":\").\n        replaceAll(\"\\\"\", \"\").\n        replaceAll(\"'\", \"\").\n        split(\":\")\n\n    return (\n        <div className={\"symmetry-info\"}>\n            <p>Symmetry Information</p>\n            <table className={\"symmetry-table\"}>\n                <thead>\n                <tr>\n                    <th colSpan=\"1\">Symmetry</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    splitSym.map((x) => <SymmetryRow data={x}/>)\n                }\n                </tbody>\n            </table>\n        </div>\n    )\n}","import React from \"react\";\nimport {check} from \"../create/CreateAppMainCrystal\";\n\nconst AMDRow = ({k, amd}) => {\n\n    return (\n        <tr>\n            <td>{k}</td>\n            <td>{amd.toFixed(6)}</td>\n        </tr>\n    )\n}\n\nexport const AMDTable = ({data}) => {\n    return (\n        <div className={\"amd-info\"}>\n            <p>Average-Minimum-Distance</p>\n            <table className={\"amd-table\"}>\n                <thead>\n                <tr>\n                    <th colSpan=\"1\">Neighbor</th>\n                    <th colSpan=\"1\">AMD</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map(function (i, ind) {\n                    return <AMDRow k={ind+1} amd={i}/>\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}","import React from \"react\";\n\n\nconst PDDRow = ({pdd}) => {\n\n    return (\n        <tr>\n            {\n                pdd.map(function (x) {\n                    return <td>{x.toFixed(6)}</td>\n                })\n            }\n        </tr>\n    )\n}\n\nexport const PDDTable = ({data}) => {\n    return (\n        <div className={\"pdd-info\"}>\n            <p>Point-wise Distance Distribution</p>\n            <table className={\"pdd-table\"}>\n                <thead>\n                <tr>\n                    {\n                        data[0].map(function (i, ind) {\n                            if (ind === 0)\n                                return <th colSpan=\"1\">Weight</th>\n                            return <th colSpan=\"1\">{`Neighbor ${ind}`}</th>\n                        })\n                    }\n                </tr>\n                </thead>\n                <tbody>\n                {data.map(function (i, ind) {\n                    return <PDDRow pdd={i}/>\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}","import cx from \"classnames\";\nimport React, {useState} from \"react\";\nimport {Controls, Molecule, MoleculeView} from \"../PreviewPanel\";\nimport {Canvas} from \"@react-three/fiber\";\nimport {AtomRow, DataItem} from \"../create/CreateAppMainCrystal\";\nimport {AtomTable} from \"./AtomTable\";\nimport {BondTable} from \"./BondTable\";\nimport {UnitCellTable} from \"./UnitCellTable\";\nimport {SymmetryTable} from \"./SymmetryTable\";\nimport {AMDTable} from \"./AMDTable\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {useSelector} from \"react-redux\";\nimport {PDDTable} from \"./PDDTable\";\n\n\nexport const CrystalAccordionBody = ({data}) => {\n    const [active, setActive] = useState(\"Crystal\")\n    const [metricsLoaded, setMetricsLoaded] = useState(false)\n    const [AMDs, setAMDs] = useState(null)\n    const [PDDs, setPDDs] = useState(null)\n    let token  = useSelector(getAccessToken)\n    console.log(`Data is ${data}`)\n    console.log(data)\n\n    const getMetrics = (e) => {\n        setActive(e)\n        if (!metricsLoaded) {\n            fetch(`/api/invariant/amd/${data.crystal.ID}/20`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer:${token}`,\n                },\n            })\n                .then(data => data.json())\n                .then((d) => {\n                    setAMDs(d.data)\n                    fetch(`/api/invariant/pdd/${data.crystal.ID}/20`, {\n                        method: 'GET',\n                        headers: {\n                            'Content-Type': 'application/json',\n                            'Authorization': `Bearer:${token}`,\n                        },\n                    })\n                        .then(data => data.json())\n                        .then((d) => {\n                            setPDDs(d.data)\n                            setMetricsLoaded(true)\n                        })\n                })\n\n        }\n    }\n\n    return (\n        <>\n            <div className={\"part-1\"}>\n                <div className={\"top-bar\"}>\n                    <button className={cx(\"\", {\"active\": active === \"Crystal\"})} onClick={() => setActive(\"Crystal\")}>About</button>\n                    <button className={cx(\"\", {\"active\": active === \"Geometry\"})} onClick={() => setActive(\"Geometry\")}>Geometry</button>\n                    <button className={cx(\"\", {\"active\": active === \"UnitCell\"})} onClick={() => setActive(\"UnitCell\")}>Unit Cell</button>\n                    <button className={cx(\"\", {\"active\": active === \"AMD\"})} onClick={() => getMetrics(\"AMD\")}>AMD</button>\n                    <button className={cx(\"\", {\"active\": active === \"PDD\"})} onClick={() => getMetrics(\"PDD\")}>PDD</button>\n                </div>\n                { active === \"Crystal\" &&\n                    Object.keys(data.crystal).map(function(key, index) {\n                        let v = data.crystal[key]\n                        if (key === \"Source\") {\n                            return <DataItem label={key.charAt(0).toUpperCase() + key.slice(1) + \" name:\"} value={v.name}/>\n                        }\n\n                        if (typeof v === \"string\" || v instanceof String){\n                            return <DataItem label={key.charAt(0).toUpperCase() + key.slice(1) + \":\"} value={v}/>\n                        } else return undefined\n                    })\n                }\n                {\n                    active === \"Geometry\" &&\n                    <div className={\"tables\"}>\n                        <AtomTable data={data.atoms}/>\n                        <BondTable data={data.bonds}/>\n                    </div>\n                }\n                {\n                    active === \"UnitCell\" &&\n                    <div className={\"tables\"}>\n                        <UnitCellTable data={data.unitCell}/>\n                        <SymmetryTable data={data.unitCell.SymmetryOperators}/>\n                    </div>\n                }\n                {\n                    active === \"AMD\" && metricsLoaded &&\n                    <div className={\"tables\"}>\n                        <AMDTable data={AMDs}/>\n                    </div>\n                }\n                {\n                    active === \"PDD\" && metricsLoaded &&\n                    <div className={\"tables\"}>\n                        <PDDTable data={PDDs}/>\n                    </div>\n                }\n            </div>\n            <div className={\"part-2\"}>\n                <Canvas className=\"preview-panel-canvas\"\n                        camera={{ position: [7, 7, 7], fov: 62 }}>\n                    <ambientLight />\n                    <pointLight position={[1, 1, 1]} />\n                    <Molecule dataset={data} rotX={0.001} rotY={0.005} center={true}/>\n                    <Controls/>\n                </Canvas>\n            </div>\n        </>\n    )\n}","import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    \"createCrystalOpen\": false,\n    \"createSourceOpen\": false,\n    \"createSubsetOpen\": false,\n    \"selected\": [],\n    \"activeAccordion\": \"recent\",\n    \"width\": 0,\n    \"height\": 0,\n    \"crystalSearchResults\": [],\n    \"subsetSearchResults\": [],\n    \"sourceSearchResults\": []\n}\n\nconst homeSlice = createSlice({\n    name: 'homeApplication',\n    initialState,\n    reducers: {\n        setCreatePanel(state, action) {\n            state[\"createPanelOpen\"] = action.payload\n            return state;\n        },\n        handleTickBox(state, action) {\n            if (!state.selected.includes(action.payload)) {\n                state.selected = state.selected.concat([action.payload])\n            } else {\n                state.selected = state.selected.filter(x => x !== action.payload)\n            }\n        },\n        setActiveAccordion(state, action) {\n            state[\"activeAccordion\"] = action.payload\n            return state\n        },\n        openCrystalCreate(state, action) {\n            state[\"createCrystalOpen\"] = true\n            return state\n        },\n        openSubsetCreate(state, action) {\n            state[\"createSubsetOpen\"] = true\n            return state\n        },\n        openSourceCreate(state, action) {\n            state[\"createSourceOpen\"] = true\n            return state\n        },\n        closeCrystalCreate(state, action) {\n            state[\"createCrystalOpen\"] = false\n            return state\n        },\n        closeSubsetCreate(state, action) {\n            state[\"createSubsetOpen\"] = false\n            return state\n        },\n        closeSourceCreate(state, action) {\n            state[\"createSourceOpen\"] = false\n            return state\n        },\n        setCrystalSearchResults(state, action) {\n            state[\"crystalSearchResults\"] = action.payload\n            return state\n        },\n        setSourceSearchResults(state, action) {\n            state[\"sourceSearchResults\"] = action.payload\n            return state\n        },\n        setSubsetSearchResults(state, action) {\n            state[\"subsetSearchResults\"] = action.payload\n            return state\n        },\n        flushCreateCrystal(state, action) {\n            state[\"crystalSearchResults\"] = action.payload.concat(state[\"crystalSearchResults\"])\n        },\n        flushCreateSubset(state, action) {\n            state[\"subsetSearchResults\"] = action.payload.concat(state[\"subsetSearchResults\"])\n        },\n        flushCreateSource(state, action) {\n            state[\"sourceSearchResults\"] = action.payload.concat(state[\"sourceSearchResults\"])\n        }\n\n    }\n})\n\nexport const { setCreatePanel, handleTickBox, setActiveAccordion, closeCrystalCreate, closeSourceCreate, closeSubsetCreate,\n               openSubsetCreate, openSourceCreate, openCrystalCreate, setCrystalSearchResults, setSourceSearchResults, setSubsetSearchResults,\n                flushCreateCrystal, flushCreateSource, flushCreateSubset    } = homeSlice.actions\n\nexport default homeSlice.reducer\n\nexport const getCreatePanelOpen = createSelector((state) => state.homeSlice, (p) =>\n    p[\"createPanelOpen\"]\n)\n\nexport const getSelected = createSelector((state) => state.homeSlice, (p) =>\n    p[\"selected\"]\n)\n\nexport const getActiveAccordion = createSelector((state) => state.homeSlice, (p) =>\n    p[\"activeAccordion\"]\n)\n\n\nexport const getCreateCrystalOpen = createSelector((state) => state.homeSlice, (p) =>\n    p[\"createCrystalOpen\"]\n)\n\nexport const getCreateSubsetOpen = createSelector((state) => state.homeSlice, (p) =>\n    p[\"createSubsetOpen\"]\n)\n\nexport const getCreateSourceOpen = createSelector((state) => state.homeSlice, (p) =>\n    p[\"createSourceOpen\"]\n)\n\nexport const getCrystalSearchResults = createSelector((state) => state.homeSlice, (p) =>\n    p[\"crystalSearchResults\"]\n)\n\nexport const getSubsetSearchResults = createSelector((state) => state.homeSlice, (p) =>\n    p[\"subsetSearchResults\"]\n)\nexport const getSourceSearchResults = createSelector((state) => state.homeSlice, (p) =>\n    p[\"sourceSearchResults\"]\n)\n\n\n","import cx from \"classnames\"\nimport React, {useState} from \"react\";\nimport {Button, Form} from \"react-bootstrap\"\nimport {BsChevronDown, BsChevronRight} from \"react-icons/all\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {LoadingCustom} from \"../../Loading\";\nimport {CrystalAccordionBody} from \"./CrystalAccordionBody\";\nimport {addComp} from \"../../features/compare/compareSlice\";\nimport {addView} from \"../../features/view/viewSlice\";\nimport {openCompareApp, openViewApp} from \"../../features/app/appSlice\";\nimport {handleTickBox} from \"../../features/home/homeSlice\";\n\n\nexport const CrystalAccordion = ({dataset}) => {\n    let dispatch = useDispatch()\n    const [open, setOpen] = useState(false)\n    const [loaded, setLoaded] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState(null)\n    const [dataReady, setDataReady] = useState(false)\n    let token = useSelector(getAccessToken)\n\n\n    const handleClick = () => {\n        setOpen(!open)\n        if (!loaded) {\n            setLoading(true)\n            fetch(`/api/crystal/molecule/${dataset.ID}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer:${token}`,\n                },\n            })\n                .then(resp => {\n                    if (resp.status === 401)\n                        window.location.reload()\n                    else if (resp.status === 200) {\n                        resp.json().then((d) => {\n                            setLoading(false)\n                            setData(d)\n                            setDataReady(true)\n                            setLoaded(true)\n                        })\n                    }\n                })\n        }\n    }\n\n    return (\n        <div className={\"crystal-accordion\"}>\n            <div className={cx(\"crystal-accordion-header\", {\"open\": open})}>\n                <div className={\"group-1\"}>\n                    <button className={\"query-result-open-button\"} onClick={handleClick}>\n                        {open ? <BsChevronDown /> : <BsChevronRight/>}\n                    </button>\n                    <Form.Check aria-label=\"option 1\" onChange={() => dispatch(handleTickBox(dataset.name))}/>\n                    <p>{dataset.name}</p>\n                </div>\n                <p>{dataset.CreatedAt}</p>\n                <div className=\"button-set\">\n                    <Button size=\"sm\" onClick={() => {\n                        dispatch(openCompareApp(\"\"))\n                        dispatch(addComp(dataset.name))\n                    }} style={{\"fontSize\": \"12px\"}}>\n                        Compare\n                    </Button>\n                    <Button size=\"sm\" onClick={() => {\n                        dispatch(openViewApp(\"\"))\n                        dispatch(addView(dataset.name))\n                    }} style={{\"fontSize\": \"12px\"}}>\n                        View\n                    </Button>\n                </div>\n            </div>\n            <div className={cx(\"crystal-accordion-body\", {\"open\": open})}>\n                { loading && <LoadingCustom/> }\n                { dataReady && <CrystalAccordionBody data={data}/>}\n            </div>\n        </div>\n    )\n}","import React from \"react\";\n\nconst SimilarCrystalRow = ({datum}) => {\n\n    return (\n        <tr>\n            <td>{datum.name}</td>\n            <td>{datum.family}</td>\n            <td>{datum.Polymorph}</td>\n            <td>{datum.Source.name}</td>\n            <td>{datum.Distance.toFixed(6)}</td>\n        </tr>\n    )\n}\n\nexport const SimilarCrystalsTable = ({data}) => {\n    return (\n        <div>\n            <p style={{\"margin\": \"5px 25px\"}}>Similar Crystals</p>\n            <table className={\"amd-table\"}>\n                <thead>\n                <tr>\n                    <th colSpan=\"1\">Reference Code</th>\n                    <th colSpan=\"1\">Family</th>\n                    <th colSpan=\"1\">Polymorph</th>\n                    <th colSpan=\"1\">Source</th>\n                    <th colSpan=\"1\">Distance</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map(function (i) {\n                    return <SimilarCrystalRow datum={i}/>\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}","import cx from \"classnames\"\nimport React, {useEffect, useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    closeCrystalCreate,\n    flushCreateCrystal,\n    getCreateCrystalOpen\n} from \"../../features/home/homeSlice\";\nimport {Badge, Button, Form} from \"react-bootstrap\"\nimport {cifParser} from \"cif-to-json\";\nimport {setReadingFile} from \"../../features/create/createSlice\";\nimport {extractAtoms, extractBonds, extractCrystalMetaData, extractUnitCell} from \"./CIFHelpers\";\nimport {DataItem} from \"../create/CreateAppMainCrystal\";\nimport {AtomTable} from \"./AtomTable\";\nimport {BondTable} from \"./BondTable\";\nimport {UnitCellTable} from \"./UnitCellTable\";\nimport {SymmetryTable} from \"./SymmetryTable\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {SimilarCrystalsTable} from \"./SimilarCrystalsTable\";\n\n\nexport const CrystalCreateAccordion = () => {\n    let open = useSelector(getCreateCrystalOpen)\n    let dispatch = useDispatch()\n    let token = useSelector(getAccessToken)\n    const [bodyOpen, setBodyOpen] = useState(false)\n    const [pickedFile, setPickedFile] = useState(\"\")\n    const [refCode, setRefCode] = useState(\"\")\n    const [validRefCode, setValidRefCode] = useState(false)\n    const [isFilePicked, setIsFilePicked] = useState(false);\n    const [isParsed, setIsParsed] = useState(false)\n    const [cifAsJson, setCifAsJson] = useState(null)\n    const [disabled, setDisabled] = useState(true)\n    const [message, setMessage] = useState(\"\")\n    const [atoms, setAtoms] = useState([])\n    const [bonds, setBonds] = useState([])\n    const [crystal, setCrystal] = useState({})\n    const [unitCell, setUnitCell] = useState({})\n    const [polymorph, setPolymorph] = useState(\"\")\n    const [family, setFamily] = useState(\"\")\n    const [active, setActive] = useState(\"Crystal\")\n    const [sourceOptions, setSourceOptions] = useState([])\n    const [source, setSource] = useState(\"\")\n    const [similarCrystals, setSimilarCrystals] = useState([])\n\n    const createCrystal = () => {\n        setMessage(\"Creating Crystal..\")\n        fetch(`/api/create/crystal/`, {\n            method: \"POST\",\n            headers: {\n                'Authorization': `Bearer:${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"Crystal\": {\n                    ...crystal,\n                    \"Polymorph\": polymorph,\n                    \"SourceID\": parseInt(source) || 0,\n                    \"name\": refCode,\n                    \"family\": family,\n                },\n                \"Atoms\": atoms,\n                \"Bonds\": bonds,\n                \"UnitCell\": unitCell,\n            })\n        }).then((resp) => {\n            if (resp.status === 401)\n                window.location.reload()\n\n            if (resp.status !== 200) {\n                resp.json()\n                    .then((data) => {\n                        setMessage(`Creation Failed: ${data[\"message\"] || \"\"}`)\n                    })\n            } else {\n                resp.json()\n                    .then((data) => {\n                        setMessage(\"Creation Successful.\")\n                        fetch(`/api/search/crystal/name/${refCode}?match=exact`, {\n                            headers: {\n                                'Authorization': `Bearer:${token}`,\n                                'Content-Type': 'application/json',\n                            },\n                        }).then(data => data.json())\n                            .then(d => {\n                                setIsParsed(false)\n                                dispatch(flushCreateCrystal(d.data))\n                                setBodyOpen(false)\n                                setRefCode(\"\")\n                                setFamily(\"\")\n                                setMessage(\"\")\n                                setDisabled(true)\n                                setPolymorph(\"\")\n                                setSource(\"\")\n                                setAtoms([])\n                                setBonds([])\n                                setCrystal({})\n                                setUnitCell({})\n                                setSimilarCrystals([])\n                                dispatch(closeCrystalCreate(false))\n                            })\n                    })\n            }\n        })\n\n    }\n\n    // I need a way to check if the cif was parsed correctly\n    useEffect(() => {\n        if (!isParsed)\n            return\n\n        console.log(\"retrieving \")\n        fetch(`/api/search/preview/`, {\n            method: \"POST\",\n            headers: {\n                'Authorization': `Bearer:${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"Crystal\": {\n                    ...crystal,\n                    \"Polymorph\": polymorph,\n                    \"SourceID\": parseInt(source) || 0,\n                    \"name\": refCode,\n                    \"family\": family,\n                },\n                \"Atoms\": atoms,\n                \"Bonds\": bonds,\n                \"UnitCell\": unitCell,\n            })\n        }).then((data) => {\n            if (data.status === 401) {\n                window.location.reload()\n            } else if (data.status === 200) {\n                data.json().then((d) => {\n                    setSimilarCrystals(d.data)\n                })\n            }\n        })\n    }, [isParsed, pickedFile])\n\n    useEffect(() => {\n        let d = refCode.trim() !== \"\" && family.trim() !== \"\" && source !== \"\" && isParsed\n        console.log(`Running use effect, getting ${d}`)\n        setDisabled(!d)\n    }, [refCode, family, source, isParsed])\n\n    const checkReferenceCode = (refCode) => {\n        return false\n    }\n\n    const parseCIF = (fileContents) => {\n        return cifParser(fileContents)\n    }\n\n    const changeHandler = async(event) => {\n        const file = event.target.files.item(0)\n        setPickedFile(file)\n        dispatch(setReadingFile(true))\n        const text = await file.text();\n        let parsed = parseCIF(text)\n        dispatch(setReadingFile(false))\n        setIsFilePicked(true)\n        setCifAsJson(parsed)\n        setCrystal(extractCrystalMetaData(parsed))\n        setMessage(\"Extracting atoms..\")\n        setAtoms(extractAtoms(parsed))\n        setMessage(\"Extracting bonds..\")\n        setBonds(extractBonds(parsed))\n        setMessage(\"Extracting unit cell..\")\n        setUnitCell(extractUnitCell(parsed))\n        setMessage(\"Done.\")\n        setIsParsed(true)\n        setBodyOpen(true)\n    };\n\n    const getSources = (e) => {\n        setSource(e.target.value)\n        console.log(`source is ${e.target.value}`)\n        if (e.target.value === \"\") return\n        fetch(`/api/search/source/${e.target.value}?match=partial`, {\n            headers: {\n                'Authorization': `Bearer:${token}`,\n                'Content-Type': 'application/json',\n            }\n        })\n            .then((resp) => {\n                if (resp.status === 200) {\n                    resp.json()\n                        .then((data) => {\n                            setSourceOptions(data[\"data\"])\n                            console.log(data[\"data\"])\n                        })\n                }\n            })\n    }\n\n    return (\n        <div className=\"home-app-create-accordion\">\n            <div className={cx(\"create-accordion-header\", {\"open\": open})}>\n                <div style={{\"display\": \"flex\",\"align-items\": \"center\"}}>\n                    <Badge bg=\"primary\">New</Badge>\n                </div>\n                <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlInput1\">\n                    <Form.Label>Reference Code</Form.Label>\n                    <Form.Control size=\"sm\" type=\"text\" placeholder=\"\" value={refCode} onChange={(e) => {\n                        setRefCode(e.target.value)\n                        setValidRefCode(checkReferenceCode(e.target.value))\n                        setFamily(e.target.value.replace(/\\d+$/, \"\"))\n                    }}/>\n                </Form.Group>\n                <Form.Group className=\"mb-1\" controlId=\"exampleForm.ControlInput2\">\n                    <Form.Label>Family</Form.Label>\n                    <Form.Control size=\"sm\" type=\"text\" placeholder=\"\" value={family} onChange={(e) => {\n                        setFamily(e.target.value)\n                    }}/>\n                </Form.Group>\n                <Form.Group controlId=\"formFileSm\" className=\"mb-3\">\n                    <Form.Label>Small file input example</Form.Label>\n                    <Form.Control type=\"file\" size=\"sm\" onChange={changeHandler}/>\n                </Form.Group>\n                <div style={{\"display\": \"flex\"}}>\n                    <Button size=\"sm\" variant=\"danger\" onClick={() => {\n                        dispatch(closeCrystalCreate(\"\"))\n                        setIsFilePicked(false)\n                        setIsParsed(false)\n                        setRefCode(\"\")\n                        setSimilarCrystals([])\n                    }} style={{\"margin\": \"0 10px\"}}>\n                        Discard\n                    </Button>\n                    {\n                        disabled && <Button variant=\"success\" size=\"sm\" disabled>\n                            Create\n                        </Button>\n                    }\n                    {\n                        !disabled && <Button size=\"sm\" variant=\"success\" onClick={createCrystal}>\n                            Create\n                        </Button>\n                    }\n                </div>\n            </div>\n            <div className={cx(\"create-accordion-body\", {\"open\": isFilePicked && isParsed && bodyOpen})}>\n                <div className={\"top-bar\"}>\n                    <button className={cx(\"\", {\"active\": active === \"Crystal\"})} onClick={() => setActive(\"Crystal\")}>About</button>\n                    <button className={cx(\"\", {\"active\": active === \"Geometry\"})} onClick={() => setActive(\"Geometry\")}>Geometry</button>\n                    <button className={cx(\"\", {\"active\": active === \"UnitCell\"})} onClick={() => setActive(\"UnitCell\")}>Unit Cell</button>\n                </div>\n                { active === \"Crystal\" && isParsed &&\n                    <div style={{\"display\": \"flex\"}}>\n                        <div style={{\"width\": \"50%\"}}>\n                            {\n                                Object.keys(crystal).map(function(key, index) {\n                                    let v = crystal[key]\n                                    if (typeof v === \"string\" || v instanceof String){\n                                        return <DataItem label={key.charAt(0).toUpperCase() + key.slice(1) + \":\"} value={v}/>\n                                    } else return undefined\n                                })\n                            }\n                            <div className=\"data-item\">\n                                <p>Polymorph</p>\n                                <Form.Control size=\"sm\" type=\"text\" placeholder=\"Polymorph Label\" value={polymorph}\n                                              style={{\"maxWidth\": \"30%\", \"background\": \"white\"}}\n                                              onChange={(e) => {\n                                                  setPolymorph(e.target.value)\n                                              }}/>\n                            </div>\n                            <div className=\"data-item\">\n                                <p>Source</p>\n                                <Form.Control size=\"sm\" id=\"accordion-sources-dropdown\" type=\"text\" list=\"accordion-sources-datalist\"\n                                              style={{\"maxWidth\": \"30%\", \"background\": \"white\"}} placeholder={\"Source name\"}\n                                              onChange={(e) => {\n                                                  getSources(e)\n                                              }}\n                                              value={source}/>\n                                <datalist id=\"accordion-sources-datalist\" onChange={(e) => {\n                                    getSources(e)\n                                }}>\n                                    <option value={0} label={\"User\"}>User</option>\n                                    { sourceOptions.map((x) => {\n                                        return <option value={x.ID} label={x.name }>{x.name}</option>\n                                    }) }\n                                </datalist>\n                            </div>\n                        </div>\n                        <div style={{\"width\": \"50%\"}}>\n                            <SimilarCrystalsTable data={similarCrystals}/>\n                        </div>\n                    </div>\n                }\n                {\n                    active === \"Geometry\" && isParsed &&\n                    <div className={\"tables\"}>\n                        <AtomTable data={atoms}/>\n                        <BondTable data={bonds}/>\n                    </div>\n                }\n                {\n                    active === \"UnitCell\" && isParsed &&\n\n                    <div className={\"tables\"}>\n                        <UnitCellTable data={unitCell}/>\n                        <SymmetryTable data={unitCell.SymmetryOperators}/>\n                    </div>\n                }\n            </div>\n        </div>\n    )\n}","import {useEffect, useState} from \"react\";\nimport {LoadingCustom} from \"../../Loading\";\nimport {CrystalAccordion} from \"./CrystalAccordion\";\nimport {useSelector} from \"react-redux\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {getActiveAccordion, getSelected} from \"../../features/home/homeSlice\";\nimport cx from \"classnames\"\nimport {CrystalCreateAccordion} from \"./CrystalCreateAccordion\";\n\nexport const SelectedCount = () => {\n    let selected = useSelector(getSelected)\n    return (\n        <h6 style={{\"padding\": \"10px 20px\", \"font-size\": \"13px\", \"font-style\": \"italic\"}}>\n            {`${selected.length} items selected`}</h6>\n    )\n}\n\nexport const RecentCrystalAccordionList = () => {\n    const [loading, setLoading] = useState(false)\n    const [dataReady, setDataReady] = useState(false)\n    const [dataset, setDataset] = useState(null)\n    let activeAccordion = useSelector(getActiveAccordion)\n    let token = useSelector(getAccessToken)\n\n    useEffect(() => {\n        setLoading(true)\n        fetch(`/api/search/recent`, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer:${token}`,\n            },\n        })\n            .then(data => data.json())\n            .then((d) => {\n                setLoading(false)\n                setDataset(d.data)\n                setDataReady(true)\n            })\n    },[])\n\n    if (loading) {\n        return <LoadingCustom width={\"200px\"} height={\"300px\"}/>\n    }\n\n    if (!dataReady)\n        return <div></div>\n\n    return (\n        <div className={cx(\"crystal-accordion-list\", {\"hidden\": activeAccordion !== \"recent\"})}>\n            <SelectedCount/>\n            <CrystalCreateAccordion/>\n            {dataset.map((d) => {\n                return <CrystalAccordion dataset={d}/>\n            })}\n        </div>\n    )\n}","import cx from \"classnames\"\nimport React, {useState} from \"react\";\nimport {Button, Form} from \"react-bootstrap\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getActiveAccordion,\n    setActiveAccordion,\n    setCrystalSearchResults, setSourceSearchResults,\n    setSubsetSearchResults\n} from \"../../features/home/homeSlice\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\n\n\nconst CrystalFacetOptions = () => {\n    return (\n        <>\n            <option value=\"name\">Reference Code</option>\n            <option value=\"family\">Family</option>\n            <option value=\"source\">Source</option>\n            <option value=\"subset\">Subset</option>\n            <option value=\"composition\">Composition</option>\n            <option value=\"primeComposition\">Prime Composition</option>\n            <option value=\"similarity\">Distance</option>\n        </>\n    )\n}\n\nconst SourceFacetOptions = () => {\n    return (\n        <>\n            <option value=\"name\">Name</option>\n        </>\n    )\n}\n\nconst SubsetFacetOptions = () => {\n    return (\n        <>\n            <option value=\"name\">Name</option>\n        </>\n    )\n}\n\nexport const SearchAccordion = ({}) => {\n    const [open, setOpen] = useState(false)\n    const [facet, setFacet] = useState(\"name\")\n    const [query, setQuery] = useState(\"\")\n    const [matchType, setMatchType] = useState(\"exact\")\n    const [orderBy, setOrderBy] = useState(\"none\")\n    const [loading, setLoading] = useState(false)\n    let activeAccordion = useSelector(getActiveAccordion)\n    let dispatch = useDispatch()\n    let token = useSelector(getAccessToken)\n\n    const handleSearch = () => {\n        setLoading(true)\n        let aa = activeAccordion\n        if (activeAccordion === \"recent\") {\n            dispatch(setActiveAccordion(\"crystals\"))\n            aa = \"crystals\"\n        }\n\n        let url = `/api/search/${aa.slice(0, -1)}/${facet}/${query}?match=${matchType}&order=${orderBy}`\n        if (aa !== \"crystals\")\n            url = `/api/search/${aa.slice(0, -1)}/${query}?match=${matchType}&order=${orderBy}&aggregate=true`\n        fetch(url, {\n            method: 'GET',\n            headers: {\n                'Content-Type': 'application/json',\n                'Authorization': `Bearer:${token}`,\n            },\n        })\n            .then(data => {\n                if (data.status !== 200) {\n                    if (data.status === 401) {\n                        window.location.reload()\n                    }\n                } else {\n                    data.json().then((d) => {\n                        setLoading(false)\n                        switch (activeAccordion) {\n                            case \"crystals\":\n                                dispatch(setCrystalSearchResults(d.data))\n                                break\n                            case \"recent\":\n                                dispatch(setCrystalSearchResults(d.data))\n                                break\n                            case \"subsets\":\n                                dispatch(setSubsetSearchResults(d.data))\n                                break\n                            case \"sources\":\n                                dispatch(setSourceSearchResults(d.data))\n                                break\n                        }\n                    })\n                }\n            })\n    }\n\n    return (\n        <div className=\"search-accordion\">\n            <div className=\"search-accordion-header\">\n                <div className={\"group\"}>\n                    <input className={\"search-query\"}  placeholder={\"Search\"}\n                           onChange={e => setQuery(e.target.value)}\n                           value={query}\n                    />\n                    <select name=\"By:\" className=\"search-facet\" value={facet} onChange={ e => setFacet(e.target.value)}>\n                        {\n                            (activeAccordion === \"crystals\" || activeAccordion === \"recent\") &&\n                            <CrystalFacetOptions/>\n                        }\n                        {\n                            activeAccordion === \"sources\" && <SourceFacetOptions/>\n                        }\n                        {\n                            activeAccordion === \"subsets\" && <SubsetFacetOptions/>\n                        }\n                    </select>\n                    <button className=\"search-accordion-button\" onClick={handleSearch}>\n                        {loading ? \"Loading..\" : \"Search\"}\n                    </button>\n                </div>\n                <div className=\"group\">\n                    <button id=\"advanced-search-button\" onClick={() => setOpen(!open)}>\n                        More Options\n                    </button>\n                </div>\n            </div>\n            <div className={cx(\"search-accordion-body\", {\"open\": open})}>\n                <div>\n                    <p>Match Type:</p>\n                    <div key={`inline-radio`} className=\"mb-3\">\n                        <Form.Check\n                            inline\n                            label=\"Exact\"\n                            name=\"group1\"\n                            type=\"radio\"\n                            id={`inline-radio-1`}\n                            onClick={() => setMatchType(\"exact\")}\n                        />\n                        <Form.Check\n                            inline\n                            label=\"Partial\"\n                            name=\"group1\"\n                            type=\"radio\"\n                            id={`inline-radio-2`}\n                            onClick={() => setMatchType(\"partial\")}\n                        />\n                    </div>\n                </div>\n                <div>\n                    <p>Order:</p>\n                    <select name=\"By:\" className=\"order-facet\" value={orderBy} onChange={ e => setOrderBy(e.target.value)}>\n                        <option value=\"none\">None</option>\n                        <option value=\"oldest\">Oldest</option>\n                        <option value=\"recent\">Most Recent</option>\n                        <option value=\"alphabetically\">Alpha</option>\n                    </select>\n                </div>\n            </div>\n        </div>\n    )\n}","import React, {useState} from \"react\";\nimport cx from \"classnames\"\nimport {\n    Accordion,\n    Breadcrumb,\n    ButtonGroup,\n    Carousel,\n    DropdownButton,\n    Dropdown,\n    Form,\n    FloatingLabel, Button\n} from \"react-bootstrap\";\nimport {MoleculeCardRow} from \"./MoleculeCardRow\";\nimport {AiOutlineHome} from \"react-icons/all\";\nimport {RecentCrystalAccordionList} from \"./RecentCrystalAccordionList\";\nimport {openSearchPanel} from \"../../features/search/searchSlice\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {\n    getActiveAccordion,\n    openCrystalCreate, openSourceCreate,\n    openSubsetCreate,\n    setActiveAccordion,\n    setCreatePanel\n} from \"../../features/home/homeSlice\";\nimport {SearchAccordion} from \"./SearchAccordion\";\n\nexport const HomeAppTopBar = () => {\n    let active = useSelector(getActiveAccordion)\n    const [index, setIndex] = useState(0);\n    let dispatch = useDispatch()\n\n    const handleSelect = (selectedIndex, e) => {\n        setIndex(selectedIndex);\n    };\n\n    const openCreateAccordion = () => {\n        console.log(`active is ${active}`)\n        switch (active) {\n            case \"recent\":\n                dispatch(openCrystalCreate(true))\n                break\n            case \"crystals\":\n                dispatch(openCrystalCreate(true))\n                break\n            case \"subsets\":\n                dispatch(openSubsetCreate(true))\n                break\n            case \"sources\":\n                console.log(\"dispatching correctly\")\n                dispatch(openSourceCreate(true))\n                break\n        }\n    }\n\n    return (\n        <>\n            <Breadcrumb style={{\"fontSize\": \"12px\", \"padding\": \"20px 20px 0\"}}>\n                <Breadcrumb.Item ><AiOutlineHome/></Breadcrumb.Item>\n                <Breadcrumb.Item>\n                    {active.at(0).toUpperCase() + active.slice(1)}\n                </Breadcrumb.Item>\n                <Breadcrumb.Item active>Data</Breadcrumb.Item>\n            </Breadcrumb>\n            <div className={\"top-bar\"}>\n                <div className={\"left-group\"}>\n                    <button className={cx(\"\", {\"active\": active === \"recent\"})}\n                            onClick={() => dispatch(setActiveAccordion(\"recent\"))}>Recent</button>\n                    <button className={cx(\"\", {\"active\": active === \"crystals\"})}\n                            onClick={() => dispatch(setActiveAccordion(\"crystals\"))}>Crystals</button>\n                    <button className={cx(\"\", {\"active\": active === \"subsets\"})}\n                            onClick={() => dispatch(setActiveAccordion(\"subsets\"))}>Subsets</button>\n                    <button className={cx(\"\", {\"active\": active === \"sources\"})}\n                            onClick={() => dispatch(setActiveAccordion(\"sources\"))}>Sources</button>\n                </div>\n                <div className={\"right-group\"}>\n                    <Button size=\"sm\" onClick={openCreateAccordion}>Create</Button>\n                </div>\n            </div>\n            <SearchAccordion />\n        </>\n    )\n}\n\n/*\n*             <Carousel activeIndex={index} onSelect={handleSelect} variant=\"dark\">\n                <Carousel.Item>\n                    <MoleculeCardRow ids={[\"CREATE01\", \"CREATE01\", \"CREATE01\"]}/>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <MoleculeCardRow ids={[4,5,6]}/>\n                </Carousel.Item>\n                <Carousel.Item>\n                    <MoleculeCardRow ids={[7,8,9]}/>\n                </Carousel.Item>\n            </Carousel>\n* */","import cx from \"classnames\";\nimport {CrystalCreateAccordion} from \"./CrystalCreateAccordion\";\nimport {CrystalAccordion} from \"./CrystalAccordion\";\nimport {getActiveAccordion, getCrystalSearchResults} from \"../../features/home/homeSlice\";\nimport {useSelector} from \"react-redux\";\nimport {SelectedCount} from \"./RecentCrystalAccordionList\";\n\n\nexport const CrystalAccordionList = () => {\n    let activeAccordion = useSelector(getActiveAccordion)\n    let dataset = useSelector(getCrystalSearchResults)\n\n    return (\n        <div className={cx(\"crystal-accordion-list\", {\"hidden\": activeAccordion !== \"crystals\"})}>\n            <SelectedCount/>\n            <CrystalCreateAccordion/>\n            {dataset.map((d) => {\n                return <CrystalAccordion dataset={d}/>\n            })}\n        </div>\n    )\n}","\n\n\nexport const SourceAccordion = ({dataset}) => {\n    return (\n        <div className={\"accordion\"}>\n            <div className={\"accordion-header\"} >\n                <p>{`ID: ${dataset.ID}`}</p>\n                <p>{dataset.name}</p>\n                <p>{dataset.CreatedAt}</p>\n            </div>\n        </div>\n    )\n}","import cx from \"classnames\"\nimport React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {closeSourceCreate, flushCreateSource, getCreateSourceOpen} from \"../../features/home/homeSlice\";\nimport {Badge, Button, Form} from \"react-bootstrap\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\n\nexport const SourceCreateAccordion = () => {\n    let dispatch = useDispatch()\n    let open = useSelector(getCreateSourceOpen)\n    const [name, setName] = useState(\"\")\n    const [type, setType] = useState(\"public\")\n    const [message, setMessage] = useState(\"\")\n    let token = useSelector(getAccessToken)\n\n    const createSource = () => {\n        setMessage(\"Creating Source...\")\n        fetch(`/api/source/`, {\n            method: \"POST\",\n            headers: {\n                'Authorization': `Bearer:${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"name\": name,\n                \"type\": type,\n            })\n        }).then((resp) => {\n            if (resp.status !== 200) {\n                resp.json()\n                    .then((data) => {\n                        setMessage(`Creation Failed: ${data[\"message\"] || \"\"}`)\n                    })\n            } else {\n                resp.json()\n                    .then((data) => {\n                        setMessage(\"Creation Successful.\")\n                        fetch(`/api/search/source/${name}?match=exact`, {\n                            headers: {\n                                'Authorization': `Bearer:${token}`,\n                                'Content-Type': 'application/json',\n                            },\n                        }).then(data => data.json())\n                            .then(d => {\n                                dispatch(flushCreateSource(d.data))\n                                dispatch(closeSourceCreate(false))\n                            })\n                    })\n            }\n        })\n    }\n\n    return (\n        <>\n            <div className=\"home-app-create-accordion\">\n                <div className={cx(\"create-accordion-header\", {\"open\": open})}>\n                    <Badge bg=\"primary\">New</Badge>\n                    <Form.Group className=\"mb-0\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Source Name</Form.Label>\n                        <Form.Control size=\"sm\" type=\"text\" placeholder=\"\" value={name} onChange={(e) => {\n                            setName(e.target.value)\n                        }}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-0\" >\n                        <Form.Label>Source Type</Form.Label>\n                        <div key={`inline-radio`} className=\"mb-3\">\n                            <Form.Check\n                                inline\n                                label=\"Public\"\n                                name=\"group1\"\n                                type=\"radio\"\n                                id={`source-create-inline-radio-1`}\n                                onClick={() => setType(\"public\")}\n                            />\n                            <Form.Check\n                                inline\n                                label=\"Private\"\n                                name=\"group1\"\n                                type=\"radio\"\n                                id={`source-create-inline-radio-2`}\n                                onClick={() => setType(\"private\")}\n                            />\n                        </div>\n                    </Form.Group>\n                    <p style={{\"fontSize\": \"11px\"}}>{message}</p>\n                    <div style={{\"display\": \"flex\"}}>\n                        <Button variant=\"danger\" style={{\"marginRight\": \"10px\"}} onClick={() => {\n                            setName(\"\")\n                            setType(\"public\")\n                            dispatch(closeSourceCreate(false))\n                        }}>\n                            Discard\n                        </Button>\n                        <Button variant=\"success\" style={{\"marginRight\": \"10px\"}} onClick={createSource}>\n                            Create\n                        </Button>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import cx from \"classnames\";\nimport {getActiveAccordion, getSourceSearchResults} from \"../../features/home/homeSlice\";\nimport {useSelector} from \"react-redux\";\nimport {SelectedCount} from \"./RecentCrystalAccordionList\";\nimport {SourceAccordion} from \"./SourceAccordion\";\nimport {SourceCreateAccordion} from \"./SourceCreateAccordion\";\n\n\nexport const SourceAccordionList = () => {\n    let activeAccordion = useSelector(getActiveAccordion)\n    let dataset = useSelector(getSourceSearchResults)\n    console.log(\"dataset is \")\n    console.log(dataset)\n\n    return (\n        <div className={cx(\"crystal-accordion-list\", {\"hidden\": activeAccordion !== \"sources\"})}>\n            <SelectedCount/>\n            <SourceCreateAccordion/>\n            {dataset.map((d) => {\n                return <SourceAccordion dataset={d}/>\n            })}\n        </div>\n    )\n}","import {check} from \"../create/CreateAppMainCrystal\";\nimport React from \"react\";\n\nconst CrystalRow = ({data}) => {\n    return (\n        <tr>\n            <td>{check(data.name)}</td>\n            <td>{check(data.family)}</td>\n            <td>{check(data.Composition)}</td>\n            <td>{check(data.Polymorph)}</td>\n            <td>{check(data.Source.name)}</td>\n            <td>{check(data.CreatedAt)}</td>\n        </tr>\n    )\n}\n\nexport const CrystalTable = ({data}) => {\n    console.log(\"data is \")\n    console.log(data)\n    return (\n        <div className={\"crystal-info\"}>\n            <p style={{\"marginBottom\": \"5px\", \"fontSize\": \"14px\"}}>Crystals:</p>\n            <table className={\"crystal-table\"}>\n                <thead>\n                <tr>\n                    <th colSpan=\"1\">RefCode</th>\n                    <th colSpan=\"1\">Family</th>\n                    <th colSpan=\"1\">Composition</th>\n                    <th colSpan=\"1\">Polymorph</th>\n                    <th colSpan=\"1\">Source</th>\n                    <th colSpan=\"1\">Created</th>\n                </tr>\n                </thead>\n                <tbody>\n                {data.map(function (i) {\n                    return <CrystalRow data={i}/>\n                })}\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\n","import {Button, Form} from \"react-bootstrap\";\nimport {BsChevronDown, BsChevronRight} from \"react-icons/all\";\nimport {handleTickBox} from \"../../features/home/homeSlice\";\nimport React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport cx from \"classnames\"\nimport {CrystalTable} from \"./CrystalTable\";\nimport {addComps} from \"../../features/compare/compareSlice\";\nimport {getSubset} from \"../search/QueryResult\";\nimport {openCompareApp} from \"../../features/app/appSlice\";\n\n\nexport const SubsetAccordion = ({dataset}) => {\n    let dispatch = useDispatch()\n    const [open, setOpen] = useState(false)\n    const [loading, setLoading] = useState(false)\n    const [data, setData] = useState([])\n    const [loaded, setLoaded] = useState(false)\n    let token = useSelector(getAccessToken)\n\n    const addSubset = async () => {\n        const res = await getSubset(dataset.Name, token)\n        let names = res[\"data\"].map((x) => x.name)\n        dispatch(addComps(names))\n        dispatch(openCompareApp(\"\"))\n    }\n\n    const handleClick = () => {\n        setOpen(!open)\n        if (!loaded) {\n            setLoading(true)\n            fetch(`/api/search/crystal/subset/${dataset.Name}`, {\n                method: 'GET',\n                headers: {\n                    'Content-Type': 'application/json',\n                    'Authorization': `Bearer:${token}`,\n                },\n            })\n                .then(data => data.json())\n                .then((d) => {\n                    setLoading(false)\n                    setData(d.data)\n                    setLoaded(true)\n                })\n        }\n    }\n\n    if (loading)\n        return <div></div>\n\n    return (\n        <div className={\"accordion\"}>\n            <div className={\"accordion-header\"} >\n                <div className={\"group-1\"}>\n                    <button className={\"query-result-open-button\"} onClick={handleClick}>\n                        {open ? <BsChevronDown /> : <BsChevronRight/>}\n                    </button>\n                    <Form.Check aria-label=\"option 1\" onChange={() => dispatch(handleTickBox(dataset.name))}/>\n                    <p>{dataset.Name}</p>\n                </div>\n                <p>{`Size: ${dataset.Crystals}`}</p>\n                <Button onClick={addSubset} style={{\"fontSize\": \"13px\"}}>\n                    Compare\n                </Button>\n            </div>\n            <div className={cx(\"accordion-body\", {\"open\": open})}>\n                <CrystalTable data={data} />\n            </div>\n        </div>\n    )\n}","import cx from \"classnames\"\nimport React, {useState} from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {getAccessToken} from \"../../features/auth/authSlice\";\nimport {Badge, Button, Form} from \"react-bootstrap\";\nimport {\n    closeSubsetCreate, flushCreateSubset,\n    getCreateSubsetOpen\n} from \"../../features/home/homeSlice\";\nimport {CrystalTable} from \"./CrystalTable\";\n\nexport const SubsetCreateAccordion = () => {\n    const dispatch = useDispatch()\n    const [bodyOpen, setBodyOpen] = useState(false)\n    const [name, setName] = useState(\"\")\n    const [message, setMessage] = useState(\"\")\n    const [refCodes, setRefCodes] = useState([])\n    const [refCodeText, setRefCodeText] = useState(\"\")\n    const [disabled, setDisabled] = useState(true)\n    const [previewData, setPreviewData] = useState([])\n    let open = useSelector(getCreateSubsetOpen)\n\n    let token = useSelector(getAccessToken)\n    \n    const getPreview = () => {\n        if (refCodes.length > 0) {\n            fetch(`/api/crystal/by/refcode`, {\n                method: \"POST\",\n                headers: {\n                    'Authorization': `Bearer:${token}`,\n                    'Content-Type': 'application/json',\n                },\n                body: JSON.stringify({\n                    \"RefCodes\": refCodes,\n                })\n            }).then((data) => {\n                if (data.status === 401) {\n                    window.location.reload()\n                } else if (data.status === 200) {\n                    data.json().then((d) => {\n                        setPreviewData(d[\"data\"])\n                    })\n                }\n            })\n        }\n    }\n\n\n    const createSubset = () => {\n        setMessage(\"Creating Subset..\")\n        fetch(`/api/subset/`, {\n            method: \"POST\",\n            headers: {\n                'Authorization': `Bearer:${token}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\n                \"Name\": name,\n                \"CrystalIds\": refCodes,\n            })\n        }).then((resp) => {\n            if (resp.status !== 200) {\n                resp.json()\n                    .then((data) => {\n                        setMessage(`Creation Failed: ${data[\"message\"] || \"\"}`)\n                    })\n            } else {\n                resp.json()\n                    .then((data) => {\n                        setMessage(\"Creation Successful.\")\n                        fetch(`/api/search/subset/${name}?match=exact&aggregate=true`, {\n                            headers: {\n                                'Authorization': `Bearer:${token}`,\n                                'Content-Type': 'application/json',\n                            },\n                        }).then(data => data.json())\n                            .then(d => {\n                                dispatch(flushCreateSubset(d.data))\n                                setBodyOpen(false)\n                                setRefCodeText(\"\")\n                                setRefCodes([])\n                                setName(\"\")\n                                setMessage(\"\")\n                                setDisabled(true)\n                                dispatch(closeSubsetCreate(false))\n                            })\n                    })\n            }\n        })\n    }\n\n\n    return (\n        <>\n            <div className=\"home-app-create-accordion\">\n                <div className={cx(\"create-accordion-header\", {\"open\": open})}>\n                    <Badge bg=\"primary\">New</Badge>\n                    <Form.Group className=\"mb-0\" controlId=\"exampleForm.ControlInput1\">\n                        <Form.Label>Subset Name</Form.Label>\n                        <Form.Control size=\"sm\" type=\"text\" placeholder=\"\" value={name} onChange={(e) => {\n                            setName(e.target.value)\n                            setBodyOpen(true)\n                        }}/>\n                    </Form.Group>\n                    <p style={{\"fontSize\": \"11px\"}}>{message}</p>\n                    <div style={{\"display\": \"flex\"}}>\n                        <Button variant=\"danger\" size=\"sm\" style={{\"marginRight\": \"10px\"}} onClick={() => {\n                            setName(\"\")\n                            setBodyOpen(false)\n                            setRefCodeText(\"\")\n                            setRefCodes([])\n                            dispatch(closeSubsetCreate(false))\n                        }}>\n                            Discard\n                        </Button>\n                        {\n                            disabled && <Button variant=\"success\" size=\"sm\" disabled>\n                                Create\n                            </Button>\n                        }\n                        {\n                            !disabled && <Button size=\"sm\" variant=\"success\" onClick={createSubset}>\n                                Create\n                            </Button>\n                        }\n                    </div>\n                </div>\n                <div className={cx(\"create-accordion-body\", {\"open\": bodyOpen})} style={{\"display\": \"flex\", \"alignItems\":\"stretch\"}}>\n                    <div style={{\"width\": \"40%\"}}>\n                        <Form.Group className=\"mb-3\" controlId=\"exampleForm.ControlTextarea1\" style={{\"height\": \"80%\"}}>\n                            <Form.Label>Reference Codes (comma-seperated)</Form.Label>\n                            <Form.Control as=\"textarea\" rows={3} value={refCodeText} style={{\"height\": \"90%\", \"fontSize\": \"13px\"}}\n                                          onChange={(e) => {\n                                              setRefCodeText(e.target.value)\n                                              let r  = e.target.value.split(\",\").map((x) => {\n                                                  return x.trim()\n                                              })\n                                              setRefCodes(r)\n                                              setDisabled(e.target.value === \"\" || r.length === 0)\n                                              console.log(refCodes)\n                                          }}/>\n                        </Form.Group>\n                        <Button style={{\"width\": \"100%\"}} onClick={getPreview}>Preview</Button>\n                    </div>\n                    <div style={{\"flexGrow\": 1, \"padding\": \"10px 20px\", \"maxWidth\": \"60%\"}}>\n                        <CrystalTable data={previewData}/>\n                    </div>\n                </div>\n            </div>\n        </>\n    )\n}","import cx from \"classnames\";\nimport {getActiveAccordion, getSubsetSearchResults} from \"../../features/home/homeSlice\";\nimport {useSelector} from \"react-redux\";\nimport {SelectedCount} from \"./RecentCrystalAccordionList\";\nimport {SubsetAccordion} from \"./SubsetAccordion\";\nimport {SubsetCreateAccordion} from \"./SubsetCreateAccordion\";\n\n\nexport const SubsetAccordionList = () => {\n    let activeAccordion = useSelector(getActiveAccordion)\n    let dataset = useSelector(getSubsetSearchResults)\n    console.log(\"dataset is \")\n    console.log(dataset)\n\n    return (\n        <div className={cx(\"subset-accordion-list\", {\"hidden\": activeAccordion !== \"subsets\"})}>\n            <SelectedCount/>\n            <SubsetCreateAccordion/>\n            {dataset.map((d) => {\n                return <SubsetAccordion dataset={d}/>\n            })}\n        </div>\n    )\n}","import {HomeAppTopBar} from \"./HomeAppTopBar\";\nimport * as React from \"react\";\nimport {RecentCrystalAccordionList} from \"./RecentCrystalAccordionList\";\nimport {useSelector} from \"react-redux\";\nimport {getActiveAccordion} from \"../../features/home/homeSlice\";\nimport {CrystalAccordionList} from \"./CrystalAccordionList\";\nimport {SourceAccordionList} from \"./SourceAccordionList\";\nimport {SubsetAccordionList} from \"./SubsetAccordionList\";\n\n\nexport const HomeAppMain = ({}) => {\n    let activeAccordion = useSelector(getActiveAccordion)\n    console.log(`active accordion ${activeAccordion}`)\n\n    return (\n        <div className=\"home-app-main\">\n            <HomeAppTopBar/>\n            <RecentCrystalAccordionList/>\n            <CrystalAccordionList/>\n            <SubsetAccordionList/>\n            <SourceAccordionList/>\n        </div>\n    )\n}","import {useSelector} from \"react-redux\";\nimport {getOpenApp} from \"../../features/app/appSlice\";\nimport cx from \"classnames\";\nimport * as React from \"react\";\nimport \"./home.scss\"\nimport {HomeAppTopBar} from \"./HomeAppTopBar\";\nimport {HomeAppMain} from \"./HomeAppMain\";\n\n\nexport const HomeApp = () => {\n    const openApp = useSelector(getOpenApp)\n\n    return (\n        <div className={cx(\"home-app\", {\"hidden\": openApp !== \"home\"})}>\n            <HomeAppMain/>\n        </div>\n    )\n}","import * as React from \"react\";\nimport { CompareApp } from \"./compare/CompareApp\"\nimport { ViewApp} from \"./view/ViewApp\";\nimport {CreateApp} from \"./create/CreateApp\";\nimport {HomeApp} from \"./home/HomeApp\";\n\nfunction ApplicationBay() {\n    return (\n        <div className=\"application-bay\">\n            <HomeApp/>\n            <CreateApp/>\n            <CompareApp/>\n            <ViewApp/>\n        </div>\n    )\n}\n\nexport default ApplicationBay;","import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    settingsModalOpened: false,\n    potentialBackend: \"\",\n    backend: \"\"\n};\n\nconst settingsModalSlice = createSlice({\n    name: 'settingsModalOpened',\n    initialState,\n    reducers: {\n        openSettingsModal(state, action) {\n            // ✅ This \"mutating\" code is okay inside of createSlice!\n            state[\"settingsModalOpened\"] = true;\n            return state;\n        },\n        closeSettingsModal(state, action) {\n            // ✅ This \"mutating\" code is okay inside of createSlice!\n            state[\"settingsModalOpened\"] = false;\n            return state;\n        },\n        changePotentialBackend(state, action) {\n            let url = action.payload\n            console.log(\"Potential url is \" + url)\n            state[\"potentialBackend\"] = url\n            return state;\n        },\n        setNewBackend(state, action) {\n            let url = action.payload\n            state['backend'] = url\n            return state\n        }\n    }\n})\n\nexport const { openSettingsModal, closeSettingsModal, changePotentialBackend, setNewBackend } = settingsModalSlice.actions\n\nexport default settingsModalSlice.reducer\n\nexport const getSettingsModalOpened = createSelector((state) => state.settingsModalSlice, (p) =>\n    p[\"settingsModalOpened\"]\n)\n\nexport const getPotentialBackend = createSelector((state) => state.settingsModalSlice, (p) =>\n    p[\"potentialBackend\"]\n)\n\nexport const getBackend = createSelector((state) => state.settingsModalSlice, (p) =>\n    p[\"backend\"]\n)","import * as React from \"react\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {openSettingsModal} from \"../features/settings/settingsFooterSlice\";\nimport {addToken, setLoggedIn} from \"../features/auth/authSlice\";\nimport {getSearchPanelOpened, openSearchPanel, toggleSearchPanel} from \"../features/search/searchSlice\";\nimport useToken from \"../useToken\";\nimport {getOpenApp, openCompareApp, openCreateApp, openHomeApp, openViewApp} from \"../features/app/appSlice\";\nimport cx from \"classnames\"\nimport {OverlayTrigger, Tooltip} from \"react-bootstrap\";\n\n\n\nconst LeftSideBarButton = ({ id, buttonIcon, onClick }) => {\n    let openApp = useSelector(getOpenApp)\n\n    const renderTooltip = (props) => (\n        <Tooltip id=\"button-tooltip\" {...props}>\n            {id.replace(\"-button\", \"\")}\n        </Tooltip>\n    );\n\n    return (\n        <>\n            <OverlayTrigger\n                placement=\"right\"\n                delay={{ show: 100, hide: 100 }}\n                overlay={renderTooltip}\n            >\n                <button onClick={onClick} className={cx(\"left-side-bar-button\", {\"selected\": openApp === id.replace(\"-button\", \"\").toLowerCase()})}>\n                    { buttonIcon }\n                </button>\n            </OverlayTrigger>\n        </>\n    )\n}\n\nexport default LeftSideBarButton;","import ReactDOM from 'react-dom'\nimport React, { useRef, useState } from 'react'\nimport { Canvas, useFrame, Color } from '@react-three/fiber'\n\nexport default function Ball(props) {\n    // This reference gives us direct access to the THREE.Mesh object\n    const ref = useRef()\n    // Hold state for hovered and clicked events\n    const [hovered, hover] = useState(false)\n    const [clicked, click] = useState(false)\n    // Subscribe this component to the render-loop, rotate the mesh every frame\n    useFrame((state, delta) => {\n        ref.current.rotation.y += 0.005; ref.current.rotation.x += 0.01\n    })\n    // Return the preview, these are regular Threejs elements expressed in JSX\n    return (\n        <mesh\n            {...props}\n            ref={ref}\n            scale={clicked ? 1.2 : 1}\n            onClick={(event) => click(!clicked)}\n            onPointerOver={(event) => hover(true)}\n            onPointerOut={(event) => hover(false)}>\n            <octahedronGeometry args={[2, 0]} />\n            <meshBasicMaterial wireframe={true} color={hovered ? '#9ca3af' : '#9ca3af'} />\n        </mesh>\n    )\n}\n","import * as React from \"react\";\nimport Ball from \"../Logo\";\nimport {Canvas} from \"@react-three/fiber\";\n\n\nexport const SideBarLogo = () => {\n    return (\n        <div id=\"side-bar-logo\">\n            <Canvas style={{'height': '50px', 'width': '50px'}}>\n                <ambientLight />\n                <pointLight position={[2, 2, 2]} />\n                <Ball position={[0, 0, 0]} />\n            </Canvas>\n            <div style={{\"margin-left\": \"5px\"}}>\n                <p style={{\"font-size\": \"x-small\", \"margin-bottom\": \"-3px\", \"font-family\": \"monospace\"}}>Open</p>\n                <p style={{\"font-size\": \"x-small\", \"margin-left\":\"8px\", \"font-family\": \"monospace\"}}>Crystal</p>\n            </div>\n        </div>\n    )\n}","import * as React from \"react\";\nimport LeftSideBarButton from \"./LeftSideBarButton\";\nimport AddIcon from '@mui/icons-material/Add';\nimport SearchIcon from '@mui/icons-material/Search';\nimport ManageAccountsIcon from '@mui/icons-material/ManageAccounts';\nimport {SideBarLogo} from \"./SideBarLogo\";\nimport LogoutIcon from '@mui/icons-material/Logout';\nimport HelpIcon from '@mui/icons-material/Help';\nimport InfoIcon from '@mui/icons-material/Info';\nimport PreviewIcon from '@mui/icons-material/Preview';\nimport CompareIcon from '@mui/icons-material/Compare';\nimport HomeIcon from '@mui/icons-material/Home'\nimport {openCreateApp, openHomeApp, openCompareApp, openViewApp} from \"../features/app/appSlice\";\nimport {useDispatch} from \"react-redux\";\n\n\nconst LeftSideBar = () => {\n    const dispatch = useDispatch()\n\n    return (\n        <div  id=\"left-side-bar\">\n            <div className={\"top-buttons\"}>\n                <LeftSideBarButton id=\"Home-button\" buttonIcon={<HomeIcon/>} onClick={() => dispatch(openHomeApp(\"\"))}/>\n                <LeftSideBarButton id=\"Create-button\" buttonIcon={<AddIcon/>} onClick={() => dispatch(openCreateApp(\"\"))}/>\n                <LeftSideBarButton id=\"Compare-button\" buttonIcon={<CompareIcon/>} onClick={() => dispatch(openCompareApp(\"\"))}/>\n                <LeftSideBarButton id=\"View-button\" buttonIcon={<PreviewIcon/>} onClick={() => dispatch(openViewApp(\"\"))}/>\n            </div>\n            <div className={\"bottom-buttons\"}>\n                <LeftSideBarButton id=\"Info-button\" buttonIcon={<InfoIcon/>}/>\n            </div>\n        </div>\n    )\n\n}\n\nexport default LeftSideBar;","import './Dashboard.scss'\nimport {BrowserRouter, Route} from \"react-router-dom\";\nimport * as React from \"react\";\nimport '@trendmicro/react-sidenav/dist/react-sidenav.css';\nimport ApplicationBay from \"./ApplicationBay\";\nimport SearchPanel from \"./search/SearchPanel\";\nimport PreviewPanel from \"./PreviewPanel\";\nimport LeftSideBar from \"./LeftSideBar\";\n\n\nfunction Dashboard() {\n\n    return (\n        <div className=\"dashboard\">\n            <LeftSideBar/>\n            <ApplicationBay/>\n        </div>\n    )\n}\n\nexport default Dashboard;","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    closeCreateModal,\n    getCreateModalOpened,\n} from \"../../features/create/createSlice\";\nimport CloseIcon from \"@mui/icons-material/Close\";\nimport React, {useState} from \"react\";\nimport ScienceIcon from '@mui/icons-material/Science';\nimport ListIcon from '@mui/icons-material/List';\nimport StorageIcon from '@mui/icons-material/Storage';\nimport cx from 'classnames';\nimport {InputField} from '../base/InputField';\nimport {retry} from \"@reduxjs/toolkit/query\";\n\n\n\n\nfunction CreateCrystalPanel(props) {\n    return (\n        <div id=\"create-crystal-panel\" className=\"create-crystal-panel\">\n            <h6>From CIF:</h6>\n            <input type=\"file\" id=\"myFile\" name=\"filename\"/>\n            <div className=\"create-crystal-options\">\n                <div className=\"create-crystal-options-meta\">\n                    <InputField label={\"Name\"} ph={\"Name\"} name={\"name-input\"} id={\"name-input\"} />\n                </div>\n                <div className=\"create-crystal-options-geometry\">\n\n                </div>\n            </div>\n        </div>\n    )\n}\n\nfunction CreateSourcePanel(props) {\n    return (\n        <div id=\"create-source-panel\">\n\n        </div>\n    )\n}\n\nfunction CreateSubsetPanel(props) {\n    return (\n        <div id=\"create-subset-panel\">\n\n        </div>\n    )\n}\n\nfunction CreateModal({}) {\n    const dispatch = useDispatch()\n    const modalOpened = useSelector(getCreateModalOpened)\n\n    const [tab, setTab] = useState('crystal')\n    const getClass = (currentTab, thisTab) => {\n        return cx(\"create-modal-tab-button\", {\"selected\": currentTab === thisTab})\n    }\n\n    const getTabContent = (currentTab) => {\n        if (currentTab === \"crystal\")\n            return <CreateCrystalPanel/>\n        else if (currentTab === \"source\")\n            return <CreateSourcePanel/>\n        else if (currentTab === \"subset\")\n            return <CreateSubsetPanel/>\n    }\n\n    return (\n        <div className={cx(\"create-modal\", {\"open\": modalOpened})} >\n            <div className=\"create-modal-content\">\n                <div className=\"close-button-container\">\n                    <button onClick={() => dispatch(closeCreateModal(false))}>\n                        <CloseIcon fontSize={\"small\"}/>\n                    </button>\n                </div>\n                <div id=\"create-modal-tabs\">\n                    <button className={getClass(\"crystal\", tab)} onClick={() => setTab(\"crystal\")}>\n                        <ScienceIcon fontSize={\"small\"}/>\n                        Crystal\n                    </button>\n                    <button className={getClass(\"subset\", tab)} onClick={() => setTab(\"subset\")}>\n                        <ListIcon fontSize={\"small\"}/>\n                        Subset\n                    </button>\n                    <button className={getClass(\"source\", tab)} onClick={() => setTab(\"source\")}>\n                        <StorageIcon fontSize={\"small\"}/>\n                        Source\n                    </button>\n                </div>\n                { getTabContent(tab) }\n            </div>\n        </div>\n    )\n}\n\nexport default CreateModal;","import {useDispatch, useSelector} from \"react-redux\";\nimport {\n    changePotentialBackend,\n    closeSettingsModal,\n    getPotentialBackend,\n    getSettingsModalOpened, setNewBackend\n} from \"../features/settings/settingsFooterSlice\";\n\n\nfunction SettingsModal({}) {\n    let vis  = 'none'\n    const modalOpened = useSelector(getSettingsModalOpened)\n    console.log(modalOpened)\n    if (modalOpened)\n        vis = 'block'\n\n    const dispatch = useDispatch()\n\n    const handleCloseButtonClick = () => {\n        console.log(\"Close Modal button\")\n        dispatch(closeSettingsModal(vis))\n    }\n    let potentialEndpoint = useSelector(getPotentialBackend)\n\n    const handleConnectButtonClick = () => {\n\n        const healthCheck = async () => {\n            console.log(\"Using endpoint: \" + potentialEndpoint)\n\n            fetch(potentialEndpoint)\n                .then(async response => {\n                    const resp = await response;\n                    console.log(resp)\n                    const data = resp.json();\n\n                    // check for error response\n                    if (!response.ok) {\n                        // get error message from body or default to response statusText\n                        const error = (data && data.message) || response.statusText;\n                        return Promise.reject(error);\n                    }\n                    return true;\n                })\n                .catch(error => {\n                    console.error('There was an error!', error);\n                    return false;\n                });\n        }\n\n        healthCheck().then(function (result) {\n            if (result)\n                setNewBackend(potentialEndpoint)\n        })\n    }\n\n    const handleURLChange = (e) => {\n        console.log(\"Changing Potential Backend\")\n        console.log(e.target.value)\n        dispatch(changePotentialBackend(e.target.value))\n    }\n\n    return (\n        <div className=\"settings-modal\" style={{'display': vis}}>\n            <div className=\"settings-modal-content\">\n                <div>\n                    <p>Server Address:</p>\n                    <input type=\"text\" onChange={e => handleURLChange(e)}/>\n                </div>\n                <div className=\"settings-modal-footer\">\n                    <button id=\"close-settings-modal-button\" className=\"settings-modal-button\" onClick={handleConnectButtonClick}>Connect</button>\n                    <button className=\"settings-modal-button\" onClick={handleCloseButtonClick}>Close</button>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default SettingsModal;","import '../App.scss';\nimport * as React from \"react\";\nimport LogoutIcon from \"@mui/icons-material/Logout\";\nimport HelpIcon from '@mui/icons-material/Help';\n\nimport AccountCircleIcon from \"@mui/icons-material/AccountCircle\"\nimport {Canvas} from \"@react-three/fiber\";\nimport Ball from \"../Logo\";\nimport {useDispatch} from \"react-redux\";\nimport {addAccessToken, addRefreshToken} from \"../features/auth/authSlice\";\n\n\nexport const AppHeader = () => {\n    const dispatch = useDispatch()\n\n    return (\n        <div className={\"app-header\"}>\n            <div className={\"content-left\"}>\n                <Canvas style={{'height': '50px', 'width': '50px'}}>\n                    <ambientLight />\n                    <pointLight position={[2, 2, 2]} />\n                    <Ball position={[0, 0, 0]} />\n                </Canvas>\n                <div style={{\"margin-left\": \"5px\"}}>\n                    <p style={{\"font-size\": \"x-small\", \"margin-bottom\": \"-3px\", \"padding-top\":\"5px\", \"font-family\": \"monospace\"}}>Open</p>\n                    <p style={{\"font-size\": \"x-small\", \"margin-left\":\"8px\", \"font-family\": \"monospace\"}}>Crystal</p>\n                </div>\n            </div>\n            <div className={\"content-right\"}>\n                <button className={\"header-button\"} onClick={() => sessionStorage.clear() }>\n                    <AccountCircleIcon/>\n                    <p>Account</p>\n                </button>\n                <button className={\"header-button\"} onClick={() => sessionStorage.clear() }>\n                    <HelpIcon/>\n                    <p>Help</p>\n                </button>\n                <button className={\"header-button\"} onClick={() => {\n                    sessionStorage.clear()\n                    dispatch(addAccessToken(undefined))\n                    dispatch(addRefreshToken(undefined))\n                    window.location.reload()\n                } }>\n                    <LogoutIcon/>\n                </button>\n            </div>\n        </div>\n    )\n}","import './App.scss';\nimport Dashboard from './components/Dashboard';\nimport * as React from \"react\";\nimport LeftSideBar from \"./components/LeftSideBar\"\nimport CreateModal from \"./components/create/CreateModal\";\nimport SettingsModal from \"./components/SettingsModal\";\nimport {AppHeader} from \"./components/AppHeader\";\n\nfunction App() {\n\n    return (\n        <div className=\"App\">\n            <AppHeader/>\n            <CreateModal/>\n            <SettingsModal/>\n            <Dashboard/>\n        </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { createSlice, createSelector } from '@reduxjs/toolkit'\n\nconst initialState = {\n    \"openOptionsPanel\": \"NONE\",\n    \"openApplicationBay\": \"View-app\"\n}\n\nconst openOptionsPanelSlice = createSlice({\n    name: 'openApplication',\n    initialState,\n    reducers: {\n        viewToggled(state, action) {\n            // ✅ This \"mutating\" code is okay inside of createSlice!\n            if (state[\"openOptionsPanel\"] === \"View-panel\")\n                state[\"openOptionsPanel\"] = \"NONE\"\n            else {\n                state[\"openOptionsPanel\"] = \"View-panel\"\n                state[\"openApplicationBay\"] = \"View-app\"\n            }\n\n            return state;\n        },\n        compareToggled(state, action) {\n            if (state[\"openOptionsPanel\"] === \"Compare-panel\")\n                state[\"openOptionsPanel\"] = \"NONE\"\n            else {\n                state[\"openOptionsPanel\"] = \"Compare-panel\"\n                state[\"openApplicationBay\"] = \"Compare-app\"\n            }\n\n            return state;\n        },\n        databaseToggled(state, action) {\n            if (state[\"openOptionsPanel\"] === \"Database-panel\")\n                state[\"openOptionsPanel\"] = \"NONE\"\n            else {\n                state[\"openOptionsPanel\"] = \"Database-panel\"\n                state[\"openApplicationBay\"] = \"Database-app\"\n            }\n            return state;\n        },\n        settingsToggled(state, action) {\n            if (state[\"openOptionsPanel\"] === \"Settings-panel\")\n                state[\"openOptionsPanel\"] = \"NONE\"\n            else {\n                state[\"openOptionsPanel\"] = \"Settings-panel\"\n                state[\"openApplicationBay\"] = \"Settings-app\"\n            }\n            return state;\n        }\n    }\n})\n\nexport const { viewToggled, compareToggled, databaseToggled, settingsToggled } = openOptionsPanelSlice.actions\n\nexport default openOptionsPanelSlice.reducer\n\nexport const getOpenOptionsPanel = createSelector((state) => state.openOptionsPanelSlice, (p) =>\n    p[\"openOptionsPanel\"]\n)\n\nexport const getOpenApplicationBay = createSelector((state) => state.openOptionsPanelSlice, (p) =>\n    p[\"openApplicationBay\"]\n)","import {configureStore} from '@reduxjs/toolkit'\n\nimport optionsReducer from './features/options/optionsSlice'\nimport settingsReducer from './features/settings/settingsFooterSlice'\nimport authReducer from './features/auth/authSlice'\nimport compareReducer from './features/compare/compareSlice'\nimport createReducer from './features/create/createSlice'\nimport searchReducer from './features/search/searchSlice'\nimport previewReducer from './features/preview/previewSlice'\nimport appReducer from './features/app/appSlice'\nimport viewReducer from './features/view/viewSlice'\nimport homeReducer from './features/home/homeSlice'\n\nconst store = configureStore({\n    reducer: {\n        // Define a top-level state field named `todos`, handled by `todosReducer`\n        openOptionsPanelSlice: optionsReducer,\n        settingsModalSlice: settingsReducer,\n        authSlice: authReducer,\n        compareSlice: compareReducer,\n        createModalSlice: createReducer,\n        searchPanelSlice: searchReducer,\n        previewSlice: previewReducer,\n        appSlice: appReducer,\n        viewSlice: viewReducer,\n        homeSlice: homeReducer,\n    }\n})\n\nexport default store","import * as React from 'react';\n\nexport const TabSelector = ({\n                                isActive,\n                                children,\n                                onClick,\n                            }) => (\n    <button\n        className={`mr-8 group inline-flex items-center px-2 py-4 border-b-2 font-medium text-sm leading-5 cursor-pointer whitespace-nowrap ${\n            isActive\n                ? 'border-indigo-500 text-indigo-600 focus:outline-none focus:text-indigo-800 focus:border-indigo-700'\n                : 'border-transparent text-gray-500 hover:text-gray-600 hover:border-gray-300 focus:text-gray-600 focus:border-gray-300'\n        }`}\n        onClick={onClick}\n    >\n        {children}\n    </button>\n);","import './index.scss'\nimport {useReducer, useState} from \"react\";\nimport * as React from \"react\";\nimport PropTypes from 'prop-types';\nimport { useTabs, TabPanel } from \"react-headless-tabs\"\nimport {TabSelector} from \"./components/TabSelector\";\nimport 'tailwindcss/tailwind.css';\nimport {addAccessToken, addRefreshToken, addToken, refreshToken, setLoggedIn} from \"./features/auth/authSlice\";\nimport {useDispatch} from \"react-redux\";\nimport { Canvas, useFrame } from '@react-three/fiber'\nimport Ball from \"./Logo\";\n\n\nasync function loginUser(credentials) {\n    console.log(\"doing something\")\n    return fetch('/api/token/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n    })\n        .then(data => data.json())\n}\n\nasync function createUser(credentials) {\n    return fetch('/api/user/', {\n        method: 'POST',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify(credentials)\n    })\n        .then(data => data.json())\n}\n\n\nexport function LoginPage({setToken}) {\n    //const [formData, setFormData] = useReducer(formReducer, {});\n    const [selectedTab, setSelectedTab] = useTabs([\n        'Login',\n        'New Account',\n    ]);\n\n    const [submitting, setSubmitting] = useState(false);\n    const [username, setUserName] = useState();\n    const [password, setPassword] = useState();\n    const [newusername, setNewUserName] = useState();\n    const [newpassword, setNewPassword] = useState();\n    const [email, setEmail] = useState()\n    let dispatch = useDispatch()\n\n    const handleSubmit = async e => {\n        e.preventDefault();\n        const token = await loginUser({\n            username,\n            password\n        });\n\n        console.log(token)\n        if (token !== undefined) {\n            token['user'] = username;\n            setToken(token)\n            dispatch(setLoggedIn({\"loggedIn\": true}))\n            dispatch(addAccessToken(token[\"access\"]))\n            dispatch(addRefreshToken(token[\"refresh\"]))\n        }\n    }\n\n    const handleCreation = async e => {\n        e.preventDefault();\n        const token = await createUser({\n            'username': newusername,\n            'email': email,\n            'password': newpassword\n        });\n        //sessionStorage.setItem('jwtToken', token);\n        token['user'] = username;\n        setToken(token)\n        dispatch(setLoggedIn({\"loggedIn\": true}))\n        dispatch(addAccessToken(token[\"access\"]))\n        dispatch(addRefreshToken(token[\"refresh\"]))\n    }\n\n    return (\n        <div id=\"login-page\">\n            <div id=\"login-tabs\">\n                <nav className=\"flex border-b border-gray-300\">\n                    <TabSelector\n                        isActive={selectedTab === 'Login'}\n                        onClick={() => setSelectedTab('Login')}\n                    >\n                        Login\n                    </TabSelector>\n                    <TabSelector\n                        isActive={selectedTab === 'New Account'}\n                        onClick={() => setSelectedTab('New Account')}\n                    >\n                        New Account\n                    </TabSelector>\n                </nav>\n                <div className=\"p-4\">\n                    <TabPanel hidden={selectedTab !== 'Login'}>\n                        <Canvas style={{'height': '80px'}}>\n                            <ambientLight />\n                            <pointLight position={[2, 2, 2]} />\n                            <Ball position={[0, 0, 0]} />\n                        </Canvas>\n                        <h1 id=\"main-title\">OpenCrystal</h1>\n                        <form onSubmit={handleSubmit}>\n                            <fieldset>\n                                <p>Username:</p>\n                                <input type=\"text\" placeholder=\"Username\" id=\"username-input\"\n                                       onChange={e => setUserName(e.target.value)}/>\n                                <p>Password:</p>\n                                <input type=\"password\" placeholder=\"Password\" id=\"password-input\"\n                                       onChange={e => setPassword(e.target.value)}/>\n                            </fieldset>\n                            <button type=\"submit\" id=\"submit-login-button\">Submit</button>\n                        </form>\n                    </TabPanel>\n                    <TabPanel hidden={selectedTab !== 'New Account'}>\n                        <form onSubmit={handleCreation}>\n                            <fieldset>\n                                <p>Email:</p>\n                                <input type=\"text\" placeholder=\"Email\" id=\"new-email-input\"\n                                       onChange={e => setEmail(e.target.value)}/>\n                                <p>Username:</p>\n                                <input type=\"text\" placeholder=\"Username\" id=\"new-username-input\"\n                                       onChange={e => setNewUserName(e.target.value)}/>\n                                <p>Password:</p>\n                                <input type=\"password\" placeholder=\"Password\" id=\"new-password-input\"\n                                       onChange={e => setNewPassword(e.target.value)}/>\n                                <p>Repeat Password:</p>\n                                <input type=\"password\" placeholder=\"Password\" id=\"repeat-password-input\"\n                                       onChange={e => setNewPassword(e.target.value)}/>\n                            </fieldset>\n                            <button type=\"submit\" id=\"submit-create-button\">Create</button>\n                        </form>\n                    </TabPanel>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nLoginPage.propTypes = {\n    setToken: PropTypes.func.isRequired\n}\n\n","import React, {useEffect, useState} from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { createStore } from 'redux';\nimport store from './store';\nimport {Provider, useDispatch, useSelector} from 'react-redux';\nimport {LoginPage} from './Login';\nimport {BrowserRouter, Route, Switch} from \"react-router-dom\";\nimport {\n    addAccessToken,\n    addRefreshToken,\n    getAccessToken,\n    getCurrentUser,\n    getLoggedIn,\n    getRefreshToken\n} from \"./features/auth/authSlice\";\nimport useToken from \"./useToken\";\n\n\nfunction Index({}) {\n    const { token, setToken, clearToken } = useToken()\n    const [tokenChecked, setTokenChecked] = useState(false)\n    let dispatch = useDispatch()\n    let user = useSelector(getCurrentUser)\n\n\n    useEffect(() => {\n        if (!token)\n            return\n\n        if (!token.access || !token.refresh) {\n            return\n        }\n\n        fetch(\"/api/token/refresh\", {\n            method: \"POST\",\n            headers: {\n                \"Authorization\": `Bearer:${token[\"access\"]}`,\n                'Content-Type': 'application/json',\n            },\n            body: JSON.stringify({\"refresh\": token[\"refresh\"]})\n        })\n            .then((resp) => {\n                if (resp.status !== 200) {\n                    sessionStorage.clear()\n                    dispatch(addAccessToken(undefined))\n                    dispatch(addRefreshToken(undefined))\n                } else {\n                    resp.json()\n                        .then((r) => {\n                            console.log(r)\n                            let jwt = {\n                                \"access\": r.access,\n                                \"refresh\": r.refresh,\n                                \"user\": user\n                            }\n                            sessionStorage.setItem('token', JSON.stringify(jwt))\n                            setTokenChecked(true)\n                        })\n                }\n            })\n    })\n\n\n    if(!token || !tokenChecked) {\n        return <LoginPage  setToken={setToken}/>\n    }\n    dispatch(addAccessToken(token[\"access\"]))\n    dispatch(addRefreshToken(token[\"refresh\"]))\n\n    return (\n        <div className=\"wrapper\">\n            <BrowserRouter>\n                <Switch>\n                    <Route path=\"/\">\n                        <App />\n                    </Route>\n                </Switch>\n            </BrowserRouter>\n        </div>\n    );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n      <Provider store={store}>\n          <Index/>\n      </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","import {useState} from 'react';\n\nexport default function useToken() {\n    const getToken = () => {\n        const tokenString = sessionStorage.getItem('token');\n        return JSON.parse(tokenString)\n    };\n\n    const [token, setToken] = useState(getToken());\n\n    const saveToken = userToken => {\n        sessionStorage.setItem('token', JSON.stringify(userToken));\n        setToken(userToken);\n    };\n\n    const clearToken = () => {\n        sessionStorage.removeItem('token')\n        setToken(undefined)\n    }\n\n    return {\n        setToken: saveToken,\n        token,\n        clearToken: clearToken,\n    }\n}\n"],"sourceRoot":""}